1
Remember Azimuth
2
Remember (store) an Azimuth value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
3
Note Type
4
Determines the type of Note to remember.
5
Value
6
The value to be remembered.
7
For Job
8
The ID of the Job for which this Note is remembered. If omitted - ForJob is taken to be the ID of the Job that issued this Remember Command.
9
Remember Boolean
10
Remember (store) a Boolean value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
11
Remember Integer
12
Remember (store) an Integer value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
13
Remember Real
14
Remember (store) a Real value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
15
Remember String
16
Remember (store) a String value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
17
Remember Enumeration
18
Remember (store) an Enumeration value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
19
Remember Time
20
Remember (store) a Time value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
21
Remember Timespan
22
Remember (store) a Timespan value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
23
Remember Current Time
24
Remember (store) the current time in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
25
The memory note in which to store the current time.
26
Remember Sector
27
Remember (store) a Sector value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
28
Remember Object
29
Remember (store) an Object value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
30
Remember Object Collection
31
Remember (store) a Object Collection value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
32
Remember Point
33
Remember (store) a Point value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
34
Remember Polyline
35
Remember (store) a Polyline value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
36
Remember Polygon
37
Remember (store) a Polygon value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
38
Remember Ellipse
39
Remember (store) an Ellipse value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
40
Remember Unit
41
Remember (store) a Unit value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
42
Remember Unit Collection
43
Remember (store) a Unit Collection value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
44
Remember Task
45
Remember (store) a Task value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
46
Remember Cluster
47
Remember (store) a Cluster value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
48
Remember Strike Point
49
Remember (store) a StrikePoint value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
50
Remember Native Type
51
Remember (store) a NativeType value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value.
52
Conditionally Remember String
53
Remember (store) the specified string Value in the memory of the receiving Unit under the specified Note Type, for a Job whose ID is the specified ForJob value, only if there is no active Job in the receiving Unit for which current value of this memory note is a non-null string, otherwise - current value remains as is.
54
Ask Enumeration
55
Present a question (typically to a user) and possibly remember (store) the answer (an Enumeration value) in the memory of the receiving Unit, for a Job whose ID is the specified ForJob value - if and when an answer is received.
56
Question
57
The phrasing of the question to be presented.
58
On Behalf of
59
Only specified if the question is being asked on behalf of another Unit (typically the commanding Unit). If omitted - the question is considered to be asked by the executing Unit itself.
60
Answer Type
61
The type of Enumeration Value that should be used for providing an answer to the question.
62
Answer Note Type
63
The Memory Note in which to remember the answer - if and when it is received.
64
The ID of the Job for which the Note containing the answer is remembered. If omitted - ForJob is taken to be the ID of the Job that issued this Ask Command.
65
Send Event
66
Send the specified  Event to the specified Recipients.
67
Event
68
Recipients
69
End Task
70
Immediately end execution of the containing Task. This command may only be placed inside a Cell, i.e. it may not be used as a Reaction Command in a Reaction Rule.
Note that for iterative Commands, "EndTask" only ends the Task for the current iteration. Successive iterations are completely unaffected.
71
Recall Azimuth for Job
72
Returns a Azimuth value that was previousely remembered (through RememberAzimuth Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - "false" is returned.
73
The type of Note to recall.
74
Unit
75
The Unit whose memory is checked.
76
The ID of the Job for which the recalled Note was remembered.
If a Null Integer is specified - ForJob is considered to be a wildcard, i.e. it doesn't matter for which Job the Note was remembered.
77
Recall Boolean for Job
78
Returns a Boolean value that was previousely remembered (through RememberBoolean Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - "false" is returned.
79
Recall Integer for Job
80
Returns an Integer value that was previousely remembered (through RememberInteger Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullInteger is returned.
81
Recall Real for Job
82
Returns a Real value that was previousely remembered (through RememberReal Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullReal is returned.
83
Recall String for Job
84
Returns a String value that was previousely remembered (through RememberString Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - an empty String is returned.
85
Recall Enumeration for Job
86
Returns an Enumeration value that was previousely remembered (through RememberEnumeration Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - NullEnumeration is returned.
87
Recall Time for Job
88
Returns a Time value that was previousely remembered (through RememberTime Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullTime is returned.
89
Recall Timespan for Job
90
Returns a Timespan value that was previousely remembered (through RememberTimespan Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullTimespan is returned.
91
Recall Sector for Job
92
Returns a Sector value that was previousely remembered (through RememberSector Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullSector is returned.
93
Recall Point for Job
94
Returns a Point value that was previousely remembered (through RememberPoint Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullPoint is returned.
95
Recall Polyline for Job
96
Returns a Polyline value that was previousely remembered (through RememberPolyline Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullPolyline is returned.
97
Recall Polygon for Job
98
Returns a Polygon value that was previousely remembered (through RememberPolygon Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - an EmptyPolygon is returned.
99
Recall Ellipse for Job
100
Returns an Ellipse value that was previousely remembered (through RememberEllipse Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullEllipse is returned.
101
Recall Unit for Job
102
Returns a Unit value that was previousely remembered (through RememberUnit Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullUnit is returned.
103
Recall Unit Collection for Job
104
Returns a UnitCollection value that was previousely remembered (through RememberUnitCollection Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullUnitCollection is returned.
105
Recall Object for Job
106
Returns an Object value that was previousely remembered (through RememberObject Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullObject is returned.
107
Recall Object Collection for Job
108
Returns an Object Collection value that was previousely remembered (through RememberObjectCollection Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - an EmptyObjectCollection is returned.
109
Recall Task for Job
110
Returns an Task value that was previousely remembered (through RememberTask Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullTask is returned.
111
Recall Cluster for Job
112
Returns a Cluster value that was previousely remembered (through RememberCluster Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullCluster is returned.
113
Recall Strike Point for Job
114
Returns a Strike Point value that was previousely remembered (through RememberStrikePoint Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullStrikePoint is returned.
115
Recall Native Type for Job
116
Returns a NativeType value that was previousely remembered (through RememberNativeType Atomic Command) in the specified Unit for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer).
If the specified NoteType was not previously remembered in the specified Unit for that Job - a NullNativeType is returned.
117
Units Remembering Boolean for Job
118
Returns all Units found in the specified Subjects collection, whose memory contains the specified NoteValue for the specified NoteType, remembered for a Job with the specified ForJob ID (for any Job if ForJob equals Null Integer), i.e. all Units Ui for which Recall(NoteType,Ui,ForJob) = NoteValue.
119
Subjects
120
The Units whose memory repositories are inspected.
121
The type of Note to look for.
122
Note Value
123
The value to look for.
124
The ID of the Job for which the Note was remembered.
If a Null Integer is specified - ForJob is considered to be a wildcard, i.e. it doesn't matter for which Job the Note was remembered.
125
Units Remembering Integer for Job
126
Units Remembering Unit for Job
127
Units Remembering String for Job
128
Units Remembering Object for Job
129
Units Remembering Time for Job
130
Units Remembering Enumeration for Job
131
The Unit
132
Returns the Unit for which the Doctrinal Command/Reaction Rule is being planned.
133
The Job ID
134
Returns the Job ID that is associated with the Doctrinal Command being planned. If the Doctrinal Command is not associated with any Job ID - a NullInteger is returned.
135
Task Leaders
136
Returns a the top Units ("Leaders") assigned to all instances of the specified Task whose instance index (1-based) is between the specified FromInstance and ToInstance.
Relevant for Doctrinal Commands only.
137
Task
138
From Instance
139
To Instance
140
Task Leaf Units
141
Returns all lower level Units ("leaves" of the OrBat tree) assigned to all instances of the specified Task whose instance index (1-based) is between the specified FromInstance and ToInstance.
Relevant for Doctrinal Commands only.
142
Start Location
143
Returns the Start Location defined for the planned Doctrinal Command/Reaction Rule.
144
Current Iteration Number
145
Returns the sequence number (1-based) of the current iteration of the planned Doctrinal Command.
Relevant for Iterative Doctrinal Commands only.
146
Current Task Instance
147
Returns the Instance index (1-based) of the currently planned Task.
Relevant for Doctrinal Commands only.
148
Candidate Unit
149
Returns the Unit currently considered (by the Manning Algorithm) as a candidate for the containing Manning Element.
This Function may only be used in a Condition Expression and Suitability Grade Expression of a Manning Element.
150
Start Time
151
Returns the Start Time defined for the planned Doctrinal Command/Reaction Rule.
152
Event Sender
153
Returns the Unit that sent the Event that triggered the Reaction Rule.
Relevant for Reaction Rules only.
154
Deferred Execution
155
Returns 'true' if the Command being validated is not intended for immediate execution (e.g. a Command that belongs to a manually edited Plan (GNT)).
Relevant for Validation Conditions only.
156
And
157
Returns "true" if both Boolean1 parameter and Boolean2 parameter are "true".
158
Boolean1
159
Boolean2
160
Or
161
Returns "true" if Boolean1 parameter is "true" or if Boolean2 parameter is "true", and "false" if both parameters are "false".
162
If Integer
163
Returns the WhenTrue parameter if the Condition parameter is true, and the WhenFalse parameter if the Condition is false.
164
Condition
165
WhenTrue
166
When False
167
If Real
168
If String
169
If Enumeration
170
If Timespan
171
If Sector
172
If Azimuth
173
If Point
174
If Line
175
If Polyline
176
If Polygon
177
If Ellipse
178
If Unit
179
When True
180
If Unit Collection
181
If Cluster
182
If Strike Point
183
If Time
184
If Object
185
If Object Collection
186
If Native Type
187
If Allocation Collection
188
Cell Instance Execution State
189
Returns the current execution state of the specified Cell (indicated by the specified Task, Instance index (1-based) and Phase) in the currently executed Doctrinal Command.
If a Cell of the specified Task, Instance index and Phase does not exist in the currently executed Doctrinal Command - NullEnumeration is returned.
190
Instance
191
Phase
192
Topmost Non-Instant Active Job ID
193
Returns the Job ID of the topmost non-instant active Job in TheUnit (the Unit in which the Function is being evaluated).
If no such Job is found - a NullInteger is returned.
Notes:
- A topmost Job is a Job that was not issued by any other Job within the Unit.
- A non-instant Job is a Job whose GNT is non-instant, i.e. has a CDUR_Finite or CDUR_Infinite Duration.
- An active Job is a Job whose Execution State is either ES_Executing or ES_Suspended.
194
SingleTaskOfJob
195
Returns the [Single] Task of the Job of the specified Job ID - provided that it is indeed a Single-Task Job.
If no such Job exists in TheUnit or if that Job is a Multi-Task Job - a NullTask is returned.
196
Job ID
197
Last Issued Command Index
198
Returns the index (1-based) of the Command that was last issued by the specified Task of the [GNT of the] Job of the specified JobID in TheUnit (the Unit in which the Function is being evaluated).
A NullInteger is returned in the following cases:
- A Job of the specified JobID is not present in TheUnit.
- The [GNT of the] Job of the specified JobID does not contain the specified Task.
- The specified Task has not issued any Commands yet.
Note: the indexing of Commands in a Task is continuous, disregarding Phases (division of Commands into Cells).
199
Last Command Index
200
Returns the index (1-based) of the last Command in the specified Task of the [GNT of the] Job of the specified JobID in TheUnit (the Unit in which the Function is being evaluated), that satisfies the following conditions:
- Its index is not lower than the specified StartIndex.
- If the specified CommandID is not empty (Null String) - Its InternalID is the specified CommandID (i.e. an empty CommandID effectively means "don't care" for InternalID).
A NullInteger is returned in the following cases:
- A Job of the specified JobID is not present in TheUnit.
- The [GNT of the] Job of the specified JobID does not contain the specified Task.
- The specified Task does not contain a Command that satisfies the abovementioned coditions.
Note: the indexing of Commands in a Task is continuous, disregarding Phases (division of Commands into Cells).
201
Start Index
202
Command ID
203
Command Index By Parameter Value Bool
204
Returns the index (1-based) of the first Command in the specified Task of the [GNT of the] Job of the specified JobID in TheUnit (the Unit in which the Function is being evaluated), that satisfies the following conditions:
- Its index is not lower than the specified StartIndex.
- Its InternalID is the specified CommandID.
- It has a [Boolean] Parameter whose InternalID is the specified ParameterID and whose value is the specified ParameterValue.
A NullInteger is returned in the following cases:
- A Job of the specified JobID is not present in TheUnit.
- The [GNT of the] Job of the specified JobID does not contain the specified Task.
- The specifeid Task does not contain a Command that satisfies the abovementioned coditions.
Note: the indexing of Commands in a Task is continuous, disregarding Phases (division of Commands into Cells).
205
Parameter ID
206
Parameter Value
207
Command Parameter Value Point
208
Returns the value of the Command Parameter that satisfies the following conditions:
- It is a parameter of the Command that is located in the specified CommandIndex (1-based) within the specified Task of the [GNT of the] Job of the specified JobID in TheUnit (the Unit in which the Function is being evaluated).
- Its InternalID is the specified ParameterID.
- It is of type Point.
If no such Command Parameter is found - a NullPoint is returned.
Note: the indexing of Commands in a Task is continuous, disregarding Phases (division of Commands into Cells).
209
Command Index
210
Command Parameter Value Object
211
Returns the value of the Command Parameter that satisfies the following conditions:
- It is a parameter of the Command that is located in the specified CommandIndex (1-based) within the specified Task of the [GNT of the] Job of the specified JobID in TheUnit (the Unit in which the Function is being evaluated).
- Its InternalID is the specified ParameterID.
- It is of type Object.
If no such Command Parameter is found - a NullObject is returned.
Note: the indexing of Commands in a Task is continuous, disregarding Phases (division of Commands into Cells).
212
Dry Run
213
Returns 'true' during Dry Running (both planning and execution).
Note: "Dry Running" a Doctrinal Command/GNT is a process of executing it without consuming time and without influencing the simulated world, i.e without issuing any Atomic Command that may change it.
"Dry Running" is the equivalent of "imagining" execution for the purpose of gaining insight into the expected outcome - in the form of generated Overlay Elements an/or remembered Memory Notes.
214
Dry Run Memory ID
215
Returns a nonexistent Job ID that is used as a ForJob value for Remember-ing and Recall-ing "Dry Permanent" Memory Notes, that are effectively permanent (retained between Jobs) throughout a single Dry Run but forgotten after it is finished (as they no longer serve any purpose).
216
Azimuth as Raw String
217
Returns the raw String representation of the specified Value, as used for internal logging (useful for debug purposes).
218
Bool as Raw String
219
Integer as Raw String
220
Real as Raw String
221
String as Raw String
222
Enumeration as Raw String
223
Time as Raw String
224
Timespan as Raw String
225
Sector as Raw String
226
Point as Raw String
227
Line as Raw String
228
Polyline as Raw String
229
Polygon as Raw String
230
Ellipse as Raw String
231
Unit as Raw String
232
Unit Collection as Raw String
233
Object as Raw String
234
Object Collection as Raw String
235
Allocation as Raw String
236
Allocation Collection as Raw String
237
Task as Raw String
238
Phase as Raw String
239
Cluster as Raw String
240
Cluster Collection as Raw String
241
Strike Point as Raw String
242
Native Type as Raw String
