10
(
122
React to New Unit Created
125
Entire Unit
126
New Aggregate Unit Created and Manned
128
New Unit
178
React to Reply to Reserve Request
211
Units Filtered By Reserved State
212
Returns a collection of all Units of the specified UnitCollection whose reserved state (reserved/not reserved by another unit) is specified by the ReservedState parameter.
Note: the order of the Units in the specified UnitCollection is maintained in the result.
213
Unit Collection
214
Reserved State
215
Units Filtered By Reserved For
216
Returns a collection of all Units of the specified UnitCollection that are currently reserved for the specified ReservingUnit, for the specified ForJob.
Note: the order of the Units in the specified UnitCollection is maintained in the result.
217
Reserving Unit
218
For Job
245
Unit
307
If Direction
308
Returns the WhenTrue parameter if the Condition parameter is true, and the WhenFalse parameter if the Condition is false.
309
Condition
310
When True
311
When False
312
If Encounter Reaction
313
If Movement Formation
314
If BUA Crossing Policy
315
If Roads Usage Policy
316
If Enemy Avoidance Policy
317
If Alliance Color
318
If Position in Formation
319
If Echelon Level
320
If Indirect Fire Target Type
321
If Land Passability
322
If Indirect Ammunition Type
323
If Movement Mode
324
If Mounted Vehicles Type
325
If Main Activity
326
If Route Relation
327
If Assume Position Mode
328
If On Arrival
329
If Land Unit Type
330
If Fire Policy
331
If Unit Serviceability
332
If Underground Accomodation
333
If Movement Corridor Width
334
If Point Cultural Object
335
If Area of Responsibility
336
If HQ
337
If Obstacle Reaction
338
If State of Readiness
339
If Unit Type
340
If Fire Support Mission
341
If Ammunition Type
342
If Launcher State
343
If Vehicle Type
344
If Rule For
345
Enemy Alliance Color
346
Returns the topmost AllianceColor that is considered as "enemy" of the specified AllianceColor.
347
Alliance Color
348
Unit Type is Administrative
349
Returns 'true' if the specified UnitType is considered to be "Administrative".
350
Unit Type
351
Simple Unit Native Type
352
Returns the NativeType to which all SimpleUnit Native Types belong.
353
Azimuth To Direction
354
Returns the Direction value that corresponds to the specified Azimuth.
For example: DR_East corresponds to Azimuths in the range 68 - 112 (inclusive).
355
Azimuth
356
Direction To Azimuth
357
Returns the Azimuth value that corresponds to the specified Direction.
For example: Azimuth(90) corresponds to DR_East.
358
Direction
359
Unit Largest Recognized Vehicular Detection
360
Returns the largest (number of vehicles-wise) enemy Simple Unit of the specified UnitType that is currently sighted by the specified Unit (i.e. appear in its DetectionList) in the specified Area, at a Detection Level that is not worse than "Recognition".
361
Detected Unit Type
362
Area
363
Unit Prominent Vehicular Detection
364
Returns the most prominent vehicular enemy Simple Unit that is currently sighted by the specified Unit (i.e. appears in its DetectionList) in the specified Area, at a Detection Level that is not worse than "Recognition". For this purpose Assault Vehicles (Tanks and Combat Vehicles) are considered more prominent than Combar Support vehicles, that are considered more prominent than all other vehicles.
If no vehicular enemy Simple Unit is currently sighted by the specified Unit in the specified Area - a Null Unit is returned.
365
Unit Prominent Detection
366
Returns the most prominent enemy Simple Unit that is currently sighted by the specified Unit (i.e. appears in its DetectionList) in the specified Area, at a Detection Level that is not worse than "Recognition". If no vehicular Simple Unit is sighted in the area - the sighted Infantry Simple Unit closest to the specified ReferencePoint is returned (or Null Unit if no Infantry Simple Unit is sighted in the Area).
367
Reference Point
368
Unit Detected Infantry Soldiers Count
369
Returns the oveall number of live soldeirs in all dismounted enemy Simple Units that are currently sighted by the specified Unit (i.e. appear in its DetectionList) in the specified Area, at a Detection Level that is not worse than "Recognition".
370
Detections Sharing Echelon Level
371
Returns the Echelon Level of a superior commanding Unit whose Detections are assumed to be shared among all subordinate Units.
372
Unit Superior Detection List
373
Returns all Simple Units that currently appear in the aggregative Detection List of  the lowest superior Unit (up the OrBat tree) of the specified Unit, whose Echelon Level is not lower than DetectionsSharingEchelonLevel (global constant), at a Detection Level that is not worse than the specified MinimumDetectionLevel.
The superior Unit's Detection List contains Detections made by neighbouring/brother Units.
374
Minimum Detection Level.
376
Returns all enemy Simple Units that appear in the specified Unit's UnitSuperiorDetectionList, regardless of their Detection Level.
377
Unit Sighted Enemy Detections
378
Returns all enemy Simple Units that are currently sighted by the specified Unit, i.e. appear in its DetectionList at a Detection Level that is not worse than the specified MinimumDetectionLevel.
379
Minimum Detection Level
380
Unit Threatening Sighted Enemy Detections
381
Returns all enemy SimpleUnits that are currently detected by the specified Unit at "Recognition" level or better, and pose a threat to it.
382
Unit Potential Targets
383
Returns all enemy SimpleUnits that are currently detected by the specified Unit at "Recognition" level or better and are within its direct fire range (considering its ammunition availability).
384
Unit Did Not Get Later External Job
385
Returns 'true' if the Job ID of last external Job received by the specified Unit is not greater than the specified ReferenceJobID.
386
Reference Job ID
387
Unit Total Vehicles Count
388
Returns the total number of vehicles in all Simple Units belonging to the specified Unit, regardless of serviceability.
389
Unit Disabled Infantry Soldiers Count
390
Returns the overall number of dead/wounded Infantry (foot) soldiers in all Simple Units that belong to at least one of the Units in the specified UnitCollection.
Note: both mounted and dismounted soldiers are counted.
391
Unit is Damaged
392
Returns 'true' if the specified SimpleUnit is damaged.
Note that a destroyed SimpleUnit is not considered damaged.
393
SimpleUnit
394
Unit is Destroyed
395
Returns 'true' if the specified SimpleUnit is destroyed.
396
Unit Serviceability
397
Returns the serviceability of the specified SimpleUnit.
398
Unit Location is Virtual
399
Returns 'true' if the location of the specified Unit is simulated, i.e. does not reflect the location of an actual unit that exists in the real world.
400
Unit Carries Mounted Passenger
401
Returns 'true' if the specified SimpleUnit carries a mounted passenger Simple Unit.
402
Simple Unit
403
Simple Unit Counter Measure is On
404
Returns 'true' if the specified Counter Measure is turned on (active) for the specified SimpleUnit.
405
Counter Measure
406
Unit Mounted Passenger
407
Returns the first Simple Unit that is currently mounted on the specified CarrierSimpleUnit.
If no Simple Unit is currently mounted on the specified CarrierSimpleUnit - Null Unit is returned.
408
Carrier Simple Unit
409
Returns 'true' if the specified SimpleUnit is mounted on some vehicle/carrier Simple Unit.
410
Unit Actual State of Readiness
411
Returns the State of Readiness of the specified AggregateUnit (see UnitStateOfReadiness Atomic Function) if defined, otherwise - SOR_War.
412
Aggregate Unit
413
Unit Elements Quantity
414
Returns the specified Unit's total vehicles count if it's vehicular; otherwise - returns the unit's infantry soldiers count.
415
Simple Unit Can Move
416
Returns 'true' if the specified SimpleUnit has at least one soldier and (if it is vehicular) at least one movement capable vehicle.
417
Unit is Deployable
418
Returns "true" if the specified SimpleUnit can be deployed. The ability to be deployed is a typical property, i.e. independent of current state.
419
The typical "Deployment Delay" of the specified SimpleUnit is defined and greater than zero.
420
Unit Min Effective Direct Fire Range
421
Returns the minimal effective range of the primary direct fire weapon system used by the specified Simple Unit.
422
Unit Effective Direct Fire Area
423
Returns an approximation of the area that can be covered by effective direct fire by the specified Unit. The returned value is a circular area around the current location of the specified Unit, whose radius is its effective direct fire range.
Note: this approximation obviously neglects the dispersion of subordinate Simple Units in the terrain.
424
Unit Can Operate Underground
425
Returns 'true' if the specified SimpleUnit is capable of operating underground, i.e. entering/exiting through underground openings and moving through underground tunnels. The ability to operate underground is a typical property, i.e. independent of current state.
426
Unit Required Underground Accomodation
427
Returns the Underground Accomodation required for underground movement of the specified SimpleUnit.
Note: an Exception is thrown if the specified SimpleUnit cannot operate underground (see UnitCanOperateUnderground Doctrinal Function).
428
Unit Indirect Fire System Native Type
429
Returns the NativeType of the IndirectFireSystem typically used by the specified ArtillerySimpleUnit.
A Null NativeType is returned if no typical IndirectFireSystem is defined for the NativeType of the specified ArtillerySimpleUnit.
431
Unit Indirect Fire Target Type
432
The Indirect Fire Target Type attributed to the specified SimpleUnit (hereinafter U) is determined as follows:
- If U is of type Tank/Armoured/Self-Propelled Artillery - IFTT_Armor
- If U is of type Dismounted Infantry then if it is located in built-up area - IFTT_EntrenchedInfantry, else - IFTT_ExposedInfantry.
- Otherwise - IFTT_SoftSkin.
433
Unit is Kind of
434
Returns "true" if the Type of the specified Unit belongs to the specified UnitType.
435
Unit is Simple
436
Returns "true" if the specified Unit is a SimpleUnit.
437
Unit is Subordinate
438
Returns "true" if the specified Unit (parameter) is a subordinate (either direct or indirect) of the specified CommandingUnit (parameter).
439
Commanding Unit
440
Unit is Dismounted Infantry
441
Returns "true" if the specified Unit contains only (and at least one) dismounted (i.e. not currently mounted on a carrier) Infantry SimpleUnits.
444
Unit is Vehicular
445
Returns 'true' if the specified SimpleUnit is vehicular, i.e not dismounted.
446
Units Are All Kind Of
447
Returns "true" if the type of each and every unit of the specified UnitCollection belongs to the specified UnitType.
448
Units Are of Echelon Level
449
Returns "true" if all units of the specified UnitCollection are of the specified EchelonLevel.
450
Echelon Level
451
Units Are All Aggregates
452
Returns "true" if all units of the specified UnitCollection are Aggregate Units, i.e. non of them is a Simple Unit.
453
Unit Contains Simple Unit Type
454
Returns 'true' if the specified Unit contains at least one Simple Unit of the specified SimpleUnitType.
455
Simple Unit Type
456
Unit Subordinate Simple Units
457
Returns all Simple Units that belong to (i.e. are direct or indirect subordinates of) the specified Unit.
458
Units Contain Dismounted Soldiers
459
Returns 'true' if any of the units in the specified UnitColection contain at least one soldier that is dismounted, i.e. not mounted on any vehicle.
460
Unit Contains Dismounted Soldiers
461
Returns 'true' if the specified Unit contains at least one soldier that is dismounted, i.e. not mounted on any vehicle.
466
Unit Contains Mounted Soldiers
467
Returns 'true' if the specified Unit contains at least one Infantry (foot) soldier that is currently mounted on a vehicle.
470
Units Are Mutually Exclusive
471
Returns "true" if the units in the specified UnitCollection are all mutually exclusive, i.e. non of them is a (direct or indirect) subordinate of or is equal to any other unit in the collection.
472
Unit Worst Passability Type
473
Returns the worst Land Passability among all non-mounted live Simple Units of the specified Unit (parameter) that are land units.
Land Passabilities are ordered as follows, from best to worst:
- On Foot
- Remarkable
- Tracked
- Multi Wheel Drive
- Two Wheel Drive
If the specified Unit doesn't contain any non-mounted live Simple Units that are land units - the returned value is Two Wheel Drive.
474
Unit Movement Speed
475
Returns the typical movement speed (in kilometers per hour) of the slowest SimpleUnit belonging to the specified Unit.
476
Tactical Movement
477
Unit Theoretical Direct Fire Range
478
Returns the maximal range that can be reached with direct fire by a Simple Unit that belongs to the specified Unit and is capable of firing, regardless of ammunition availability.
If the specified Unit does not contain any such Simple Unit - 0 is returned.
479
Unit Has
480
Returns true if the inventory of the specified Unit contains at least one item of the specified InventoryItemType.
481
Inventory Item Type
482
Unit is Fully Undeployed
483
Returns 'true' if the specified Unit does not contain any deployed Simple Unit.
484
Unit Movement Capable Vehicles Count
485
Returns the number of movement-capable vehicles in all Simple Units of the specified UnitType that belong to at least one of the Units in the specified UnitCollection.
All vehicles are considered movement capable (regardless of serviceability), unless [belonging to a Simple Unit that is] currently mounted on another Simple Unit (vehicle transporter).
486
Apparently all vehicles can move - even unserviceable/damaged ones.
487
Unit Has Native
488
Returns true if the inventory of the specified Unit contains at least one item of the specified InventoryItemNativeType.
489
Inventory Item Native Type
490
Immediate Commanding Unit
491
Returns the first commanding unit above (up the OrBat tree) the specified Unit.
492
Unit is Direct Subordinate
493
Returns "true" if the specified Unit (parameter) is a direct subordinate of the specified CommandingUnit (parameter).
494
Units Contained Simple Units of Type
495
Returns all Simple Units that appear in the specified UnitCollection or belong to (i.e. are direct or indirect subordinates of) at least one unit that appears in the specified UnitCollection, whose Unit Type belongs to the specified UnitType.
Note: all Simple Units are returned - whether mounted (on some carrier Simple Unit) or not.
496
Unit is Aggregate
497
Returns "true" of the specified Unit is an Aggregate Unit.
498
Unit Contains Unit
499
Returns true if both Unit1 and Unit2 are not Null and Unit2 either equals Unit1 or is a subordinate of Unit1.
500
Unit 1
501
Unit 2
502
Unit Direct Subordinate
503
Returns the first Unit of the specified UnitType and Echelon that is a direct subordinate of the specified AggregateUnit.
If no such Unit exists, or if the specified AggregateUnit is a Null Unit - a Null Unit is returned.
504
AggregateUnit
505
Echelon
506
Unit Direct Subordinates
507
Returns all direct subordinates of the specified Unit.
Note: subordinate Simple Units are included in the result whether mounted (on some carrier Simple Unit) or not.
508
Commanding Units
509
Returns a collection containing commanding units of the specified Unit, up to (and including) the commanding unit of the specified TopmostEchelon - if exists.
The returned commanding units are ordered by their Echelon Level - from lowest to highest.
Example:
given the following OrBat

Div (EL_Division)
   Brig (EL_Brigade)
      Coy (EL_Company)
         Plt (EL_Platoon)
            Sim (EL_Simple)

- CommandingUnits(Sim, EL_Division)   returns {Plt,Coy,Brig,Div}
- CommandingUnits(Sim, EL_Battalion)  returns {Plt,Coy}
- CommandingUnits(Coy, EL_Battalion)  returns {}
510
Topmost Echelon
511
Unit Similar Siblings
512
Returns all similar siblings of the specified Unit, i.e. all other direct subordinates of the Unit's immediate commanding unit that are of the same type and echelon as the specified Unit.
513
Unit Index Under Parent
514
Returns the index of the specified Unit in the collection of direct susubordinates of its immediate commanding unit.
515
Units Filtered Out By Area
516
Returns a collection of all Units of the specified UnitCollection (parameter) that are not located in the specified Area.
517
UnitCollection
518
Units Filtered Out By Type
519
Returns a collection of all Units of the specified UnitCollection (parameter) whose Unit Type doesn't belong to the specified UnitType.
520
Units Filtered Out By Aggregate Type
521
Returns a collection of all Units of the specified UnitCollection (parameter) whose AggregateType (see UnitAggregateType Atomic Function) doesn't belong to the specified AggregateType.
522
Aggregate Type
523
Units Filtered Out By Serviceability
524
Returns a collection of all SimpleUnits of the specified SimpleUnitCollection whose serviceability does not belong to the specified UnitServiceability.
Note: the order of the SImpleUnits in the specified SimpleUnitCollection is maintained in the result.
525
Simple Unit Collection
526
Units Filtered by Threat Potential
527
Returns a collection containing every SimpleUnit P of the specified PotentialThreats collection (assumed to contain only SimpleUnits) that poses a threat to the specified TargetedUnit (hereinafter T).
A SimpleUnit P is considered as posing a threat to T if it is capable of performing direct fire at one or more of T's non-mounted SimpleUnits.
528
Targeted Unit
529
Potential Threats
530
Closest Unit
531
Returns the Unit of the specified UnitCollection (parameter) that is closest to the specified Point (parameter).
If the specified UnitCollection is empty - a NullUnit is returned.
532
Point
533
Closest Unit or Else
534
Returns the Unit of the specified UnitCollection that is closest to the specified FocalPoint - if UnitCollection is not empty, otherwise - the specified Else parameter.
535
Focal Point
536
Else
537
Farthest Unit
538
Returns the Unit of the specified UnitCollection (parameter) that is farthest from the specified Point (parameter).
If the specified UnitCollection is empty - a NullUnit is returned.
539
Units in Area Safe
540
Returns a collection of all Units that are located inside the specified Area.
If the specified Area is a Null Polygon - an empty Unit Collection is returned.
541
Simple Units in Area
542
Returns a collection of all Simple Units that are located inside the specified Area.
If the specified Area is a Null Polygon - an empty Unit Collection is returned.
543
Simple Unit Estimated Route Length
544
Returns the estimated length of the actual route that the specified SimpleUnit would use when moving between two points, given the StraightLineDistance between them (hereinafter D). this equals D*F where F is 1.33 for a vehicular SimpleUnit and 1.1 for a dismounted SimpleUnit.
545
Simple
546
Straight Line Distance
547
Unit Pseudo Random Seed
548
Returns a number between 0.0 and 1.0 that is specific to the specified Unit and may be used as a seed for generating pseudo-random values.
The returned value equals I/N where I is the (1-based) index of the specified Unit in the direct subordinates collection of its immediate commanding unit, and N is the size of the collection.
551
PRINT
565
Closest Point Object In Range
566
Returns the Point Terrain Object whose type belongs to the specified ObjectType, is closest to the specified Origin and whose distance from the specified Origin does not exceed the specified RangeLimit. If 'true' is specified for IncludeDestructed - destructed objects (see ObjectIsDestructed Atomic Function) are also included in the search and may thus be returned, otherwise - destructed objects are ignored.
If no such Point Terrain Object exists - a NullObject is returned.
567
Object Type
568
Origin
569
Range Limit
570
Include Destructed
571
Closest Polygon Object
572
Returns the Polygon Terrain Object whose type belongs to the specified ObjectType, is closest to the specified Origin and contains at least one point whose distance from the specified Origin does not exceed the specified RangeLimit. If 'true' is specified for IncludeDestructed - destructed objects (see ObjectIsDestructed Atomic Function) are also included in the search and may thus be returned, otherwise - destructed objects are ignored.
If no such Polygon Terrain Object exists - a NullObject is returned.

Note: the distance between the specified Origin and a Polygon G is defined as follows: if Origin is inside G and ZeroDistanceInsidePolygon is true - it is zero, otherwise - it is the distance between Origin and the closest point to it on G's perimeter.
573
Zero Distance Inside Polygon
574
Random Point in Nearest Builtup Area
575
Returns a random point inside the specified Area that is preferably located inside the Builtup Area polygon object (TOT_BuiltupArea) that is closest to the specified Point, provided that the specified Area indeed contains such an object (even if partially).
576
Random Point in Area
577
Returns a random point inside the specified Area. If PreferBuiltUpArea is specified - the returned point is preferably located inside a Builtup Area polygon object (TOT_BuiltupArea) - provided that the specified Area contains such an object (even if only partially).
578
Prefer Builtup Area
579
***Bypass - ObjectsInArea may return objects that are not located inside the search area - hence, PointNotNullOrElse added.
580
Closest Object
581
Returns the Object of the specified ObjectCollection (parameter) that is closest to the specified Point (parameter).
If the specified ObjectCollection is empty - a NullObject is returned.
582
Object Collection
583
Closest Polyline Object In Range
584
Returns the Polyline Terrain Object whose type belongs to the specified ObjectType, is closest to the specified Origin and whose distance from the specified Origin does not exceed the specified RangeLimit. If 'true' is specified for IncludeDestructed - destructed objects (see ObjectIsDestructed Atomic Function) are also included in the search and may thus be returned, otherwise - destructed objects are ignored.
If no such Polyline Terrain Object exists - a NullObject is returned.
590
Destroyed Object Damage Threshold
591
Damage level threshold from which an object is considered destroyed.
592
Undamaged Objects
593
Returns a collection of objects from the specified Object Collection with a damage level of 0.
594
Damaged Objects
595
Returns a collection of objects from the specified Object Collection with a damage level between 1 and the threshold for destroyed objects.
596
Destroyed Objects
597
Returns a collection of objects from the specified Object Collection with a damage level that is greater than or equal to the threshold for destroyed objects.
598
Objects Filtered by Distance
599
Returns a collection of all Objects of the specified ObjectCollection whose distance from the specified Point is not lower than the specified MinDistance and not higher than the specified MaxDistance.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.
600
Min Distance
601
Max Distance
602
Point Objects Sorted West to East
603
Returns the objects of the specified ObjectCollection, sorted by the longtitude of their location - from the westmost to the eastmost.
604
Object is Kind of
605
Returns "true" if the type of the specified Object belongs to the specified ObjectType.
606
Object
607
Objects Are All Kind Of
608
Returns "true" if the type of each and every object of the specified ObjectCollection belongs to the specified ObjectType.
609
Is Passable Route
610
Returns 'true' if the specified Route is passable for movement by a unit of the specified Passability.
A route is considered passable if it does not cross any movement-blocking obstacle or soil type and does not contain any slope (to the front, rear or side) that exceeds the maximum passable slope of the specified Passability.
611
Route
612
Passability Type
613
Is Passable Line
614
Returns 'true' if the specified Line is passable for movement by a unit of the specified Passability.
615
Line
616
Maximal Route Search Area
617
The maximal area (in square meters) that can be used as a SearchArea for FindRouteToPolyline Atomic Function.
618
Minimal Straight Infantry Route Length
619
When a route for an Infantry Simple Unit (moving on foot) needs to be found, a straight route is considered as a potential alternative to an optimal route only if its length is not less than this threshold (defined by an external parameter).
620
Straight Route is Valid
621
The specified StraightRoute is considered valid if the following conditions are all met:
- The specified PassabilityType is "On Foot" (Infantry movement).
- The length of the specified StraightRouteis is not lower than MinimalStraightInfantryRouteLength (Doctrinal Function).
- The specified StraightRoute is fully contained inside the specified SectorBoundaries.
- If a non-Null ExclusionZone is specified - the specified StraightRoute does not pass inside it.
- The specified StraightRoute is fully passable on foot.
622
Straight Route
623
Search Area
624
The area inside which the specified StraightRoute must reside.
625
The passability of the moving unit.
626
Exclusion Zone
627
The specified StraightRoute must not pass through this area.
628
Find  Route
629
Returns an optimal route on dry land, from an origin point (From parameter) to a destination point (To parameter), subject to tactical criteria.
If a passable route to the specified destination point cannot be found under the specified constraints - the result depends on the specified ReturnBestEffort parameter: when 'true' - a route leading to the closest reachable point is returned, otherwise - a Null Polyline is returned.
630
From
631
To
632
Movement end point (destination).
633
The area inside which the route is searched for. Must contain both From and To locations.
634
BUA Crossing Policy
635
Preference for passing through Built-up Area.
636
Roads Usage Policy
637
Preference for using roads as part of the route.
638
Enemy Avoidance Policy
639
Preference for avoiding exposure to enemy along the route.
640
Enemy to Avoid
641
A collection of enemy Simple Unis that should preferably be avoided.
642
The returned route must not pass through this area.
643
Return Best Effort
644
If true - when the specified To point cannot be reached, a route leading to the closest reachable point is returned (otherwise a NullPolyline is returned).
645
Returns a route on dry land, from an origin point (From parameter) to a destination point (To parameter), subject to tactical criteria.
If the straight line connecting From and To is found to be valid (see StraightRouteIsValid Doctrinal Function) - it is returned, otherwise an optimal route is returned (see FindOptimalRoute Doctrinal Function).
652
Is Daytime
653
Returns "true" if the given Time (parametr) is at daytime, "false" if it is at night time.
654
Time
655
Time Has Passed
656
Returns 'true' if the specified Time is not Null and CurrentTime is greater than or equal to the specified Time.
657
Dismounted Underground Movement Duration
658
Returns the time required for a dismounted unit to travel the specified distance along an Ungerdound Route.
659
Distance
660
UndergroundMovementSpeedDismounted (external parameter) is specified in Km/h.
If undefined - 5.0 Km/h is assumed by default.
670
Integer External Property Value
671
Returns the value of the specified ExternalProperty of the specified Structure (a collection of Properties that are grouped together), for the specified Type - as defined in the External Properties Database (AKA Static Database). EPS_NoStructure Structure value indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullInteger is returned.
672
External Property
673
Structure
674
Type
675
Real External Property Value
676
Returns the value of the specified ExternalProperty of the specified Structure (a collection of Properties that are grouped together), for the specified Type - as defined in the External Properties Database (AKA Static Database). EPS_NoStructure Structure value indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullReal is returned.
677
Enumeration External Property Value
678
Returns the value of the specified ExternalProperty of the specified Structure (a collection of Properties that are grouped together), for the specified Type - as defined in the External Properties Database (AKA Static Database). EPS_NoStructure Structure value indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullEnumeration is returned.
