<?xml version="1.0" ?>
<Entries>
  <Entry>
    <Key>1</Key>
    <Value>
      <Hebrew>תנועה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>2</Key>
    <Value>
      <Hebrew>ביצוע תנועה לאורך מסלול מוגדר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>3</Key>
    <Value>
      <Hebrew>מסלול</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>4</Key>
    <Value>
      <Hebrew>תבנית התנועה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>5</Key>
    <Value>
      <Hebrew>בהתקלות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>6</Key>
    <Value>
      <Hebrew>האם לעצור בהתקלות או להמשיך בתנועה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>7</Key>
    <Value>
      <Hebrew>תגובה למכשול</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>8</Key>
    <Value>
      <Hebrew>האם לעצור בכל מקרה כאשר נתקלים במכשול על מסלול התנועה או לנסות לעקוף אותו אם ניתן.
ברירת מחדל: עקוף אם ניתן.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>9</Key>
    <Value>
      <Hebrew>כיוון תצפית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>10</Key>
    <Value>
      <Hebrew>כיוון הסתכלות היחידה בזמן התנועה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>11</Key>
    <Value>
      <Hebrew>מעבר בשטח בנוי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>12</Key>
    <Value>
      <Hebrew>כיצד להתייחס למעבר בשטח בנוי בשיקולי הבחירה של המסלול. ברירת מחדל - "מותר".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>13</Key>
    <Value>
      <Hebrew>תנועה על צירים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>14</Key>
    <Value>
      <Hebrew>כיצד להתייחס לתנועה על צירים בשיקולי הבחירה של המסלול.
ברירת מחדל - "מותרת".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>15</Key>
    <Value>
      <Hebrew>הסתר מיחידות אויב</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>16</Key>
    <Value>
      <Hebrew>כיצד להתייחס להסתר מיחידות אויב בשיקולי הבחירה של המסלול.
ברירת מחדל - "מותרת".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>17</Key>
    <Value>
      <Hebrew>בסוף תנועה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>18</Key>
    <Value>
      <Hebrew>מאפשר עצירה או פרישה של הכוח בסוף התנועה.
ברירת מחדל - פרישה (ליחידות המסוגלות לכך).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>19</Key>
    <Value>
      <Hebrew>פטרול או תנועה רגילה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>20</Key>
    <Value>
      <Hebrew>פטרול או תנועה רגילה בתנועת פטרול היחידה .תבצע תנועה הלוך ושוב</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>21</Key>
    <Value>
      <Hebrew>גרירה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>22</Key>
    <Value>
      <Hebrew>תנועה עם גרירה או בלי גרירה (רלוונטי לקב' אמל"ח כלית בלבד).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>23</Key>
    <Value>
      <Hebrew>מספר הנעים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>24</Key>
    <Value>
      <Hebrew>מס' הכלים (במקרה של קב' אמל"ח כלית) או החיילים (במקרה של קב' אמל"ח רגלית) שינועו, מתוך כלל הכלים/חיילים. אם לא צוין ערך - כל הכלים/חיילים ינועו.
במקרה של פיצול, קב' האמל"ח מקבלת הפקודה נשארת במקומה וקב' האמל"ח החדשה המתפצלת מתוכה, היא שמבצעת את התנועה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>25</Key>
    <Value>
      <Hebrew>פצועים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>26</Key>
    <Value>
      <Hebrew>כמות הפצועים אשר ינועו עם הכלים כאשר מבצעים פיצול של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>27</Key>
    <Value>
      <Hebrew>מהירות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>28</Key>
    <Value>
      <Hebrew>המהירות המירבית מתוך המקסימום האפשרי על בסיס הנתונים (בקילומטר לשעה).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>29</Key>
    <Value>
      <Hebrew>תנועה אש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>30</Key>
    <Value>
      <Hebrew>ביצוע תנועה משולבת בירי אל האויב .</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>31</Key>
    <Value>
      <Hebrew>ציר התנועה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>32</Key>
    <Value>
      <Hebrew>ציר התנועה שהיחידה תבצע.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>33</Key>
    <Value>
      <Hebrew>יחידות להעסקה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>34</Key>
    <Value>
      <Hebrew>יש לבחור יח' בגילוי. אם לא צוינו יחידות להעסקה, היחידה תבצע תנועה ללא ירי, עד שתתגלה מטרה ראשונה בטווח פתיחה באש, ואז יתבצע מעבר לתנועה ואש.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>35</Key>
    <Value>
      <Hebrew>סוג תחמושת</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>36</Key>
    <Value>
      <Hebrew>יש לבחור סוג תחמושת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>37</Key>
    <Value>
      <Hebrew>משך הירי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>38</Key>
    <Value>
      <Hebrew>יש להזין זמן לירי בדקות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>39</Key>
    <Value>
      <Hebrew>כמות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>40</Key>
    <Value>
      <Hebrew>כמות תחמושת לירי מהסוג שהוזן.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>41</Key>
    <Value>
      <Hebrew>תפיסת עמדות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>42</Key>
    <Value>
      <Hebrew>עצירת פעולה למסגרת ותפיסת עמדות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>43</Key>
    <Value>
      <Hebrew>כיוון</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>44</Key>
    <Value>
      <Hebrew>הכיוון אליו מופנים כלי/חיילי היחידה. אם לא צוין כיוון - היחידה תתפוס עמדות לעבר הכיוון הנוכחי שלה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>45</Key>
    <Value>
      <Hebrew>סוג העמדות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>46</Key>
    <Value>
      <Hebrew>סוג העמדות שייתפסו. אם לא צוין - היחידה תתפוס עמדות אש.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>47</Key>
    <Value>
      <Hebrew>טווח פתיחה באש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>48</Key>
    <Value>
      <Hebrew>אש תיפתח אל עבר אויב שיתגלה בטווח זה. אם לא צוין - טווח הפתיחה באש יישאר כפי שהיה קודם לכן.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>49</Key>
    <Value>
      <Hebrew>זמן שהייה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>50</Key>
    <Value>
      <Hebrew>משך הזמן בו תשהה היחידה בסוג העמדות שצוין (מוכנות לירי או הסוואה). לאחר משך הזמן המוקצב היחידה תעבור למצב מוכנות לתנועה. אם לא צוין זמן שהיה - הפקודה תסתיים מיידית.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>51</Key>
    <Value>
      <Hebrew>כניסה לתת-קרקע</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>52</Key>
    <Value>
      <Hebrew>כניסה לתת-קרקע דרך פתח מעבר סמוך (פתח של אובייקט מקטע מנהרה או אובייקט בונקר תת-קרקעי) הניתן לשימוש ע"י הצבא של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>53</Key>
    <Value>
      <Hebrew>שינוי סוג תנועה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>54</Key>
    <Value>
      <Hebrew>שינוי סוג תנועה למסגרתית או טקטית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>55</Key>
    <Value>
      <Hebrew>תנועה טקטית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>56</Key>
    <Value>
      <Hebrew>תנועה טקטית או מסגרתית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>57</Key>
    <Value>
      <Hebrew>שינוי מהירות מירבית ליחידה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>58</Key>
    <Value>
      <Hebrew>מהירות מירבית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>59</Key>
    <Value>
      <Hebrew>יציאה מתת-קרקע</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>60</Key>
    <Value>
      <Hebrew>יציאה מתת-קרקע דרך פתח מעבר סמוך (פתח של אובייקט מקטע מנהרה או אובייקט בונקר תת-קרקעי) הניתן לשימוש ע"י הצבא של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>61</Key>
    <Value>
      <Hebrew>תנועה תת-קרקעית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>62</Key>
    <Value>
      <Hebrew>תנועה לאורך מסלול תת-קרקעי המתחיל במיקום הנוכחי של היחידה. מסלול תת-קרקעי הוא מסלול אשר בכל נקודה עליו קיים אובייקט תת-קרקע הניתן לשימוש ע"י היחידה מקבלת הפקודה.
הפקודה ניתנת לביצוע רק ע"י יחידה הנמצאת בתת-קרקע בפועל.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>63</Key>
    <Value>
      <Hebrew>המסלול התת-קרקעי שלאורכו מתבצעת התנועה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>64</Key>
    <Value>
      <Hebrew>עליית חיילים לכלים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>65</Key>
    <Value>
      <Hebrew>עליית קב' האמל"ח המבצעת (קב' אמל"ח רגלית) על כלים של קב' אמל"ח נושאת (נגמ"שים, משאיות וכד'), בכפוף למגבלות הקיבולת והתפוסה בקב' האמל"ח הנושאת.
אם אין בכלים מספיק מקום פנוי לכל החיילים, מתוך קב' האמל"ח המבצעת מתפצלת קב' אמל"ח חדשה המכילה את החיילים שלהם לא נמצא מקום בכלים.
אם צוין 'אפשר שיתוף' - 'כן', קב' האמל"ח הרגלית עולה על על קב' האמל"ח הנושאת גם אם יש עליה כבר קב' אמל"ח רגליות אחרות.
אחרת ('אפשר שיתוף' - 'לא'), אם יש קב' אמל"ח אחרות על הכלים של קב' האמל"ח הנושאת ובקב' האמל"ח הנושאת יש לפחות כלי אחד פנוי (שאין עליו חיילים) - מתוך קב' האמל"ח הנושאת מתפצלת קב' אמל"ח חדשה בעלת כלים פנויים, אשר עליה עולה קב' האמל"ח המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>66</Key>
    <Value>
      <Hebrew>קב' אמל"ח נושאת</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>67</Key>
    <Value>
      <Hebrew>קב' אמל"ח שעל הכלים שלה יש לעלות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>68</Key>
    <Value>
      <Hebrew>מספר חיילים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>69</Key>
    <Value>
      <Hebrew>המספר הרצוי של חיילים שיש להעלות על הכלים. אם לא צוין - יועלה המספר המקסימלי האפשרי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>70</Key>
    <Value>
      <Hebrew>מספר פצועים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>71</Key>
    <Value>
      <Hebrew>המספר הרצוי של פצועים שיש להעלות על הכלים. אם לא צוין - יועלה המספר המקסימלי האפשרי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>72</Key>
    <Value>
      <Hebrew>אפשר שיתוף</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>73</Key>
    <Value>
      <Hebrew>שיתוף מאפשר למספר קב' אמל"ח רגליות לעלות על הכלים של אותה קב' אמל"ח נושאת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>74</Key>
    <Value>
      <Hebrew>הורדת חיילים מכלים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>75</Key>
    <Value>
      <Hebrew>הורדת קב' אמל"ח רגליות מהכלים של קב' האמל"ח המבצעת. אם צוינו קב' אמל"ח יורדות - יש להוריד אותן בלבד, אחרת - יש להוריד את כלל קב' האמל"ח הנמצאות על הכלים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>76</Key>
    <Value>
      <Hebrew>קב' אמל"ח יורדות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>77</Key>
    <Value>
      <Hebrew>אוסף קב' אמל"ח רגליות שיש להוריד מהכלים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>78</Key>
    <Value>
      <Hebrew>העמסת כלים על מובילים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>79</Key>
    <Value>
      <Hebrew>העמסת הכלים של קב' האמל"ח המבצעת (להלן "היחידה המובלת") על הכלים של היחידה המובילה (שאף היא קב' אמל"ח) בתנאי שהיא פנויה להובלה, קרובה מספיק ושקיבולת ההעמסה האופיינית לסוגה מאפשרת את העמסת סוג הכלים של היחידה המובלת.
אם מספר הכלים ביחידה המובלת אינו תואם לקיבולת היחידה המובילה מתבצע פיצול של היחידה המובלת או של היחידה המובילה עפ"י הצורך.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>80</Key>
    <Value>
      <Hebrew>יחידה מובילה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>81</Key>
    <Value>
      <Hebrew>קב' אמל"ח מתאימה להובלה, שעליה יועמסו כלי היחידה המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>82</Key>
    <Value>
      <Hebrew>פריקת כלים ממובילים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>83</Key>
    <Value>
      <Hebrew>פריקת הכלים של קב' האמל"ח המובלת מהכלים של קב' האמל"ח המובילה - מבצעת הפקודה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>84</Key>
    <Value>
      <Hebrew>ירידה מכלים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>85</Key>
    <Value>
      <Hebrew>ירידה מהכלים של היחידה הנושאת - שעליהם נמצאת היחידה המבצעת.
מיקום היחידה נקבע למיקום היחידה הנושאת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>86</Key>
    <Value>
      <Hebrew>פרישה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>87</Key>
    <Value>
      <Hebrew>פרישת יחידה נפרשת "בר בשטח" או בתשתית מכילה - בתנאי שהיא מתאימה מבחינת סוג, נמצאת בקרבת היחידה, אינה מושמדת ויש בה מקום פנוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>88</Key>
    <Value>
      <Hebrew>המנע מכניסה לתשתית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>89</Key>
    <Value>
      <Hebrew>האם להמנע מכניסה לתשתית מכילה - גם אם קיימת, ולהעדיף בכל מקרה פרישה "בר בשטח" - מחוץ לתשתית.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>90</Key>
    <Value>
      <Hebrew>תשתית מכילה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>91</Key>
    <Value>
      <Hebrew>אובייקט תשתית מכילה ראוי להכלת היחידה המבצעת - בו יש לבצע את הפרישה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>92</Key>
    <Value>
      <Hebrew>משך הפרישה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>93</Key>
    <Value>
      <Hebrew>פרמטר זה מאפשר לאלץ את משך הזמן בו תשהה היחידה בפעילות הפרישה למשך קצר או ארוך מהמשך האופייני - לצורך השגת יעד תרגילי.
ערך ברירת מחדל: משך הפרישה האופייני לסוג היחידה המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>94</Key>
    <Value>
      <Hebrew>קיפול</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>95</Key>
    <Value>
      <Hebrew>קיפול יחידה נפרשת שהינה פרושה. 
הערה: ביצוע פקודת "קיפול" אינה הדרך היחידה לשינוי מצבה של היחידה לבלתי פרושה. ניתן לחליפין להפוך יחידה לבלתי פרושה גם ע"י ביצוע תנועה/הזזה שלה למיקום שונה ממיקום הפרישה הנוכחי שלה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>96</Key>
    <Value>
      <Hebrew>משך הקיפול</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>97</Key>
    <Value>
      <Hebrew>פרמטר זה מאפשר לאלץ במידת הצורך משך קיפול קצר או ארוך מהמשך האופייני - לצורך השגת יעד תרגילי.
ערך ברירת מחדל: משך הקיפול האופייני לסוג היחידה המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>98</Key>
    <Value>
      <Hebrew>אחסנה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>99</Key>
    <Value>
      <Hebrew>הכנסת יחידה לאובייקט אתר אחסנה מתאים וסמוך (נקבע אוטומטית). כניסת היחידה לאחסנה גורמת לכיבוי המכ"ם שלה (אם היא יחידה בעלת מכ"ם) ולכיבוי אמצעי הנגד שלה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>100</Key>
    <Value>
      <Hebrew>כניסה למבנה קרוב</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>101</Key>
    <Value>
      <Hebrew>כניסה למבנה הקרוב עם ניתן.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>102</Key>
    <Value>
      <English>Enter Building at Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>103</Key>
    <Value>
      <English>Enter the building closest to the specified Building Location.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>104</Key>
    <Value>
      <English>Building Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>105</Key>
    <Value>
      <Hebrew>שינוי כפיפות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>106</Key>
    <Value>
      <Hebrew>העברת היחידה לשליטה מלאה או חלקית של יחידת יעד, בהתאם להיקף השליטה המועבר:
העברה מלאה (ת"פ) - היחידה עוברת לשליטה מלאה של יחידה היעד ומנותקת מיחידת האב הנוכחית. 
שימור יכולת צפיה - היחידה עוברת לשליטה מלאה של יחידת היעד וביחידת האב הנוכחית עדיין ניתן לצפות בה.
העברה מוגבלת (לסיוע) - היחידה ניתנת לשליטה חלקית של יחידת היעד (אוסף פקודות מצומצם) ובמקביל גם לשליטה מלאה של יחידת האב הנוכחית.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>107</Key>
    <Value>
      <Hebrew>יחידת יעד</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>108</Key>
    <Value>
      <Hebrew>היחידה שאליה תועבר היחידה מקבלת הפקודה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>109</Key>
    <Value>
      <Hebrew>היקף שליטה מועבר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>110</Key>
    <Value>
      <Hebrew>אם לא צוין ערך - מבוצעת העברה מלאה (ת"פ)</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>111</Key>
    <Value>
      <Hebrew>ארגון מחדש של יחידות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>112</Key>
    <Value>
      <Hebrew>יצירת יחידה חדשה (ציוות כוחות) תחת היחידה מקבלת הפקודה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>113</Key>
    <Value>
      <Hebrew>דרג</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>114</Key>
    <Value>
      <Hebrew>דרג היחידה החדשה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>115</Key>
    <Value>
      <Hebrew>סוג מסגרת</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>116</Key>
    <Value>
      <Hebrew>סוג היחידה המסגרתית שיש ליצור (לדוגמא: פוג', דיויזיה, סוללה, שדרה) - שממנו משתמע גם הדרג שלה.
יש לציין דרג או סוג מסגרת אך לא את שניהם.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>117</Key>
    <Value>
      <Hebrew>שיוך חיילי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>118</Key>
    <Value>
      <Hebrew>השיוך החיילי של היחידה החדשה.
אם לא צוין, השיוך החיילי ייגזר מהצלמית שתשויך ליחידה, בהתאם לצלמיות של יחידות המשנה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>119</Key>
    <Value>
      <Hebrew>יחידות מועברות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>120</Key>
    <Value>
      <Hebrew>אוסף יחידות משנה של היחידה מקבלת הפקודה (בכפיפות ישירה או עקיפה), שאותן יש להעביר ת"פ היחידה החדשה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>121</Key>
    <Value>
      <Hebrew>שם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>122</Key>
    <Value>
      <Hebrew>שם היחידה החדשה. אם לא צוין שם - ייקבע שם ברירת מחדל.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>123</Key>
    <Value>
      <Hebrew>פירוק מסגרת כפיפה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>124</Key>
    <Value>
      <Hebrew>פירוק המסגרת הכפיפה (ישירה או עקיפה) המצוינת והעברת כל אחת מיחידות המשנה שלה ת"פ חזרה ל"יחידת האב המקורית" שלה - אם מוגדרת וקיימת, אחרת - ליחידה המבצעת.
הערה: ערך "יחידת האב המקורית" של יחידה נקבע בעת יצירתה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>125</Key>
    <Value>
      <Hebrew>מסגרת כפיפה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>126</Key>
    <Value>
      <Hebrew>ירי ישיר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>127</Key>
    <Value>
      <Hebrew>ביצוע ירי ישיר אל עבר גילויים שאינם מכוחותינו.
ביצוע הפקודה מסתיים בקרות המאורע המוקדם ביותר מבין הבאים:
- צוין "משך בדקות" ומשך זמן זה חלף.
- צוינה מגבלת "כמות" לתחמושת לירי וכמות זו נורתה.
- לא ניתן לירות על אף אחת מהיחידות להעסקה שצוינו - אם מפני שהושמדו או מפני שיצאו מקו ראיה/מטווח הירי או מפני שלא קיימת תחמושת אפקטיבית מתאימה במלאי היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>128</Key>
    <Value>
      <Hebrew>גילויים אליהם יתבצע הירי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>129</Key>
    <Value>
      <Hebrew>תחמושת</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>130</Key>
    <Value>
      <Hebrew>בחירה אופטימאלית או בחירת סוג תחמושת ספציפי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>131</Key>
    <Value>
      <Hebrew>משך בדקות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>132</Key>
    <Value>
      <Hebrew>משך ביצוע פקודת הירי. </Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>133</Key>
    <Value>
      <Hebrew>במידה ונבחרת תחמושת ספציפית - כמות התחמושת לירי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>134</Key>
    <Value>
      <Hebrew>ירי ייעודי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>135</Key>
    <Value>
      <Hebrew>ירי חימוש מונחה מדויק (חמ"מ) לעבר קב' אמל"ח או אובייקט תשתית נקודתית.
אם לא צוין סוג חימוש - הירי יבוצע באמצעות סוג חימוש חמ"מ הראשון שקיים במלאי היחידה.
אם לא צוינה כמות - יירה טיל אחד.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>136</Key>
    <Value>
      <Hebrew>יחידת מטרה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>137</Key>
    <Value>
      <Hebrew>קב' אמל"ח שעליה יש לירות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>138</Key>
    <Value>
      <Hebrew>אוביקט מטרה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>139</Key>
    <Value>
      <Hebrew>אובייקט תשתית נקודתית שעליו יש לירות.
יש לציין "יחידת מטרה" או "אובייקט מטרה" אך לא את שניהם.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>140</Key>
    <Value>
      <Hebrew>סוג חימוש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>141</Key>
    <Value>
      <Hebrew>סוג החימוש שיש לירות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>142</Key>
    <Value>
      <Hebrew>כמות החימוש שיש לירות.
אם לא צוין, יירה טיל אחד.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>143</Key>
    <Value>
      <Hebrew>ירי סוללתי עקיף</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>144</Key>
    <Value>
      <Hebrew>ירי ארטילרי או כל ירי תלול מסלול.
יש לציין את סוג התחמושת לירי באמצעות אחד ורק אחד משני הפרמטרים: "סוג תחמושת" (ערך אנומרטיבי) או "סוג תחמושת (שם מחלקה)".
ניתן לציין סוג קונקרטי או אבסטרקטי. במקרה שמצוין סוג אבסטרקטי - סוג התחמושת הקונקרטי שיירה בפועל הוא הסוג הראשון המשתייך לסוג האבסטרקטי שצוין וקיים במלאי היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>145</Key>
    <Value>
      <Hebrew>נקודת מכוון</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>146</Key>
    <Value>
      <Hebrew>נ.צ המטרה אליה יש לירות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>147</Key>
    <Value>
      <Hebrew>מספר הפגזים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>148</Key>
    <Value>
      <Hebrew>סוג תחמושת (שם מחלקה)</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>149</Key>
    <Value>
      <Hebrew>שם המחלקה (תחת  TAH_ARTL) המייצגת את סוג התחמושת שיש לירות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>150</Key>
    <Value>
      <Hebrew>מרווח בין הפגזים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>151</Key>
    <Value>
      <Hebrew>לצורך ירי מתמשך. אם לא צוין - הירי יתבצע בקצב האש המקסימלי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>152</Key>
    <Value>
      <Hebrew>הכח המסתייע</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>153</Key>
    <Value>
      <Hebrew>סוג משימה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>154</Key>
    <Value>
      <Hebrew>סוג המשימה קובע את הקצאת התחמושת ביחידת האש הממונה שבמסגרתה מנוצלת התחמושת הנורית: הקצאה למשימות מתוכננות או הקצאה למטרות מזדמנות.
אם לא צוין ערך - סוג המשימה המשתמע הוא "מטרה מזדמנת".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>155</Key>
    <Value>
      <Hebrew>מזהה בקשה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>156</Key>
    <Value>
      <Hebrew>קביעת רשימת מטרות לירי ישיר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>157</Key>
    <Value>
      <Hebrew>קביעת רשימת המטרות של היחידה - עליהן מבוצע ירי ישיר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>158</Key>
    <Value>
      <Hebrew>מטרות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>159</Key>
    <Value>
      <Hebrew>קביעת מצב מוכנות לשיגור</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>160</Key>
    <Value>
      <Hebrew>קביעת מצב המוכנות לשיגור (תכונה דינמית) של קב' האמל"ח המקבלת.
מוכנות לשיגור היא תנאי הכרחי לביצוע שיגור, הנבדק ע"י פקודת ירי מטח תמ"ס. הערך ההתחלתי של התכונה הוא 'לא'. בעקבות ביצוע שיגור (ירי מטח תמ"ס) - ערך התכונה נקבע ל- 'לא', שכן כל שיגור מחייב הכנה נפרדת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>161</Key>
    <Value>
      <Hebrew>מצב מוכנות לשיגור</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>162</Key>
    <Value>
      <Hebrew>קביעת מדיניות פתיחה באש ישירה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>163</Key>
    <Value>
      <Hebrew>קביעת מדיניות הפתיחה באש ישירה על גילויי אויב.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>164</Key>
    <Value>
      <Hebrew>מדיניות פתיחה באש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>165</Key>
    <Value>
      <Hebrew>אם לא צוין ערך - מדיניות הפתיחה באש נשארת ללא שינוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>166</Key>
    <Value>
      <Hebrew>תיעוד שיגור טק"א</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>167</Key>
    <Value>
      <Hebrew>תיעוד של שיגור טק"א - לצורך תחקיר, ע"י כתיבת רשומת מטח מתאימה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>168</Key>
    <Value>
      <Hebrew>מטרה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>169</Key>
    <Value>
      <Hebrew>המטרה (קב' אמל"ח אווירית שלעברה בוצע השיגור).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>170</Key>
    <Value>
      <Hebrew>סוג החימוש ששוגר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>171</Key>
    <Value>
      <Hebrew>כמות החימוש ששוגר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>172</Key>
    <Value>
      <Hebrew>ירי מטח תמ"ס עתידי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>173</Key>
    <Value>
      <Hebrew>הוספת פקודה עתידית של "ירי מטח תמ"ס", ב"מועד השיגור" שצוין.
בניגוד להוספה ידנית (ע"י משתמש) של פקודת "ירי מטח תמ"ס" עתידית, פקודה שנוספה בדרך זו אינה גורמת להפעלה אוטומטית של הפקודה התו"לית "שיגור תמ"ס" לפני "מועד השיגור".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>174</Key>
    <Value>
      <Hebrew>מזהה פקודה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>175</Key>
    <Value>
      <Hebrew>מזהה הפקודה המשמש לצורך קישור לעורך האירועים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>176</Key>
    <Value>
      <Hebrew>נקודת שיגור</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>177</Key>
    <Value>
      <Hebrew>הנקודה ממנה יבוצע השיגור במקרה של משגר נייד (משגר נייח משגר תמיד ממקומו).
אם לא צוין ערך - נקודת השיגור היא במיקום המשגר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>178</Key>
    <Value>
      <Hebrew>הנקודה אליה מכוון המטח.
נקודות הפגיעה מוגרלות אקראית סביב נקודת המכוון, בהתאם לפיזור האופייני לסוג החימוש המשוגר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>179</Key>
    <Value>
      <Hebrew>מועד השיגור</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>180</Key>
    <Value>
      <Hebrew>המועד העתידי בו תבוצע הפקודה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>181</Key>
    <Value>
      <Hebrew>סוג החימוש שיש לשגר. </Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>182</Key>
    <Value>
      <Hebrew>כמות חימוש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>183</Key>
    <Value>
      <Hebrew>כמות החימוש שיש לשגר. </Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>184</Key>
    <Value>
      <Hebrew>רדיוס פגיעה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>185</Key>
    <Value>
      <Hebrew>המרחק המקסימלי מנקודת הפגיעה שבו עשויות להיפגע קב' אמל"ח.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>186</Key>
    <Value>
      <Hebrew>כלים פגועים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>187</Key>
    <Value>
      <Hebrew>המספר המקסימלי של כלים פגועים שיווצרו בקב' אמל"ח כליות הנמצאות בטווח רדיוס הפגיעה מנקודת הפגיעה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>188</Key>
    <Value>
      <Hebrew>חיילים פצועים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>189</Key>
    <Value>
      <Hebrew>המספר המקסימלי של חיילים פצועים שיווצרו בקב' אמל"ח הנמצאות בטווח רדיוס הפגיעה מנקודת הפגיעה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>190</Key>
    <Value>
      <Hebrew>חיילים הרוגים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>191</Key>
    <Value>
      <Hebrew>המספר המקסימלי של חיילים הרוגים שיווצרו בקב' אמל"ח הנמצאות בטווח רדיוס הפגיעה מנקודת הפגיעה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>192</Key>
    <Value>
      <Hebrew>פגיעת חימוש מנמיך טוס בנקודה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>193</Key>
    <Value>
      <Hebrew>הפעלת מודל ההיפגעות מירי עקיף, לצורך:
- גרימת נזק (שחיקה) ליחידות אטומיות כתוצאה מפגיעה של חימוש מנמיך טוס יחיד (טל"ש/כטב"מ נפץ) בנקודת פגיעה מוגדרת. 
- רישום חבורת מטחים של ירי עקיף המתעדים את הירי ותוצאותיו וניתנים לתחקור במסגרת דו"חות תחקור מבוססי מטחים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>194</Key>
    <Value>
      <Hebrew>זמן הירי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>195</Key>
    <Value>
      <Hebrew>זמן ביצוע הירי, העשוי כמובן להיות מוקדם מזמן הפגיעה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>196</Key>
    <Value>
      <Hebrew>יחידה יורה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>197</Key>
    <Value>
      <Hebrew>היחידה שהטילה/ירתה את החימוש.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>198</Key>
    <Value>
      <Hebrew>מיקום יחידה יורה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>199</Key>
    <Value>
      <Hebrew>מיקום היחידה היורה בזמן הירי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>200</Key>
    <Value>
      <Hebrew>שם המחלקה (תחת  TAH_AIR) המייצגת את סוג החימוש הפוגע.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>201</Key>
    <Value>
      <Hebrew>תוצאת הירי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>202</Key>
    <Value>
      <Hebrew>תיעוד של דיוק הפגיעה (בסקלה איכותית) - במקרה שהירי הסתיים בפיצוץ, או הסיבה לכשלון - במקרה של ירי שלא הסתיים בפיצוץ.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>203</Key>
    <Value>
      <Hebrew>זמן הפגיעה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>204</Key>
    <Value>
      <Hebrew>זמן הפגיעה של החימוש.
ערך ריק מופיע אם ורק אם ערך תוצאת ההטלה הוא "לא השתחרר".
</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>205</Key>
    <Value>
      <Hebrew>נק' מכוון מתוכננת</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>206</Key>
    <Value>
      <Hebrew>מיקום נק' המכוון שתוכננה לחימוש במקור.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>207</Key>
    <Value>
      <Hebrew>נקודת הפגיעה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>208</Key>
    <Value>
      <Hebrew>מיקום הנקודה שבה פגע החימוש. ערך ריק מופיע אם ורק אם ערך תוצאת ההטלה הוא "לא השתחרר".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>209</Key>
    <Value>
      <Hebrew>הגדרת תחום עניין </Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>210</Key>
    <Value>
      <Hebrew>יצירה/עדכון של תחום עניין המגדיר אוכלוסייה של קב' אמל"ח שבהן מתעניינת היחידה המבצעת, לצורך אופטימיזציה בהפצת עדכונים בין מנועי חישוב (back-ends) שונים בסביבת סימולציה מבוזרת.
- האוכלוסיה כוללת קב' אמל"ח הנמצאות בתוך מלבן מיושר - בעל זוג צלעות מקבילות לקו אורך וזוג צלעות מקבילות לקו רוחב.
- אם צוין "החרג רגליות" 'כן' - האוכלוסיה כוללת רק קב' אמל"ח כליות.
- תחום העניין מתקיים ל"משך החיים" המצוין ממועד ביצוע הפקודה, ולאחריו הוא מבוטל אוטומטית.
- אם צוין "מזהה תחום עניין" וביחידה המבצעת קיים כבר תחום עניין בעל מזהה זה - הפקודה מתפרשת כעדכון שלו, אחרת הפקודה מתפרשת כיצירה של תחום עניין חדש.
יש להדגיש כי "מזהה תחום עניין" הוא חח"ע בתוך יחידה מבצעת בלבד, כלומר הוא עשוי לחזור על עצמו ביחידות שונות.

למען הסר ספק: ביחידה עשויים להתקיים מספר תחומי עניין בו-זמנית.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>211</Key>
    <Value>
      <Hebrew>מרכז מלבן</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>212</Key>
    <Value>
      <Hebrew>נקודת המרכז של מלבן תחום העניין.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>213</Key>
    <Value>
      <Hebrew>גובה מלבן</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>214</Key>
    <Value>
      <Hebrew>מימד הגובה (צפון-דרום) של מלבן תחום העניין, במטרים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>215</Key>
    <Value>
      <Hebrew>רוחב מלבן</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>216</Key>
    <Value>
      <Hebrew>מימד הרוחב (מזרח-מערב) של מלבן תחום העניין, במטרים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>217</Key>
    <Value>
      <Hebrew>משך חיים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>218</Key>
    <Value>
      <Hebrew>תחום העניין יבוטל בחלוף משך זמן זה ממועד ביצוע הפקודה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>219</Key>
    <Value>
      <Hebrew>החרג רגליות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>220</Key>
    <Value>
      <Hebrew>אם צוין ערך 'כן' - תחום העניין כולל קב' אמל"ח כליות בלבד.
ערך 'לא' משמעו שתחום העניין כולל את כלל קב' האמל"ח - הן כליות והן רגליות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>221</Key>
    <Value>
      <Hebrew>מזהה תחום עניין</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>222</Key>
    <Value>
      <Hebrew>מזהה אופציונלי של תחום העניין.
אם צוין ערך וביחידה המבצעת קיים כבר תחום עניין בעל מזהה זה - יש לעדכן את התכונות שלו, אחרת - יש ליצור תחום עניין חדש.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>223</Key>
    <Value>
      <Hebrew>יצירת תעלת נ"ט</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>224</Key>
    <Value>
      <Hebrew>יצירת מכשול מסוג תעלת נ"ט באורך 300 מטר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>225</Key>
    <Value>
      <Hebrew>נקודת התחלה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>226</Key>
    <Value>
      <Hebrew>הנקודה שממנה תתחיל חפירת התעלה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>227</Key>
    <Value>
      <Hebrew>הכיוון אליו תיחפר התעלה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>228</Key>
    <Value>
      <Hebrew>יצירת שדה מוקשים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>229</Key>
    <Value>
      <Hebrew>יצירת מכשול מסוג שדה מוקשים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>230</Key>
    <Value>
      <Hebrew>הנקודה שממנה תתחיל הנחת שדה המוקשים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>231</Key>
    <Value>
      <Hebrew>הכיוון אליו תתקדם הנחת שדה המוקשים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>232</Key>
    <Value>
      <Hebrew>אורך</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>233</Key>
    <Value>
      <Hebrew>אורך שדה המוקשים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>234</Key>
    <Value>
      <Hebrew>סוג מוקש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>235</Key>
    <Value>
      <Hebrew>סוג המוקשים שיונחו. אם לא צוין - סוג המוקש ייקבע לפי המצאי ביחידה ובהתאם לסוג הקרקע.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>236</Key>
    <Value>
      <Hebrew>פריצת מכשול</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>237</Key>
    <Value>
      <Hebrew>פריצת מכשול/ים ע"י יצירת מעבר/ים, בהתאם ליכולות הפריצה של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>238</Key>
    <Value>
      <Hebrew>מסלול (קו) פריצה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>239</Key>
    <Value>
      <Hebrew>היכון לטפל בפצועים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>240</Key>
    <Value>
      <Hebrew>פריסת יחידת רפואה ומוכנות לקליטה של פצועים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>241</Key>
    <Value>
      <Hebrew>תיקון כלים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>242</Key>
    <Value>
      <Hebrew>הפקודה גורמת ליחידת חימוש להתחיל לעבוד על כלים בסביבתה הדורשים תיקון.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>243</Key>
    <Value>
      <Hebrew>מילוי מחדש לתקן</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>244</Key>
    <Value>
      <Hebrew>העברת מלאי מיחידות מתספקות סמוכות ליחידה המבצעת, עד לרמת מלאי התקן המוגדרת לסוג היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>245</Key>
    <Value>
      <Hebrew>יחידות מתספקות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>246</Key>
    <Value>
      <Hebrew>אוסף יחידות (קב' אמל"ח ו/או מסגרות) שמהן בלבד יימשך המלאי הנדרש. 
אם לא צוין ערך - המלאי יימשך מכל קב' אמל"ח מתספקת שתימצא מתאימה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>247</Key>
    <Value>
      <Hebrew>סוג פריט לאספקה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>248</Key>
    <Value>
      <Hebrew>ביצוע מילוי מחדש יוגבל לפריטי מלאי המשתייכים לסוג זה בלבד. אם לא צוין ערך - יבוצע מילוי מחדש (בשאיפה) לכל פריטי המלאי הניתנים למשיכה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>249</Key>
    <Value>
      <Hebrew>קביעת מזהה יחק"צ שו"ב לוגיסטי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>250</Key>
    <Value>
      <Hebrew>קביעת ערך מזהה יחק"צ שו"ב לוגיסטי של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>251</Key>
    <Value>
      <Hebrew>מזהה יחק"צ</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>252</Key>
    <Value>
      <Hebrew>הערך החדש של מזהה יחידת קצה שו"ב לוגיסטי של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>253</Key>
    <Value>
      <Hebrew>קביעת מצב שדרת היסע מבצעי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>254</Key>
    <Value>
      <Hebrew>עדכון מצבה של שדרת היסע מבצעי (היחידה המבצעת) בטבלת מצב שדרות היסע מבצעי.
ערך ריק לפרמטר משמעו שהשדה המקביל ברשומה שבטבלה נשאר ללא שינוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>255</Key>
    <Value>
      <Hebrew>מזהה שדרה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>256</Key>
    <Value>
      <Hebrew>המספר המזהה של השדרה במערכת השו"ב הלוגיסטי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>257</Key>
    <Value>
      <Hebrew>ראש</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>258</Key>
    <Value>
      <Hebrew>קב' האמל"ח הנמצאת בראש השדרה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>259</Key>
    <Value>
      <Hebrew>זנב</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>260</Key>
    <Value>
      <Hebrew>קב' האמל"ח הנמצאת בזנב השדרה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>261</Key>
    <Value>
      <Hebrew>יחידות מובלות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>262</Key>
    <Value>
      <Hebrew>אוסף היחידות המובלות ע"י השדרה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>263</Key>
    <Value>
      <Hebrew>מצב משימה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>264</Key>
    <Value>
      <Hebrew>המצב הנוכחי של המשימה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>265</Key>
    <Value>
      <Hebrew>הערות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>266</Key>
    <Value>
      <Hebrew>הפעלה/כיבוי אמצעי אלמ"ג</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>267</Key>
    <Value>
      <Hebrew>הפעלה/כיבוי של כלל אמצעי האלמ"ג (מקלטים ומשדרים) ביחידה, על מנת להפסיק/לחדש באופן גורף את כל השידורים ו/או הקליטות הרצויות המוגדרים לה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>268</Key>
    <Value>
      <Hebrew>אמצעי אלמ"ג פעילים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>269</Key>
    <Value>
      <Hebrew>הגדרת מצב עבודה למכ"ם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>270</Key>
    <Value>
      <Hebrew>קביעת מצב העבודה של המכ"ם, ביחידה בעלת מכ"ם.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>271</Key>
    <Value>
      <Hebrew>מצב העבודה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>272</Key>
    <Value>
      <Hebrew>מצב העבודה החדש של מכ"ם היחידה.
ערך ברירת מחדל: מצב עבודת המכ"ם בפועל ביחידה המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>273</Key>
    <Value>
      <Hebrew>הפעלת אמצעי ל"א</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>274</Key>
    <Value>
      <Hebrew>הפעלת אמצעי ל"א למשך זמן נתון.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>275</Key>
    <Value>
      <Hebrew>סוג אמצעי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>276</Key>
    <Value>
      <Hebrew>סוג האמצעי שיש להפעיל מתוך סוגי אמצעי הל"א הקיימים במלאי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>277</Key>
    <Value>
      <Hebrew>משך הפעלה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>278</Key>
    <Value>
      <Hebrew>משך הפעלת האמצעי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>279</Key>
    <Value>
      <Hebrew>טיסת איסוף</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>280</Key>
    <Value>
      <Hebrew>טיסה מחזורית לאורך נתיב טיסה מעגלי, בגובה ובמהירות האופייניים לסוג הפלטפורמה. במהלך הטיסה, אמצעי האיסוף שעל המטוס פעילים.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>281</Key>
    <Value>
      <Hebrew>נתיב טיסה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>282</Key>
    <Value>
      <Hebrew>הנתיב שלאורכו תתבצע הטיסה באופן מחזורי.
מעגליות הנתיב נוצרת ע"י הוספת לג המקשר את הנקודה האחרונה שלו לנקודה הראשונה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>283</Key>
    <Value>
      <Hebrew>הנקודה על נתיב הטיסה שצוין, שממנה תתחיל הטיסה. אם לא צוינה - ההתחלה המשתמעת היא בנקודה הראשונה של נתיב הטיסה.
פרמטר זה נועד לשימוש פקודות תו"ליות בלבד (אינו מיועד להזנה ע"י משתמש).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>284</Key>
    <Value>
      <Hebrew>פקטור האטת מהירות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>285</Key>
    <Value>
      <Hebrew>כופל (בין 0 ל- 1) של מהירות הטיסה האופיינית, לצורך האטת מהירות הטיסה. פרמטר זה נועד לשימוש פקודות תו"ליות בלבד (אינו מיועד להזנה ע"י משתמש).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>286</Key>
    <Value>
      <Hebrew>טיסה לאורך נתיב מעגלי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>287</Key>
    <Value>
      <Hebrew>טיסה מחזורית לאורך נתיב טיסה מעגלי, בגובה המצוין ובמהירות האופיינית לסוג הפלטפורמה. אם היחידה אינה נמצאת בתחילת נתיב הטיסה שצוין - היא "מוקפצת" לשם בתחילת הביצוע.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>288</Key>
    <Value>
      <Hebrew>גובה טיסה (רגל)</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>289</Key>
    <Value>
      <Hebrew>הגובה האבסולוטי (מעל פני הים) שבו תתבצע הטיסה, ביחידות רגל.
אם לא צוין גובה טיסה, הטיסה תתבצע בגובה הטיסה האופייני לסוג היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>290</Key>
    <Value>
      <Hebrew>שליחת דיווח</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>291</Key>
    <Value>
      <Hebrew>שליחת דיווח (הודעה המוצגת למשתמש) ליחידה/ות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>292</Key>
    <Value>
      <Hebrew>נוסח הדיווח</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>293</Key>
    <Value>
      <Hebrew>דרגת חשיבות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>294</Key>
    <Value>
      <Hebrew>דרגת החשיבות המיוחסת לדיווח - משפיעה על אופן הצגתו בממשק המשתמש.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>295</Key>
    <Value>
      <Hebrew>יחידות נמענות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>296</Key>
    <Value>
      <Hebrew>אוסף היחידות שאליהן יישלח הדיווח.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>297</Key>
    <Value>
      <Hebrew>שליחת הודעה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>298</Key>
    <Value>
      <Hebrew>שליחת הודעה אינפורמטיבית (דיווח) מטעם היחידה המבצעת לכל אחת מהיחידות הנמענות שצוינו (אם לא צוינו יחידות נמענות - ליחידה המבצעת עצמה).
ההודעה מוצגת בממשק המשתמש בהתאם למאפיינים הטיפוסיים לסוגה - חומרה, משך חיים, אינדיקציית טיפול נדרש ונוסח ברירת מחדל (במקרה שלא צוין נוסח).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>299</Key>
    <Value>
      <Hebrew>סוג הודעה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>300</Key>
    <Value>
      <Hebrew>נוסח ההודעה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>301</Key>
    <Value>
      <Hebrew>אם לא צוין - נוסח ההודעה הוא נוסח ברירת המחדל האופייני לסוג ההודעה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>302</Key>
    <Value>
      <Hebrew>אוסף היחידות שאליהן תשלח ההודעה. 
אם לא צוינו יחידות נמענות - היחידה הנמענת המשתמעת היא היחידה המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>303</Key>
    <Value>
      <Hebrew>עדכון מלאי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>304</Key>
    <Value>
      <Hebrew>קביעת כמות המלאי מפריט נתון ביחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>305</Key>
    <Value>
      <Hebrew>סוג פריט</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>306</Key>
    <Value>
      <Hebrew>שם המחלקה (תחת  PARIT) המייצגת את סוג הפריט שאת כמותו במלאי יש לקבוע.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>307</Key>
    <Value>
      <Hebrew>הכמות הכוללת של סוג הפריט שצוין במלאי של [כל קבוצות האמל"ח שתחת] היחידה נקבעת לערך זה.
יש לציין כמות או אחוז מכמות תקן, אך לא את שניהם.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>308</Key>
    <Value>
      <Hebrew>אחוז מכמות תקן</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>309</Key>
    <Value>
      <Hebrew>הכמות של סוג הפריט שצוין במלאי של כל אחת מקבוצות האמל"ח שתחת היחידה, נקבעת לאחוז המצוין מכמות התקן המוגדרת לפריט זה באותה קב' אמל"ח (כמות התקן היא הכמות שאיתה "נולדת" קב' אמל"ח מסוג מסוים בעת יצירתה).
יש לציין כמות או אחוז מכמות תקן, אך לא את שניהם.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>310</Key>
    <Value>
      <Hebrew>הזזת יחידה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>311</Key>
    <Value>
      <Hebrew>"הקפצה" מיידית של היחידה למיקום שצוין, ללא התחשבות בעבירות. יחידות המשנה שומרות על מיקומן היחסי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>312</Key>
    <Value>
      <Hebrew>מיקום</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>313</Key>
    <Value>
      <Hebrew>המיקום החדש של היחידה. </Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>314</Key>
    <Value>
      <Hebrew>קביעת כיוון ליחידות המשנה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>315</Key>
    <Value>
      <Hebrew>קביעה מיידית של הכיוון לכל היחידות האלמנטריות המשתייכות ליחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>316</Key>
    <Value>
      <Hebrew>הכיוון החדש של כל היחידות האלמנטריות המשתייכות ליחידה. </Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>317</Key>
    <Value>
      <Hebrew>פיצול קב' אמל"ח</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>318</Key>
    <Value>
      <Hebrew>פיצול קב' האמל"ח מקבלת הפקודה ע"י יצירת קב' אמל"ח חדשה המכילה את הכלים/חיילים העוזבים, יחד עם המלאי "המגיע" להם באופן יחסי למספרם, תוך הקפדה על "חוק שימור החומר".
קב' האמל"ח החדשה נוצרת תחת יחידת האב של קב' האמל"ח מקבלת הפקודה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>319</Key>
    <Value>
      <Hebrew>מספר העוזבים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>320</Key>
    <Value>
      <Hebrew>מספר הכלים העוזבים את קב' האמל"ח - במקרה שהיא כלית, מספר החיילים העוזבים - במקרה שהיא רגלית.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>321</Key>
    <Value>
      <Hebrew>יצירת קב' אמל"ח חדשה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>322</Key>
    <Value>
      <Hebrew>יצירת קב' אמל"ח חדשה "יש מאין".
אם היחידה המקבלת היא מסגרת - קב' האמל"ח החדשה נוצרת תחתיה, אם היא קב' אמל"ח -  קב' האמל"ח החדשה נוצרת תחת המסגרת הראשונה שמעליה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>323</Key>
    <Value>
      <Hebrew>סוג קב' אמל"ח</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>324</Key>
    <Value>
      <Hebrew>שם המחלקה (תחת UN_SIMPLE) המייצגת את סוג קבוצת האמל"ח שיש ליצור.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>325</Key>
    <Value>
      <Hebrew>מספר הבדידים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>326</Key>
    <Value>
      <Hebrew>מספר הכלים בקב' האמל"ח החדשה - במקרה של יחידה כלית, מספר החיילים - במקרה של יחידה רגלית.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>327</Key>
    <Value>
      <Hebrew>המיקום בו יש להציב את קב' האמל"ח החדשה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>328</Key>
    <Value>
      <Hebrew>סיומת שם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>329</Key>
    <Value>
      <Hebrew>סיומת השם "נטו" של קב' האמל"ח החדשה, ללא רכיבי השם הנלקחים משמות היחידות הממונות. אם לא צוינה - סיומת השם תיקבע עפ"י כללי ברירת מחדל לשיום יחידות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>330</Key>
    <Value>
      <Hebrew>יצירת מסגרת חדשה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>331</Key>
    <Value>
      <Hebrew>יצירת מסגרת יחידתית חדשה ריקה תחת היחידה המקבלת, במיקום הנוכחי שלה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>332</Key>
    <Value>
      <Hebrew>דרג היחידה המסגרתית שיש ליצור.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>333</Key>
    <Value>
      <Hebrew>סיומת השם "נטו" של היחידה החדשה, ללא רכיבי השם הנלקחים משמות היחידות הממונות. אם לא צוינה - סיומת השם תיקבע עפ"י כללי ברירת מחדל לשיום יחידות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>334</Key>
    <Value>
      <Hebrew>ביטול יחידה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>335</Key>
    <Value>
      <Hebrew>ביטול היחידה המקבלת ומחיקתה מעץ היחידות.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>336</Key>
    <Value>
      <Hebrew>השמדת קב' אמל"ח</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>337</Key>
    <Value>
      <Hebrew>עדכון מצב קב' האמל"ח המקבלת כך שתחשב ל"מושמדת" - כהגדרתה ע"י הפונקציה האטומית UnitIsDefunct.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>338</Key>
    <Value>
      <Hebrew>שינוי שם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>339</Key>
    <Value>
      <Hebrew>שינוי שם היחידה המקבלת. השם מוגבל ל- 8 תווים לכל היותר.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>340</Key>
    <Value>
      <Hebrew>שינוי תוספת לשם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>341</Key>
    <Value>
      <Hebrew>שינוי התוספת לשם של היחידה המקבלת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>342</Key>
    <Value>
      <Hebrew>תוספת לשם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>343</Key>
    <Value>
      <Hebrew>קביעת תדר סימולציה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>344</Key>
    <Value>
      <Hebrew>קביעת תדר הסימולציה של קב' האמל"ח.
קב' אמל"ח הפועלת בתדר גבוה מעודכנת במרווחי זמן קצרים יחסית (צעדונים חלקיים) באופן שוטף, בהתאם לזרימת הזמן בשעון האמיתי.
קב' אמל"ח הפועלת בתדר רגיל (לא גבוה) מעודכנת במרווחי זמן ארוכים יחסית (צעדונים), במהלך חישוב צעד זמן בלבד.

הערה: תדר הסימולציה הנוכחי של קב' אמל"ח (משך צעדון חלקי/צעדון) מוחזר ע"י הפונקציה האטומית UnitSimulationCycleLength.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>345</Key>
    <Value>
      <Hebrew>תדר גבוה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>346</Key>
    <Value>
      <Hebrew>הפעלת חוק חילול שיחות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>347</Key>
    <Value>
      <Hebrew>הפעלת חוק חילול השיחות המצוין.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>348</Key>
    <Value>
      <Hebrew>חוק (שם מחלקה)</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>349</Key>
    <Value>
      <Hebrew>שם המחלקה של החוק אותו יש להפעיל עבור היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>350</Key>
    <Value>
      <Hebrew>דוברים מועדפים</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>351</Key>
    <Value>
      <Hebrew>אוסף קב' אמל"ח שמתוכו יש לבחור דוברים בעדיפות ראשונה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>352</Key>
    <Value>
      <Hebrew>קביעת מצב פעילות רשתות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>353</Key>
    <Value>
      <Hebrew>קביעת מצב הפעילות של אוסף רשתות מתוך כלל הרשתות של היחידה (רשתות שהיחידה היא "בעלת הרשת" שלהן) למצב הפעילות המצוין. האוסף כולל כל רשת Ni של היחידה העומדת בקריטריונים המוגדרים ע"י פרמטרי הסינון (כולם אופציונליים):
- אם צוין סוג רשת - הסוג של Ni משתייך לסוג הרשת המצוין.
- אם צוינה תגית מכלילה (להלן I) - אוסף התגיות (TAGS) המאפיין את הסוג של Ni כולל לפחות תגית אחת מסוג המשתייך ל- I.
- אם צוינה תגית מחריגה (להלן E) - אוסף התגיות המאפיין את הסוג של Ni אינו כולל אף תגית מסוג המשתייך ל- E.
השמטת פרמטר סינון משמעה שהקריטריון המקביל אינו נלקח בחשבון. בפרט אם לא צוין אף פרמטר סינון - אוסף הרשתות המושפעות כולל את כלל הרשתות של היחידה.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>354</Key>
    <Value>
      <Hebrew>סוג רשת</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>355</Key>
    <Value>
      <Hebrew>תגית מכלילה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>356</Key>
    <Value>
      <Hebrew>תגית מחריגה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>357</Key>
    <Value>
      <Hebrew>מצב פעילות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>358</Key>
    <Value>
      <Hebrew>הפעלת חוק חילול שיחות בעבר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>359</Key>
    <Value>
      <Hebrew>הפעלת חוק חילול השיחות המצוין בעבר, לצורך חילול שיחות עבר "הסטוריות".</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>360</Key>
    <Value>
      <Hebrew>זמן הפעלה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>361</Key>
    <Value>
      <Hebrew>הזמן בעבר שבו יש להפעיל את החוק.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>362</Key>
    <Value>
      <Hebrew>מיקום דובר עצמי</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>363</Key>
    <Value>
      <Hebrew>המיקום המיוחס לקב' האמל"ח שעליה הופעלה הפקודה ("יחידת הפיבוט") בכל שיחה המופעלת ע"י החוק שבה היא מופיעה כדובר. אם לא צוין ערך - המיקום הנוכחי תקף.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>364</Key>
    <Value>
      <Hebrew>מיקום דובר אחר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>365</Key>
    <Value>
      <Hebrew>המיקום המיוחס לכל קב' אמל"ח אחרת פרט ל"יחידת הפיבוט" בכל שיחה המופעלת ע"י החוק. אם לא צוין ערך - המיקום הנוכחי תקף.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>366</Key>
    <Value>
      <Hebrew>הפצת שיחות עבר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>367</Key>
    <Value>
      <Hebrew>- איסוף כל שיחות העבר השמורות בכל קב' האמל"ח המשתייכות ליחידה המבצעת ומחיקתן מהאוסף.
- תזמון כל שיחות העבר שנאספו.
- הפצת שיחות העבר המתוזמנות דרך הממשק.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>368</Key>
    <Value>
      <Hebrew>מחיקת שיחות עבר</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>369</Key>
    <Value>
      <Hebrew>מחיקת כל שיחות העבר השמורות בקב' האמל"ח המבצעת.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>370</Key>
    <Value>
      <Hebrew>קביעת פעילות עיקרית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>371</Key>
    <Value>
      <Hebrew>קביעת הפעילות העיקרית של היחידה, לצורך הצגת סימן פעילות מתאים בממשק המשתמש.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>372</Key>
    <Value>
      <Hebrew>פעילות עיקרית</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>373</Key>
    <Value>
      <Hebrew>קביעת כיוון</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>374</Key>
    <Value>
      <Hebrew>קביעה הכיוון אליו מופנים כלי/חיילי היחידה.
כיוון היחידה משפיע על סימן הפעילות - באם הוא כיווני.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>375</Key>
    <Value>
      <Hebrew>הפעלה/כיבוי אמצעי נגד</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>376</Key>
    <Value>
      <Hebrew>הפעלה/כיבוי של אמצעי הנגד השונים הקיימים ביחידה: אמצעים פסיביים -  הסוואה ומיסוך עשן ואמצעים אקטיביים - משבש מכ"מ וחוסם GPS.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>377</Key>
    <Value>
      <Hebrew>הסוואה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>378</Key>
    <Value>
      <Hebrew>המצב החדש של ההסוואה ביחידה המבצעת.
ערך ריק משמעו שמצב ההסוואה ביחידה יישאר ללא שינוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>379</Key>
    <Value>
      <Hebrew>מיסוך עשן</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>380</Key>
    <Value>
      <Hebrew>המצב החדש של מיסוך עשן ביחידה המבצעת.
ערך ריק משמעו שמצב מיסוך העשן ביחידה יישאר ללא שינוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>381</Key>
    <Value>
      <Hebrew>חוסם GPS</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>382</Key>
    <Value>
      <Hebrew>המצב החדש של חוסם ה- GPS ביחידה המבצעת.
ערך ריק משמעו שמצב חוסם ה- GPS ביחידה יישאר ללא שינוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>383</Key>
    <Value>
      <Hebrew>משבש מכ"ם</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>384</Key>
    <Value>
      <Hebrew>המצב החדש של משבש המכ"ם ביחידה המבצעת.
ערך ריק משמעו שמצב משבש המכ"ם ביחידה יישאר ללא שינוי.</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>385</Key>
    <Value>
      <Hebrew>קביעת מצב כוננות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>386</Key>
    <Value>
      <Hebrew>קביעת מצב הכוננות של היחידה.
הערה: הערך ההתחלתי של מצב כוננות הוא ריק (בלתי מוגדר). ערך מצב כוננות שאינו ריק מוצג בממשק המשתמש (פנל נתוני יחידה).</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>387</Key>
    <Value>
      <Hebrew>מצב כוננות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>388</Key>
    <Value>
      <Hebrew>פקודה אטומית לבדיקה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>389</Key>
    <Value>
      <Hebrew>יחידה</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>390</Key>
    <Value>
      <Hebrew>נצ</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>391</Key>
    <Value>
      <Hebrew>אזור</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>392</Key>
    <Value>
      <Hebrew>תחום</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>393</Key>
    <Value>
      <Hebrew>יחידות</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>394</Key>
    <Value>
      <Hebrew>אובייקט</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>395</Key>
    <Value>
      <Hebrew>תאור</Hebrew>
    </Value>
  </Entry>
  <Entry>
    <Key>396</Key>
    <Value>
      <English>Wander</English>
    </Value>
  </Entry>
  <Entry>
    <Key>397</Key>
    <Value>
      <English>Move casually between randomly selected destinations in the specified Wandering Area, remaining in each destination for the specified Wait Duration.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>398</Key>
    <Value>
      <English>Wandering Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>399</Key>
    <Value>
      <English>Wait Duration</English>
    </Value>
  </Entry>
  <Entry>
    <Key>400</Key>
    <Value>
      <English>Unit ID</English>
    </Value>
  </Entry>
  <Entry>
    <Key>401</Key>
    <Value>
      <English>Returns the technical ID of the specified Unit parameter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>402</Key>
    <Value>
      <English>Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>403</Key>
    <Value>
      <English>Unit Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>404</Key>
    <Value>
      <English>Returns the type of the specified Unit parameter, as mapped to the generalized UT_UnitType hierarchy.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>405</Key>
    <Value>
      <English>Unit Aggregate Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>406</Key>
    <Value>
      <English>Returns the Aggregate Type of the specified AggregateUnit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>407</Key>
    <Value>
      <English>Aggregate Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>408</Key>
    <Value>
      <English>Unit Aggregate Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>409</Key>
    <Value>
      <English>Returns the native type of the specified Unit parameter, i.e. the exact type used to classify it, without any mapping. If the specified Unit is not an aggregate - a Null NativeType is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>410</Key>
    <Value>
      <English>Unit Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>411</Key>
    <Value>
      <English>Returns the native type of the specified Unit parameter, i.e. the exact type used to classify it, without any mapping.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>412</Key>
    <Value>
      <English>Unit Vehicle Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>413</Key>
    <Value>
      <English>Returns the native type of the Vehicle (sub-type of VEHICLE) used by the specified SimpleUnit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>414</Key>
    <Value>
      <English>SimpleUnit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>415</Key>
    <Value>
      <English>Unit Name</English>
    </Value>
  </Entry>
  <Entry>
    <Key>416</Key>
    <Value>
      <English>Returns the name of the specified Unit parameter.
For units bellow Battalion level, the name is qualified, i.e. it contains the path up to and including the Battalion name. For Battalions and above - the name is not qualified.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>417</Key>
    <Value>
      <English>Unit Name Extension</English>
    </Value>
  </Entry>
  <Entry>
    <Key>418</Key>
    <Value>
      <English>Returns the name extension of the specified Unit parameter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>419</Key>
    <Value>
      <English>Unit Army Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>420</Key>
    <Value>
      <English>Returns the Army Type to which the specified Unit belongs.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>421</Key>
    <Value>
      <English>Unit Army Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>422</Key>
    <Value>
      <English>Returns the Army Native Type to which the specified Unit belongs.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>423</Key>
    <Value>
      <English>Unit Echelon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>424</Key>
    <Value>
      <English>Returns the Echelon of the specified Unit parameter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>425</Key>
    <Value>
      <English>Unit Alliance Color</English>
    </Value>
  </Entry>
  <Entry>
    <Key>426</Key>
    <Value>
      <English>Returns the Alliance Color of the specified Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>427</Key>
    <Value>
      <English>Unit Exists</English>
    </Value>
  </Entry>
  <Entry>
    <Key>428</Key>
    <Value>
      <English>Returns "true" if the specified Unit exists. A unit ceases to exist when removed/deleted from the simulation.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>429</Key>
    <Value>
      <English>Unit Role Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>430</Key>
    <Value>
      <English>Returns the native type of the Role (sub-type of ROLE) associated with the current profile of the specified SimpleUnit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>431</Key>
    <Value>
      <English>Unit Mounted Passengers</English>
    </Value>
  </Entry>
  <Entry>
    <Key>432</Key>
    <Value>
      <English>Returns all Simple Units that are currently mounted on the specified CarrierSimpleUnit.
If no Simple Unit is currently mounted on the specified CarrierSimpleUnit - an empty collection is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>433</Key>
    <Value>
      <English>Carrier Simple Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>434</Key>
    <Value>
      <English>Unit Carrier</English>
    </Value>
  </Entry>
  <Entry>
    <Key>435</Key>
    <Value>
      <English>Returns the Simple Unit on which the specified PassengerSimpleUnit is currently mounted.
If the specified PassengerSimpleUnit is not currently mounted on any carrier - Null Unit is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>436</Key>
    <Value>
      <English>Passenger Simple Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>437</Key>
    <Value>
      <English>Unit DIrect Fire Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>438</Key>
    <Value>
      <English>Returns the current policy of the specified SimpleUnit for direct fire at detected enemy Simple Units.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>439</Key>
    <Value>
      <English>Unit Main Activity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>440</Key>
    <Value>
      <English>Returns the main activity of the specified Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>441</Key>
    <Value>
      <English>Unit is Moving</English>
    </Value>
  </Entry>
  <Entry>
    <Key>442</Key>
    <Value>
      <English>Returns "true" if the specified Unit (parameter) is currently executing a "location changing" Command (i.e. a Command whose EndLocation is different than its StartLocation). Note that if an executed "location changing" Command is suspended, the executing Unit is still considered to be moving.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>443</Key>
    <Value>
      <English>Unit Current Direction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>444</Key>
    <Value>
      <English>Returns the Direction the specified Unit is currently facing.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>445</Key>
    <Value>
      <English>Unit Heading</English>
    </Value>
  </Entry>
  <Entry>
    <Key>446</Key>
    <Value>
      <English>Returns the current heading (dynamic property) of the specified SimpleUnit. Heading value is set according to the following rules:
- While moving, the heading of a Simple Unit is constantly updated to reflect the Azimuth of the current leg on its movement route. This applies to all types of Simple Units - land, air and sea, in all forms of movement - driving/walking, flying, sailing. After movement, heading naturally retains its last set value (Azimuth of the last movement leg).
- A change of direction in a stationary Simple Unit (e.g by AtomicAssumePosition or SetOwnDirection Commands) sets heading to the median Azimuth of the new direction only if it currently lies outside the Azimuth boundaries of the new set direction (otherwise heading remains as is). For example: the effect of setting direction to DR_SouthEast depends on current heading value: if current heading is 97 (outside bounds of South-East) - then it is set to 135, however if current heading is 129 (inside bounds) - it remains as is.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>447</Key>
    <Value>
      <English>Simple Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>448</Key>
    <Value>
      <English>Unit Native Item Type in Inventory</English>
    </Value>
  </Entry>
  <Entry>
    <Key>449</Key>
    <Value>
      <English>Returns the Native Type of the first concrete Inventory Item belonging to the specified ItemType, that exists (i.e has a quantity greater than zero) in the inventory of at least one of the Simple Units belonging to the specified Unit.
If no such Inventory Item exists - a Null Native Type is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>450</Key>
    <Value>
      <English>Item Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>451</Key>
    <Value>
      <English>Unit Actual Radar Operation Mode</English>
    </Value>
  </Entry>
  <Entry>
    <Key>452</Key>
    <Value>
      <English>Returns the actual Radar Operation Mode of the specified Simple Unit (hereinafter U), which is determined as follows:
If U is operational (UnitIsOperational(U) returns 'true') - it is the current Radar Operation Mode of U (see SetRadarOperationMode Atomic Command), otherwise it is ROM_Off.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>453</Key>
    <Value>
      <English>Unit Location is Real</English>
    </Value>
  </Entry>
  <Entry>
    <Key>454</Key>
    <Value>
      <English>Returns "true" if the location of the specified Unit reflects the location of an actual unit that exists in the real world.
Note that this property is dynamic since the association of a location transmitter with a corresponding unit may change during the course of an exercise.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>455</Key>
    <Value>
      <English>Unit is Underground</English>
    </Value>
  </Entry>
  <Entry>
    <Key>456</Key>
    <Value>
      <English>Returns "true" if the specified SimpleUnit is located underground.
Note:underground entry/exit is performed by the AtomicEnterUnderground / AtomicExitUnderground Atomic Commands.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>457</Key>
    <Value>
      <English>Unit Available Indirect Fire Ammo</English>
    </Value>
  </Entry>
  <Entry>
    <Key>458</Key>
    <Value>
      <English>Returns all Indirect Fire Ammunition (AT_Indirect sub-types) inventory that is available for fire by the specified SimpleUnit. This includes both own inventory and inventory of nearby friendly ammunition sources (offloaded ammunition stockpiles, ammunition supply trucks/APCs etc.).
Notes:
- The returned collection contains a single Allocation for each available NativeType of Indirect Fire Ammunition, representing the entire (cummulative) available Quantity.
- The returned collection is limited to Indirect Fire Ammunition NativeTypes that the specified SimpleUnit is capable of firing.
- The Duration property of each Allocation in the returned collection is set to zero.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>459</Key>
    <Value>
      <English>Unit Longest Range Ammo Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>460</Key>
    <Value>
      <English>Returns the Native Type of the ammunition Inventory Item whose range (see below) is maximal, among all ammunition Inventory Items belonging to the specified AmmoType that exist (quantity &gt; 0) in the inventory of the specified SimpleUnit.
The range (in meters) of an ammunition type is given by its AMM_EFF_RANGE external property - if the specified UseEffectiveRange is true, otherwise - by its AMM_MAX_RANGE external property.
If no Inventory Item belonging to the specified AmmoType exists in inventory - a Null Native Type is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>461</Key>
    <Value>
      <English>Ammo Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>462</Key>
    <Value>
      <English>Use Effective Range</English>
    </Value>
  </Entry>
  <Entry>
    <Key>463</Key>
    <Value>
      <English>Unit is Defunct</English>
    </Value>
  </Entry>
  <Entry>
    <Key>464</Key>
    <Value>
      <English>Returns 'true' if the specified Unit is defunct/dead, i.e incapable of doing anything.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>465</Key>
    <Value>
      <English>Unit is Operational</English>
    </Value>
  </Entry>
  <Entry>
    <Key>466</Key>
    <Value>
      <English>Returns 'true' if the specified SimpleUnit (hereinafter U) is considered operational, i.e if one of the following conditions is met:
- U is considered to be always operational (the ALWAYS_OPERATIONAL typical external property of U is 'true') AND U is not currently in storage (UnitMainActivity(U) is not MA_InStorage).
- U is deployed (UnitsFilteredByDeploymentState([U], true) returns [U]).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>467</Key>
    <Value>
      <English>Unit Can Supply</English>
    </Value>
  </Entry>
  <Entry>
    <Key>468</Key>
    <Value>
      <English>Returns 'true' is the specified SimpleUnit can supply at least one Inventory Item Type that belongs to the specified ItemType.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>469</Key>
    <Value>
      <English>Unit Has EMG Device</English>
    </Value>
  </Entry>
  <Entry>
    <Key>470</Key>
    <Value>
      <English>Returns 'true' if the specified Unit has an EMG (Electromagnetic) Device that operates in the specified Medium.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>471</Key>
    <Value>
      <English>Medium</English>
    </Value>
  </Entry>
  <Entry>
    <Key>472</Key>
    <Value>
      <English>Unit Current Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>473</Key>
    <Value>
      <English>Returns the current location of the Unit parameter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>474</Key>
    <Value>
      <English>Unit Vehicles Count</English>
    </Value>
  </Entry>
  <Entry>
    <Key>475</Key>
    <Value>
      <English>Returns the number of vehicles in all Simple Units of the specified UnitType that belong to at least one of the Units in the specified UnitCollection, whose serviceability matches the specified VehicleServiceability.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>476</Key>
    <Value>
      <English>Unit Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>477</Key>
    <Value>
      <English>Vehicle Serviceability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>478</Key>
    <Value>
      <English>Unit Infantry Soldiers Count</English>
    </Value>
  </Entry>
  <Entry>
    <Key>479</Key>
    <Value>
      <English>Returns the overall number of infantry (foot) soldiers in all Simple Units of the specified UnitType that belong to at least one of the Units in the specified UnitCollection, whose competence matches the specified SoldierCompetence.
Note: both mounted and dismounted infantry soldiers are counted.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>480</Key>
    <Value>
      <English>Soldier Competence</English>
    </Value>
  </Entry>
  <Entry>
    <Key>481</Key>
    <Value>
      <English>Unit Mounted Soldiers Occupancy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>482</Key>
    <Value>
      <English>Return the overall number of soldiers currently mounted on vehicles of all Simple Units belonging to at least one of the Units in the specified UnitCollection.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>483</Key>
    <Value>
      <English>Unit Mounted Soldiers Vacancy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>484</Key>
    <Value>
      <English>Return the overall remaining vacancy for carrying mounted soldiers in all vehicles of all Simple Units belonging to at least one of the Units in the specified UnitCollection.
Wounded and dead soldiers do not occupy any space when mounted and are therefore disregarded for vacancy consideration.

If AllowCarrierSharing is false - vacancy is limited by the fact that a vehicle may only be mounted by a single Simple Unit.
For example, given that: 
- A carrier Simple Unit C has 3 vehicles with each vehicle having a theoretical capacity for carrying 10 soldiers in it.
- C is currently mounted by a "passenger" Infantry Simple Unit that has 21 soldiers - 4 of which are wounded/dead and the rest (17) are competent.
the remaining vacancy for carrying mounted soldiers in C is considered to be 10.

If however AllowCarrierSharing is true - the remaining vacancy for carrying mounted soldiers in C is considered to be 13.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>485</Key>
    <Value>
      <English>Allow Carrier Sharing</English>
    </Value>
  </Entry>
  <Entry>
    <Key>486</Key>
    <Value>
      <English>Unit Current Inventory</English>
    </Value>
  </Entry>
  <Entry>
    <Key>487</Key>
    <Value>
      <English>Returns the total quantity of all inventory items of types belonging to the specified ItemType, that are currently found in all Simple Units belonging to the specified Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>488</Key>
    <Value>
      <English>Unit Current Inventory Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>489</Key>
    <Value>
      <English>Returns the total quantity of all inventory items of Native Types belonging to the specified ItemNativeType, that are currently found in all Simple Units belonging to the specified Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>490</Key>
    <Value>
      <English>Item Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>491</Key>
    <Value>
      <English>Unit Current Inventory Percentage</English>
    </Value>
  </Entry>
  <Entry>
    <Key>492</Key>
    <Value>
      <English>Returns the overall percentage (current quantity out of standard quantity) for all inventory items of types belonging to the specified ItemType, in all Simple Units belonging to the specified Unit.
Note that the returned percentage may be greater than 100, since current quantity is limited by maximal quantity (physical limitation), which may exceed standard quantity (initialization default).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>493</Key>
    <Value>
      <English>Units Avarage Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>494</Key>
    <Value>
      <English>Returns the avarage location of all Units in the specified UnitCollection.
If the specified UnitCollection is empty - a Null Point is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>495</Key>
    <Value>
      <English>Unit State of Readiness</English>
    </Value>
  </Entry>
  <Entry>
    <Key>496</Key>
    <Value>
      <English>Returns the State of Readiness of the specified AggregateUnit as set by the last executed SetStateOfReadiness Atomic Command. If a SetStateOfReadiness Command was never executed by the specified AggregateUnit - a Null Enumeration is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>497</Key>
    <Value>
      <English>Units Worst Passability Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>498</Key>
    <Value>
      <English>Returns the worst Land Passability among all non-mounted live land Simple Units belonging to at least one of the Units in the specified UnitCollection.
Land Passabilities are ordered as follows, from best to worst:
- On Foot
- Remarkable
- Tracked
- Multi Wheel Drive
- Two Wheel Drive
If none of the Units of the specified UnitCollection contain any non-mounted live land Simple Unit - the returned value is Two Wheel Drive.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>499</Key>
    <Value>
      <English>Units Slowest Movement Speed</English>
    </Value>
  </Entry>
  <Entry>
    <Key>500</Key>
    <Value>
      <English>Returns the typical movement speed (in Kilometer per hour) of the slowest Simple Unit in the specified SimpleUnitsCollection.
If the specified TacticalMovement value is true - typical tactical movement speeds are considered, otherwise typical aggregate movement speeds apply.
If the specified SimpleUnitsColection is empty - NullReal is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>501</Key>
    <Value>
      <English>Simple Units Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>502</Key>
    <Value>
      <English>Tactical Movement</English>
    </Value>
  </Entry>
  <Entry>
    <Key>503</Key>
    <Value>
      <English>Unit Max Inventory Quantity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>504</Key>
    <Value>
      <English>Returns the maximal quantity of the specified ItemType that can be carried by all SimpleUnits belonging to the specified Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>505</Key>
    <Value>
      <English>Unit Std Inventory Quantity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>506</Key>
    <Value>
      <English>Returns the standard quantity of the specified ItemType carried by all SimpleUnits belonging to the specified Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>507</Key>
    <Value>
      <English>Unit Effective Direct Fire Range</English>
    </Value>
  </Entry>
  <Entry>
    <Key>508</Key>
    <Value>
      <English>Returns the maximal effective range that can be reached with direct fire by a Simple Unit that belongs to the specified Unit, is capable of firing and if ConsiderAmmunitionAvailability is specified as 'true' - also has the relevant ammunition in its inventory.
If the specified Unit does not contain any such Simple Unit - 0 is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>509</Key>
    <Value>
      <English>Consider Ammunition Availability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>510</Key>
    <Value>
      <English>Unit Effective Indirect Fire Range</English>
    </Value>
  </Entry>
  <Entry>
    <Key>511</Key>
    <Value>
      <English>Returns the maximal effective range that can be reached with indirect fire by a Simple Unit that belongs to the specified Unit and is capable of firing.
If the specified Unit does not contain any such Simple Unit - 0 is returned.
Note: for this purpose firing capability depends on vehicle serviceability and soldiers competence only. Ammunition availability is not considered.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>512</Key>
    <Value>
      <English>Unit Can Breach Obstacle</English>
    </Value>
  </Entry>
  <Entry>
    <Key>513</Key>
    <Value>
      <English>Returns 'true' if the specified Unit can breach the obstacle/s (one or more) found along the specified BreachingLine, based on its composition.
For this purpose a Unit is considered capable of breaching the obstacle/s if it contains all necessary Engineering SimpleUnits as would be required for successful completion of an equivalent BreachObstacle Atomic Command.
Each required Engineering SimpleUnit must obviously be properly manned - having the necessary number of competent soldiers, and equipped - having the necessary number of serviceable vehicles (relevant for vehicular SimpleUnits only).
Note that current location of contained Engineering SimpleUnits is of no relevance, i.e. their distance from the BreachingLine and ability to get there are not considered for this purpose.
If no obstacle is found along the specified BreachingLine - 'true' is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>514</Key>
    <Value>
      <English>Breaching Line</English>
    </Value>
  </Entry>
  <Entry>
    <Key>515</Key>
    <Value>
      <English>Commanding Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>516</Key>
    <Value>
      <English>Returns the first commanding unit above (up the OrBat tree) the specified Unit (parameter), that is not lower than the specified Echelon (parameter). If no such unit exists - a Null Unit is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>517</Key>
    <Value>
      <English>Echelon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>518</Key>
    <Value>
      <English>Unit Subordinates</English>
    </Value>
  </Entry>
  <Entry>
    <Key>519</Key>
    <Value>
      <English>Returns all subordinates of the specified Unit whose Echelon (see UnitEchelon Atomic Function) is not lower than the specified MinimalEchelon. If DirectOnly is true - the result contains only direct subordinates, otherwise all (both direct and indirect) subordinates are considered.
Note: if MinimalEchelon is EL_Simple, subordinate Simple Units are included in the result whether mounted (on some carrier Simple Unit) or not.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>520</Key>
    <Value>
      <English>Minimal Echelon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>521</Key>
    <Value>
      <English>Direct Only</English>
    </Value>
  </Entry>
  <Entry>
    <Key>522</Key>
    <Value>
      <English>Units Contained Simple Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>523</Key>
    <Value>
      <English>Returns all Simple Units that either appear in the specifie UnitCollection or belong to (i.e. are direct or indirect subordinates of) at least one unit that appears in the specified UnitCollection.
Note: all Simple Units are returned - whether mounted (on some carrier Simple Unit) or not.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>524</Key>
    <Value>
      <English>Unit Closest Relatives</English>
    </Value>
  </Entry>
  <Entry>
    <Key>525</Key>
    <Value>
      <English>Returns a collection containing units belonging to the specified TopmostAncestor, whose Native Type (sub-type of UNIT, see UnitNativeType Atomic Function) belongs to the specified RelativesNativeType and whose hierarchical distance from from the specified Unit is minimal (hence "closest relatives").
For this purpose hierarchical distance between two units is defined by the echelon of their lowest common ancestor in the OrBat tree. A lower echelon means a shorter hierarchical distance, i.e. a closer [family] relationship.

Definitions:
- RelativesEchelon (sub-type of ECHELON_SIZE) is given by the SIZE external property of the specified RelativesNativeType.

Process Logic:
- Initialize CommonAncestor to the specified Unit.
- Do while CommonAncestor has a parent unit (i.e. it is not the root unit) AND CommonAncestor is not the specified TopmostAncestor
    + Set CommonAncestor to CommonAncestor's parent unit.
    + If CommonAncestor's Native Type belongs to the specified RelativesNativeType
          - Return a collection containing CommonAncestor.
    + else if CommonAncestor ecelon is higher than RelativesEchelon
          - Find all descendants (direct/indirect subordinates) of CommonAncestor whose Native Type belongs to the specified RelativesNativeType.
            Note that for obvious efficiency reasons, this recursion stops at descendants whose ehelon is not higher than RelativesEchelon.
          - If at least one such type matching descendant was found
               + Return a collection containing all found type matching descendants.
- Return an empty collection.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>526</Key>
    <Value>
      <English>Relatives Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>527</Key>
    <Value>
      <English>Topmost Ancestor</English>
    </Value>
  </Entry>
  <Entry>
    <Key>528</Key>
    <Value>
      <English>Unit Effective Supported Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>529</Key>
    <Value>
      <English>Returns the Unit that is currently supported by the specified FireUnit, as defined by its Fire Support Assignment.
If the Fire Support Assignment of the specified FireUnit is empty or expired - a Null Unit is returned.
Notes:
- A Fire Unit is a UT_Artillery Aggregate Unit whose Echelon is not lower than EL_Brigade and contains UT_Artillery Simple Units (typically an Artillery Battery/Battalion/Regiment).
- A Fire Support Assignment is a dynamic property of a Fire Unit that defines its mission/commitment to provide indirect fire support for (i.e. fire as directed by) a specified Aggregate Unit for a specified period (not necessarilly limited), constrained by ammunition allocations that limit the types and quantity of Indirect Fire Ammunition that may be fired. Ammunition allocations are defined separately for planned missions (FSM_PlannedMission) and for occasional targets (FSM_OccasionalTarget).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>530</Key>
    <Value>
      <English>Fire Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>531</Key>
    <Value>
      <English>Unit Supporting Fire Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>532</Key>
    <Value>
      <English>Returns all Fire Units Fi whose Effective Supported Unit (see EffectiveSupportedUnit Atomic Function) Si is either the specified SupportedUnit or contains the specified SupportedUnit (i.e. SupportedUnit is a direct or indirect subordinate of Si).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>533</Key>
    <Value>
      <English>Supported Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>534</Key>
    <Value>
      <English>Unit Unutilized Indirect Fire Ammo</English>
    </Value>
  </Entry>
  <Entry>
    <Key>535</Key>
    <Value>
      <English>Returns the Indirect Fire Ammunition (AT_Indirect sub-types) inventory that remains to be utilized by the specified FireUnit, as defined by the ammunition allocation for the specified MissionType in its Fire Support Assignment (see EffectiveSupportedUnit Atomic Function for a definition of Fire Unit and Fire Support Assignment).
Remaining unutilized quantity Qi for each allocated Indirect Fire Ammunition NativeType Ti is defined as Max(Ai - Ui, 0) where:
- Ai is the allocated quantity for Ti for the specified MissionType.
- Ui is the utilized quantity of Ti for the specified MissionType.
If the Fire Support Assignment of the specified FireUnit is empty or expired - an empty Allocation Collection is returned.
Note: the Duration property of each Allocation in the returned collection is set to zero.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>536</Key>
    <Value>
      <English>Mission Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>537</Key>
    <Value>
      <English>Unit Detection List</English>
    </Value>
  </Entry>
  <Entry>
    <Key>538</Key>
    <Value>
      <English>Returns all Simple Units that are currently detected by the specified Unit (parameter) at a Detection Level that is not worse than the specified MinimumDetectionLevel.
In an Aggregation Unit, the Detection Level attributed to a detected Simple Unit is the best Detection Level found among all the Unit's subordinates that detect it.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>539</Key>
    <Value>
      <English>The detecting Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>540</Key>
    <Value>
      <English>Minimum Detection Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>541</Key>
    <Value>
      <English>Singles whose Detection Level is lower than this are filtered out.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>542</Key>
    <Value>
      <English>Unit Detection State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>543</Key>
    <Value>
      <English>Retrurns the state of detection of the specified DetectedUnit (hereinafter D) by the specified Unit (hereinafter U), as represented in U's detection list (see UnitDetectionList Function), which is:
- DS_LiveDetection - if D is currently detected by U.
- DS_PastDetection - if D is not currently detected by U but was recently detected by U.
- DS_NoDetection - if D is not currently detected by U nor was it recently detected by U.
Note: the lifespan of a past detection is determined by the PAST_DETECTION_LIFESPAN typical property of the Detection System used to detect it.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>544</Key>
    <Value>
      <English>Detected Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>545</Key>
    <Value>
      <English>Unit Detection Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>546</Key>
    <Value>
      <English>Retrurns the detected location of the specified DetectedUnit (hereinafter D), as represented in the detection list (see UnitDetectionList Function) of the specified Unit (hereinafter U).
The result depends on the detection state (see UnitDetectionState Function) of D in U's detection list:
- If it is DS_LiveDetection - the current location of D is returned.
- If it is DS_PastDetection - the location of D when it was last detected by U is returned.
- If it is DS_NoDetection - a Null Point is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>547</Key>
    <Value>
      <English>Units in Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>548</Key>
    <Value>
      <English>Returns a collection of all Units (both Simple Units and Aggregate Units) that are located inside the specified Area.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>549</Key>
    <Value>
      <English>Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>550</Key>
    <Value>
      <English>Unit by C4I Logistic Transponder ID</English>
    </Value>
  </Entry>
  <Entry>
    <Key>551</Key>
    <Value>
      <English>Returns the Simple Unit whose Logistic C4I Transponder ID (see SetLogisticC4ITransponderID Atomic Command) equals the specified TransponderID.
If not such Simple Unit is found - a Null Unit is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>552</Key>
    <Value>
      <English>Transponder ID</English>
    </Value>
  </Entry>
  <Entry>
    <Key>553</Key>
    <Value>
      <English>Units Filtered by Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>554</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) that are located inside the specified Area. 
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>555</Key>
    <Value>
      <English>Units Filtered by Alliance Color</English>
    </Value>
  </Entry>
  <Entry>
    <Key>556</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) that belong to the specified AllianceColor.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>557</Key>
    <Value>
      <English>Alliance Color</English>
    </Value>
  </Entry>
  <Entry>
    <Key>558</Key>
    <Value>
      <English>Units Filtered by Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>559</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) whose Unit Type belongs to the specified UnitType.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>560</Key>
    <Value>
      <English>Units Filtered by Aggregate Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>561</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Aggregate Units) whose Aggregate Type (see UnitAggregateType Atomic Function) belongs to the specified AggregateType.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>562</Key>
    <Value>
      <English>Aggregate Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>563</Key>
    <Value>
      <English>Units Filtered by Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>564</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) whose Native Type (see UnitNativeType Function for details) belongs to the specified UnitNativeType.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>565</Key>
    <Value>
      <English>Units Filtered by Echelon Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>566</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) whose Echelon Level is not lower than the specified LowEchelon and not higher than the specified HighEchelon.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>567</Key>
    <Value>
      <English>Low Echelon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>568</Key>
    <Value>
      <English>High Echelon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>569</Key>
    <Value>
      <English>Units Filtered by Mount State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>570</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose mount state (mounted/ not mounted on some vehicle/carrier Simple Unit) is specified by the Mounted parameter.
Notes:
- Mounting applies to both vehicular Simple Units (see VehiclesMountTransporters Atomic Command) and infantry/non-vehicular Simple Units (see SoldiersMountVehicles Atomic Command).
- The order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>571</Key>
    <Value>
      <English>Mounted</English>
    </Value>
  </Entry>
  <Entry>
    <Key>572</Key>
    <Value>
      <English>Units Filtered by Carrier State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>573</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose state as a carrier (i.e being mounted or not by some passenger Simple Unit) is specified by the Mounted parameter.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>574</Key>
    <Value>
      <English>Units Filtered by Carrier Suitability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>575</Key>
    <Value>
      <English>Returns a collection of all Simple Units of the specified SimpleUnitCollection that are suitable for carring a mounted Simple Unit having vehicles of the specified MountedVehicleNativeType (see UnitVehicleNativeType Atomic Function). Carrier suitability is a typical property, i.e independent of current serviceability nor of carrier state (being mounted or not).
Notes:
- MountedVehicleNativeType may either indicate a vehicular type - potentially carriable thorugh VehiclesMountTransporters Atomic Command, or an infantry/non-vehicular type (RAGLIM) - potentially carriable thorugh SoldiersMountVehicles Atomic Command.
- The order of the Simple Units in the specified SimpleUnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>576</Key>
    <Value>
      <English>Simple Unit Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>577</Key>
    <Value>
      <English>Mounted Vehicle Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>578</Key>
    <Value>
      <English>Units Filtered by Targeting Ability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>579</Key>
    <Value>
      <English>Returns a collection of all Units of the specified PotentialTargets collection that are valid targets for direct fire by at least one of the specified FiringUnits. Both collections are assumed to contain only Simple Units.
A PotentialTarget T is considered to be a valid target for direct fire by FiringUnit F if the following conditions are all met:
- T is not completely destroyed/"dead".
- A Line-of-Sight exists between F's current location and T's current location.
- F is capable of firing - as determined by availability of weapon (AKA Direct Fire System) and present competence/serviceability state of its soldiers/vehicles.
- F has in its inventory some ammunition A that is effective against T and T's distance from F is within A's effective range.
Note: the order of Units in the specified PotentialTargets collection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>580</Key>
    <Value>
      <English>Potential Targets</English>
    </Value>
  </Entry>
  <Entry>
    <Key>581</Key>
    <Value>
      <English>Firing Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>582</Key>
    <Value>
      <English>Units Filtered by Firing Ability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>583</Key>
    <Value>
      <English>Returns a collection of all Units of the specified FiringUnits collection for which at least one of the specified PotentialTargets is a valid target for direct fire. Both collections are assumed to contain only Simple Units.
See UnitsFilteredByTargetingAbility Atomic Function for a description of all required conditions for considering PotentialTarget T as a valid target for direct fire by FiringUnit F.
Note: the order of Units in the specified FiringUnits collection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>584</Key>
    <Value>
      <English>Units Filtered by Aim Point Reach</English>
    </Value>
  </Entry>
  <Entry>
    <Key>585</Key>
    <Value>
      <English>Returns a collection of all Units of the specified SimpleUnits collection whose inventory contains an ammunition of the specified AmmoType that can reach the specified AimPoint from the Unit's current location.

Definitions:
- The LongestRangeAmmo of a SimpleUnit U is given by UnitLongestRangeAmmoNativeType(U, AmmoType, UseEffectiveRange).
- The Range (in meters) of an ammunition type is given by its AMM_EFF_RANGE external property - if the specified UseEffectiveRange is true, otherwise - by its AMM_MAX_RANGE external property.
- The MinimalRange (in meters) of an ammunition type is given by its AMM_MIN_RANGE external property.
- A Simple Unit U can reach the specified AimPoint if the following conditions are both met:
   + The Range of its LongestRangeAmmo is not lower than the distance between U's current location and the specified AimPoint.
   + The MinimalRange of its LongestRangeAmmo is not higher than the distance between U's current location and the specified AimPoint.
Note: the order of Units in the specified SimpleUnits collection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>586</Key>
    <Value>
      <English>Simple Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>587</Key>
    <Value>
      <English>Aim Point</English>
    </Value>
  </Entry>
  <Entry>
    <Key>588</Key>
    <Value>
      <English>Units Filtered by Shortest Range</English>
    </Value>
  </Entry>
  <Entry>
    <Key>589</Key>
    <Value>
      <English>Returns a collection of all Units of the specified SimpleUnits collection for which the range of the longest range ammunition of the specified AmmoType found in inventory is minimal.
The order of Units in the specified SimpleUnits collection is maintained in the result.

Definitions:
- The Range (in meters) of an ammunition type is given by its AMM_EFF_RANGE external property - if the specified UseEffectiveRange is true, otherwise - by its AMM_MAX_RANGE external property.

Process Logic:
- Set MinimalRangeSimpleUnits to empty collection.
- Set MinimalRange to MaxInt (maximal possible integer value).

- Do for each SimpleUnit Ui of the specified SimpleUnits collection
   + Set LongestRangeAmmo to UnitLongestRangeAmmoNativeType(Ui, AmmoType, UseEffectiveRange).
   + If LongestRangeAmmo equals Null Native Type - continue (to check next Ui).
   + Set R to Range of LongestRangeAmmo.
   + If R &gt; MinimalRange - continue (to check next Ui).
   + If MinimalRange &gt; R
         - Set MinimalRangeSimpleUnits to empty collection.
         - Set MinimalRange to R.
   + Append Ui to MinimalRangeSimpleUnits.

- Return MinimalRangeSimpleUnits.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>590</Key>
    <Value>
      <English>Units Filtered by Deployment State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>591</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose deployment state (deployed/ undeployed) is specified by the Deployed parameter.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>592</Key>
    <Value>
      <English>Deployed</English>
    </Value>
  </Entry>
  <Entry>
    <Key>593</Key>
    <Value>
      <English>Units Filtered by Deployment Ability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>594</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose ability to deploy is as specified by the Deployable parameter.
The ability to be deployed is a typical property, i.e. independent of current state. The deployment ability of a Simple Unit U is determined as follows:
- Tu is the Native Unit Type of U (see UnitNativeType Function for details).
- If the typical DEPLOYMENT_DELAY external property of Tu is defined and is greater than zero - U is considered to be "Deployable".
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>595</Key>
    <Value>
      <English>Deployable</English>
    </Value>
  </Entry>
  <Entry>
    <Key>596</Key>
    <Value>
      <English>Units Filtered by Operational State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>597</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose operational state (see UnitIsOperational Atomic Function for details) is specified by the Operational parameter.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>598</Key>
    <Value>
      <English>Operational</English>
    </Value>
  </Entry>
  <Entry>
    <Key>599</Key>
    <Value>
      <English>Units Filtered by Vehicle Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>600</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose vehicle type belongs to the specified VehicleType.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>601</Key>
    <Value>
      <English>Vehicle Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>602</Key>
    <Value>
      <English>Units Filtered by Mounted Soldiers Vacancy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>603</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (assumed to contain only Simple Units) whose Mounted Soldiers Vacancy (see UnitMountedSoldiersVacancy Atomic Function) is not lower than the specified MinimalVacancy parameter.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>604</Key>
    <Value>
      <English>Minimal Vacancy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>605</Key>
    <Value>
      <English>Units Filtered by Boolean External Property</English>
    </Value>
  </Entry>
  <Entry>
    <Key>606</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) that belong to a NativeType (see UnitNativeType Atomic Function) for which the value of the specified [Boolean] ExternalProperty of the specified Structure (a collection of Properties that are grouped together) - as defined in the External Properties Database (AKA Static Database), is the specified Value.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>607</Key>
    <Value>
      <English>External Property</English>
    </Value>
  </Entry>
  <Entry>
    <Key>608</Key>
    <Value>
      <English>Structure</English>
    </Value>
  </Entry>
  <Entry>
    <Key>609</Key>
    <Value>
      <English>Value</English>
    </Value>
  </Entry>
  <Entry>
    <Key>610</Key>
    <Value>
      <English>Units Filtered by Detection Signature</English>
    </Value>
  </Entry>
  <Entry>
    <Key>611</Key>
    <Value>
      <English>Returns a collection of all SimpleUnits of the specified SimpleUnitCollection whose DetectionSignature (see DetectionSignatureNativeType Atomic Function) - when detected by the specified DetectionSystemNativeType (sub-type of DETECTION_SYSTEMS), satisfies the following conditions:
- It belongs to the specified DetectionSignatureNativeType.
- The value of its IS_MSTR (Must Strike Then Report) typical boolean property corresponds to the specified MustStrikeThenReport value (with YN_YesNo value effectively means "don't care" regarding the value of this property).
Note: the order of the SimpleUnits in the specified SimpleUnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>612</Key>
    <Value>
      <English>Detection System Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>613</Key>
    <Value>
      <English>Detection Signature Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>614</Key>
    <Value>
      <English>Must Strike Then Report</English>
    </Value>
  </Entry>
  <Entry>
    <Key>615</Key>
    <Value>
      <English>Units Filtered by Counter Measure State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>616</Key>
    <Value>
      <English>Returns a collection of all SimpleUnits of the specified SimpleUnitCollection for which the state (on/off) of the specified CounterMeasure (see SetCounterMeasureState Atomic Command) corresponds to the specified IsOn parameter.
Notes:
- The state of all counter measures in a SimpleUnit that has no counter measures is obviously 'off'.
- The order of the SimpleUnits in the specified SimpleUnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>617</Key>
    <Value>
      <English>Counter Measure</English>
    </Value>
  </Entry>
  <Entry>
    <Key>618</Key>
    <Value>
      <English>IsOn</English>
    </Value>
  </Entry>
  <Entry>
    <Key>619</Key>
    <Value>
      <English>Units Filtered by Serviceability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>620</Key>
    <Value>
      <English>Returns a collection of all SimpleUnits of the specified SimpleUnitCollection whose serviceability belongs to the specified UnitServiceability.
The serviceability of a vehicular SimpleUnit U is determined according to the serviceability of its vehicles (see UnitVehiclesCount Atomic Function):
- If all of U's vehicles are incapable of neither firing nor moving (VS_CannotMoveAndFire) - US_Destroyed, else
- If U has at least one unserviceable vehicle (a vehicle whose state belongs to VS_Unserviceable) - US_Damaged, else
- US_Serviceable.
The serviceability of a non-vehicular (Infantry) SimpleUnit U is determined according to the competence of its soldiers (see UnitInfantrySoldiersCount Atomic Function):
- If none of U's soldiers is competent (SC_Competent) - US_Destroyed, else
- If all of U's soldeirs are competent (SC_Competent) - US_Serviceable, else
- US_Damaged.
Note: the order of the SimpleUnits in the spcified SimpleUnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>621</Key>
    <Value>
      <English>Unit Serviceability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>622</Key>
    <Value>
      <English>Units Filtered by Role Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>623</Key>
    <Value>
      <English>Returns a collection of all Units of the specified UnitCollection (parameter) whose Role Native Type (see UnitRoleNativeType Function for details) belongs to the specified RoleNativeType.
Note: the order of the Units in the specified UnitCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>624</Key>
    <Value>
      <English>Role Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>625</Key>
    <Value>
      <English>Units Filtered by Mutual Exclusivity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>626</Key>
    <Value>
      <English>Returns a collection of all units of the specified UnitCollection that are mutually exclusive, i.e. that are not subordinates of or equal to any other unit in the collection.
Note: the order of the units in the specified UnitCollection is maintained in the result.

Example: given the following units hierarchy
A
  B
  C
    D
  E
For UnitCollection {D,A,E} - {A} is returned.
For UnitCollection {D,B,E,C} - {B,E,C} is returned.
For UnitCollection {D,E,C,E,B,C} - {E,C,B} is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>627</Key>
    <Value>
      <English>Units Filtered by Soldiers Count</English>
    </Value>
  </Entry>
  <Entry>
    <Key>628</Key>
    <Value>
      <English>Returns a collection containing a subset of the specified SimpleUnitCollection containing the maximal number of Simple Units Ui for which Sum(Ci) is not larger than the specified MaxSoldiersCount, where Ci is the number of competent soldiers (i.e. excluding dead/wounded soldiers) in Ui.
The implementation is based on a single pass, and is therefore not guaranteed to find the optimal solution.

Example: assuming SimpleUnitCollection contains 5 Simple Units {U1..U5} for which the following Ci values apply:
- C1 = 3
- C2 = 1
- C3 = 4
- C4 = 2
- C5 = 2

UnitsFilteredBySoldiersCount({U1..U5}, 8) returns {U1..U3}
UnitsFilteredBySoldiersCount({U1..U5}, 2) returns {U2}
UnitsFilteredBySoldiersCount({U1..U5}, 20) returns {U1..U5}
UnitsFilteredBySoldiersCount({U1..U5}, 7) returns {U1,U2,U4}</English>
    </Value>
  </Entry>
  <Entry>
    <Key>629</Key>
    <Value>
      <English>Max Soldiers Count</English>
    </Value>
  </Entry>
  <Entry>
    <Key>630</Key>
    <Value>
      <English>Units Sorted by Proximity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>631</Key>
    <Value>
      <English>Returns the units of the specified UnitCollection, sorted by their proximity to the specified Point (parameter) - from closest to farthest.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>632</Key>
    <Value>
      <English>Point</English>
    </Value>
  </Entry>
  <Entry>
    <Key>633</Key>
    <Value>
      <English>Units Sorted by Proximity to Polyline</English>
    </Value>
  </Entry>
  <Entry>
    <Key>634</Key>
    <Value>
      <English>Returns the units of the specified UnitCollection, sorted by their proximity to the specified Polyline - from closest to farthest.
Note: the distance between a point P and a polyline L is defined as the distance between P and the closest point to P on L (see SnapToPolyline Atomic Function).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>635</Key>
    <Value>
      <English>Polyline</English>
    </Value>
  </Entry>
  <Entry>
    <Key>636</Key>
    <Value>
      <English>Units Sorted by Infantry Soldiers Count</English>
    </Value>
  </Entry>
  <Entry>
    <Key>637</Key>
    <Value>
      <English>Returns the units of the specified UnitCollection, sorted by their respective "Infantry Soldiers Count" - from highest to lowest.
For this purpose, the Infantry Count" of each unit Ui of the collection is defined by UnitInfantrySoldiersCount(Ui, UnitType, SoldierCompetence), i.e. it equals the total number of infantry soldeirs whose competence matches the specified SoldierCompetence in all Simple Units belonging to Ui that are of the specified UnitType.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>638</Key>
    <Value>
      <English>Units Sorted by Vehicles Count</English>
    </Value>
  </Entry>
  <Entry>
    <Key>639</Key>
    <Value>
      <English>Returns the units of the specified UnitCollection, sorted by their respective "Vehicles Count" - from highest to lowest.
For this purpose, the "Vehicles Count" of each unit Ui of the collection is defined by UnitVehiclesCount(Ui, UnitType, VehicleServiceability), i.e. it equals the total number of vehicles whose serviceability matches the specified VehicleServiceability in all Simple Units belonging to Ui that are of the specified UnitType.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>640</Key>
    <Value>
      <English>Simple Units Sorted by Deployment Priority</English>
    </Value>
  </Entry>
  <Entry>
    <Key>641</Key>
    <Value>
      <English>Returns the units of the specified SimpleUnitCollection (all assumed to be Simple Units), sorted by their respective "Deployment Priority Grade" - from highest to lowest.
The "Deployment Priority Grade" (hereinafter D) of a Simple Unit U is defined as follows: 
- Tu is the Native Unit Type of U (see UnitNativeType Function for details).
- C is the value of AF_CONTENT_TARGET_COMPONENT_TYPE external property of Tu.
- D is the value of DEPLOYMENT_PRIORITY_GRADE external property of C.
Note: If AF_CONTENT_TARGET_COMPONENT_TYPE is not defined for Tu or if DEPLOYMENT_PRIORITY_GRADE is not defined for C - D is considered to be zero.
</English>
    </Value>
  </Entry>
  <Entry>
    <Key>642</Key>
    <Value>
      <English>Simple Units Sorted by Storage Priority</English>
    </Value>
  </Entry>
  <Entry>
    <Key>643</Key>
    <Value>
      <English>Returns the units of the specified SimpleUnitCollection (all assumed to be Simple Units), sorted by their respective "Storage Priority Grade" - from highest to lowest.
The "Storage Priority Grade" (hereinafter S) of a Simple Unit U is defined as follows: 
- Tu is the Native Unit Type of U (see UnitNativeType Function for details).
- C is the value of AF_CONTENT_TARGET_COMPONENT_TYPE external property of Tu.
- S is the value of STORAGE_PRIORITY_GRADE external property of C.
Note: If AF_CONTENT_TARGET_COMPONENT_TYPE is not defined for Tu or if STORAGE_PRIORITY_GRADE is not defined for C - S is considered to be zero.
</English>
    </Value>
  </Entry>
  <Entry>
    <Key>644</Key>
    <Value>
      <English>Simple Units Sorted by Carrier Suitability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>645</Key>
    <Value>
      <English>Returns the units of the specified SimpleUnitCollection (all assumed to be Simple Units), sorted by their respective "Carrier Suitability Grade" - from highest to lowest.
The "Carrier Suitability Grade" (hereinafter S) of a Simple Unit U for carrying MountedVehiclesNumber (hereinafter N) vehicles of type MountedVehicleNativeType (hereinafter MVT) is based on the difference between U's overall capacity for carring vehicles of type MVT and the required N.
S is determined as follows:
- Uvn is the number of vehicles in U.
- UVT is the Vehicle Native Type of U (see UnitVehicleNativeType Atomic Function).
- C is the number of vehicles of type MVT that may be mounted/loaded on a single vehicle of type UVT, i.e C = MountedVehiclesCapacity(UVT, MVT).
- Diff is the difference between U's overall capacity for carring vehicles of type MVT and N, i.e. Diff = C * Uvn - N:
   + Zero Diff indicates perfect match.
   + Positive Diff indicates surplus of carrier vehicles in U.
   + Negative Diff indicates shortage of carrier vehicles in U.
- Given that BIG is a significantly large number (10,000), S it computed as follows: if Diff is zero or positive =&gt; S = BIG - Diff, else (Diff is negative) =&gt; S = Diff.
  This means that: 
   + A pefect match gets highest possible grade (BIG).
   + Surplus Diffs get lower grades: the larger the surplus - the lower the grade.
   + Shortage Diffs get even lower (negative) grades: the larger the shortage - the lower the grade.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>646</Key>
    <Value>
      <English>Mounted Vehicles Number</English>
    </Value>
  </Entry>
  <Entry>
    <Key>647</Key>
    <Value>
      <English>Simple Units Sorted by Indirect Fire Coverage</English>
    </Value>
  </Entry>
  <Entry>
    <Key>648</Key>
    <Value>
      <English>Returns the units of the specified SimpleUnitCollection (all assumed to be Simple Units capable of indirect fire), sorted by their respective "Indirect Fire Coverage" of the specified Route - from highest to lowest.
"Indirect Fire Coverage" of a Route by a Simple Unit Ui is given by PolylineCircleIntersectionPercentage(Route, UnitCurrentLocation(Ui), UnitEffectiveIndirectFireRange(Ui)).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>649</Key>
    <Value>
      <English>Route</English>
    </Value>
  </Entry>
  <Entry>
    <Key>650</Key>
    <Value>
      <English>Units Sorted by Commanding Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>651</Key>
    <Value>
      <English>Returns the units of the specified UnitCollection, grouped and sorted according to their commanding units of the specified CommandingUnitEchelon.
For this purpose the CommandingUnit (CUi) of each unit Ui in the specified UnitCollection is the first unit above it (up the OrBat tree) whose echelon is not lower than the specified CommandingUnitEchelon, i.e. CUi = CommandingUnit(Ui) (see CommandingUnit Atomic Function).
The units in the returned collection are grouped according to their CUi, and the groups are ordered from largest in size to smallest.
The relative order of units belonging to the same group is maintained in the returned collection. Ordering of same size groups is according to the relative order (in the specified UnitCollection) of their first units.

Example: assuming UnitCollection contains 8 units {U1..U8} for which the following CUi values apply:
- CU1 = G
- CU2 = K
- CU3 = G
- CU4 = H
- CU6 = K
- CU7 = K
- CU8 = M
The returned collection is {U2,U6,U7,U1,U3,U4,U8}.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>652</Key>
    <Value>
      <English>Commanding Unit Echelon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>653</Key>
    <Value>
      <English>Object Name</English>
    </Value>
  </Entry>
  <Entry>
    <Key>654</Key>
    <Value>
      <English>Returns the name of the specified Object.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>655</Key>
    <Value>
      <English>Object</English>
    </Value>
  </Entry>
  <Entry>
    <Key>656</Key>
    <Value>
      <English>Object Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>657</Key>
    <Value>
      <English>Returns the type of the specified Object.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>658</Key>
    <Value>
      <English>Object Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>659</Key>
    <Value>
      <English>Returns the Native Type of the specified Object.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>660</Key>
    <Value>
      <English>Point Object Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>661</Key>
    <Value>
      <English>Returns the location of the specified Object, which is assumed to be a Point Terrain Object.
If the specified Object does not exists or is not a Point Terrain Object - a NullPoint is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>662</Key>
    <Value>
      <English>Polyline Object Geometry</English>
    </Value>
  </Entry>
  <Entry>
    <Key>663</Key>
    <Value>
      <English>Returns the geometry of the specified Object, which is assumed to be a Polyline Terrain Object.
If the specified Object does not exists or is not a Polyline Terrain Object - a NullPolyline is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>664</Key>
    <Value>
      <English>Polygon Object Geometry</English>
    </Value>
  </Entry>
  <Entry>
    <Key>665</Key>
    <Value>
      <English>Returns the geometry of the specified Object, which is assumed to be a Polygon Terrain Object.
If the specified Object does not exists or is not a Polygon Terrain Object - an  EmptyPolygon is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>666</Key>
    <Value>
      <English>Ellipse Object Geometry</English>
    </Value>
  </Entry>
  <Entry>
    <Key>667</Key>
    <Value>
      <English>Returns the geometry of the specified Object, which is assumed to be an Ellipse Terrain Object.
If the specified Object does not exists or is not an Ellipse Terrain Object - an EmptyEllipse is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>668</Key>
    <Value>
      <English>Object is Destructed</English>
    </Value>
  </Entry>
  <Entry>
    <Key>669</Key>
    <Value>
      <English>Returns 'true' if the damage level of the specified Terrain Object is such that the object is effectively destructed.
If no such Terrain Object exists - 'false' is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>670</Key>
    <Value>
      <English>Builtup Area Percentage</English>
    </Value>
  </Entry>
  <Entry>
    <Key>671</Key>
    <Value>
      <English>Returns the percentage (a value between 0-100) of built-up area out of the total area of the specified Area Polygon.
A point is considered to be in built-up area if it resides inside a TOT_BuiltupArea object.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>672</Key>
    <Value>
      <English>Thick Vegetation Area Percentage</English>
    </Value>
  </Entry>
  <Entry>
    <Key>673</Key>
    <Value>
      <English>Returns the percentage (a value between 0-100) of thick vegetation area out of the total area of the specified Area Polygon.
A point is considered to be in thick vegetation area if it resides inside a TOT_ThickVegetationArea object.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>674</Key>
    <Value>
      <English>Point Object Collection Locations</English>
    </Value>
  </Entry>
  <Entry>
    <Key>675</Key>
    <Value>
      <English>Return collection of points (polyline) from object collection (infrastructures)</English>
    </Value>
  </Entry>
  <Entry>
    <Key>676</Key>
    <Value>
      <English>Object Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>677</Key>
    <Value>
      <English>Objects in Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>678</Key>
    <Value>
      <English>Returns a collection of all Objects whose Object Type belongs to the specified ObjectType and are located inside the specified Area. If IncludeDestructed is 'true'- destructed objects (see ObjectIsDestructed Atomic Function) are considered by the search and may thus be returned in the result collection, otherwise - destructed objects are ignored.
Note: for this purpose, an Object is considered to be located inside an area if it has at least one point that is located inside the area.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>679</Key>
    <Value>
      <English>Include Destructed</English>
    </Value>
  </Entry>
  <Entry>
    <Key>680</Key>
    <Value>
      <English>Objects in Areas Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>681</Key>
    <Value>
      <English>Returns a collection of all objects whose Object Type belongs to the specified ObjectType and are located inside at least one of the polygonal areas defined by the specified PolygonObjects collection. If IncludeDestructed is 'true'- destructed objects (see ObjectIsDestructed Atomic Function) are considered by the search and may thus be returned in the result collection, otherwise - destructed objects are ignored.
Notes:
- For this purpose, an object is considered to be located inside an area if it has at least one point that is located inside the area.
- The specified PolygonObjects may overlap, however each object only appears once in the returned collection.
- The order of objects in the returned collection is immaterial.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>682</Key>
    <Value>
      <English>Polygon Objects</English>
    </Value>
  </Entry>
  <Entry>
    <Key>683</Key>
    <Value>
      <English>Objects of type TOT_PolygonObject.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>684</Key>
    <Value>
      <English>Objects Owned by Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>685</Key>
    <Value>
      <English>Returns a collection of all Objects whose Native Type (see Object Native Type Atomic Function) belongs to the specified ObjectNativeType and are owned by either one of the specified OwnerUnits. If IncludeDestructed is 'true'- destructed objects (see ObjectIsDestructed Atomic Function) are considered by the search and may thus be returned in the result collection, otherwise - destructed objects are ignored.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>686</Key>
    <Value>
      <English>Owner Units</English>
    </Value>
  </Entry>
  <Entry>
    <Key>687</Key>
    <Value>
      <English>Closest Underground Opening Location</English>
    </Value>
  </Entry>
  <Entry>
    <Key>688</Key>
    <Value>
      <English>Returns the location of the underground opening (see below) that is closest to the specified Point. The search is limited to a subset of the underground network that contains only TOT_TunnelSection and TOT_UndergroundBunker terrain objects that reside (either fully or partially) within the specified SearchArea and may be used by Simple Units of the specified AlianceColor and RequiredAccomodation.
If no such underground opening is found - a Null Point is returned.

Note: underground openings are located:
- At the location of a TOT_UndergroundBunker object.
- At the start point of a TOT_TunnelSection object.
- At the end point of a TOT_TunnelSection object whose OpeningLocations [dynamic] property value is "Start and End".</English>
    </Value>
  </Entry>
  <Entry>
    <Key>689</Key>
    <Value>
      <English>The point from which the distance of underground openings is measured.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>690</Key>
    <Value>
      <English>Search Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>691</Key>
    <Value>
      <English>The area in which underground openings are searched for.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>692</Key>
    <Value>
      <English>Required Accomodation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>693</Key>
    <Value>
      <English>The search is limited to underground objects whose Underground Accomodation is not lower/narrower than the specified Value.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>694</Key>
    <Value>
      <English>The search is limited to underground objects that may be used by Simple Units belonging to the specified Alliance Color.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>695</Key>
    <Value>
      <English>First Non Builtup Section</English>
    </Value>
  </Entry>
  <Entry>
    <Key>696</Key>
    <Value>
      <English>Returns the first section along the specified Polyline that does not pass through builtup area (a TOT_BuiltupArea object) and whose length is not lower than the specified MinimalLength.
If the entire Polyline passes through builtup area - a NullPolyline is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>697</Key>
    <Value>
      <English>Minimal Length</English>
    </Value>
  </Entry>
  <Entry>
    <Key>698</Key>
    <Value>
      <English>Polyline Object Crossing Polyline</English>
    </Value>
  </Entry>
  <Entry>
    <Key>699</Key>
    <Value>
      <English>Returns the first Polyline Terrain Object of the specified ObjectType that crosses the specified Polyline. The search advances from the first point of the Polyline towards its last. 
If no such Polyline Terrain Object exists - a NullObject is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>700</Key>
    <Value>
      <English>Ellipse Objects Along Polyline</English>
    </Value>
  </Entry>
  <Entry>
    <Key>701</Key>
    <Value>
      <English>Returns all Ellipse Terrain OBjects of the specified ObjectType located along the specified Polyline. The order of the Objects in the returned collection is the order they are encountered when advancing along the Polyline.
For this purpose an Ellipse Terrain Object is considered to be located along a Polyline if at least one point of the Polyline is located inside it.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>702</Key>
    <Value>
      <English>Objects Filtered by Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>703</Key>
    <Value>
      <English>Returns a collection of all Objects of the specified ObjectCollection that are located inside the specified Area.
If FullContainment is specified as 'true' - an Object is considered to be located inside an area only if it is fully contained inside it, otherwise an Object is considered to be located inside an area if it has at least one point that is located inside the area.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>704</Key>
    <Value>
      <English>Full Containment</English>
    </Value>
  </Entry>
  <Entry>
    <Key>705</Key>
    <Value>
      <English>Objects Filtered by Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>706</Key>
    <Value>
      <English>Returns a collection of all Objects of the specified ObjectCollection whose Object Type belongs to the specified ObjectType.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>707</Key>
    <Value>
      <English>Objects Filtered by Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>708</Key>
    <Value>
      <English>Returns a collection of all Objects of the specified ObjectCollection whose Native Type belongs to the specified ObjectNativeType.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>709</Key>
    <Value>
      <English>Objects Filtered by Area Visibility</English>
    </Value>
  </Entry>
  <Entry>
    <Key>710</Key>
    <Value>
      <English>Returns a collection containing all Objects of the specified PointObjectCollection (assumed to contain only TOT_PointObjects) from which Visibility (see below) of the specified ObservedArea is not lower than the specified MinimalVisibility.
The Visibility of an area A from a Point Object O is defined as the percentage (0-100) of points inside A that are visible (i.e. have clear line of sight) from O's location.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>711</Key>
    <Value>
      <English>Point Object Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>712</Key>
    <Value>
      <English>Observed Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>713</Key>
    <Value>
      <English>Minimal Visibility</English>
    </Value>
  </Entry>
  <Entry>
    <Key>714</Key>
    <Value>
      <English>Objects Filtered by Army Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>715</Key>
    <Value>
      <English>Returns a collection containing all Objects of the specified ObjectCollection that satisfy the following conditions:
- The Object has an ArmyType property. Note that some Object classes have an ArmyType property (e.g TOT_Airbase, TOT_AerialRoad, TOT_AFSector) and some don't.
- The value of the Object's Army Type property belongs to the specified ArmyNativeType.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>716</Key>
    <Value>
      <English>Army Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>717</Key>
    <Value>
      <English>Objects Filtered by Echelon Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>718</Key>
    <Value>
      <English>Returns a collection containing all Objects of the specified ObjectCollection that satisfy the following conditions:
- The Object has an EchelonLevel property. Note that some Object classes have an EchelonLevel property (e.g TOT_HQ) and some don't.
- The value of the Object's EchelonLevel equals the specified EchelonLevel OR IncludeNulls = 'true' is specified and the value of the Object's EchelonLevel is null/empty.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>719</Key>
    <Value>
      <English>Echelon Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>720</Key>
    <Value>
      <English>Include Nulls</English>
    </Value>
  </Entry>
  <Entry>
    <Key>721</Key>
    <Value>
      <English>Objects Filtered by Damage Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>722</Key>
    <Value>
      <English>Returns a collection containing all Objects of the specified ObjectCollection that satisfy the following conditions:
- The Object has an DamageLevel property. Note that some Object classes have an DamageLevel property (e.g TOT_HQ) and some don't.
- The Object's Damage Level (a value between 0-100) is not lower than the specified MinimalDamageLevel and not higher than the specified MaximalDamageLevel.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>723</Key>
    <Value>
      <English>Minimal Damage Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>724</Key>
    <Value>
      <English>Maximal Damage Level</English>
    </Value>
  </Entry>
  <Entry>
    <Key>725</Key>
    <Value>
      <English>Objects Filtered by Network Access</English>
    </Value>
  </Entry>
  <Entry>
    <Key>726</Key>
    <Value>
      <English>Returns a collection of all Objects of the specified ObjectCollection from which a network belonging to the specified NetworkNativeType (sub-type of NETWORK) may be accessed.
Note: the order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>727</Key>
    <Value>
      <English>Network Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>728</Key>
    <Value>
      <English>Objects Filtered by Association Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>729</Key>
    <Value>
      <English>Returns a collection containing all Objects of the specified ObjectCollection whose Association equals the specified AssociationNativeType.
Notes:
- Association is a dynamic property of an Object. Its value is a Native Type belonging to the ARRAY_ASSOCIATION hierarchy.
- The order of the Objects in the specified ObjectCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>730</Key>
    <Value>
      <English>Association Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>731</Key>
    <Value>
      <English>Objects Sorted by Proximity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>732</Key>
    <Value>
      <English>Returns the objects of the specified ObjectCollection, sorted by their proximity to the specified Point (parameter) - from closest to farthest.
Notes:
- The distance between a Point P and a Polyline L is defined as the distance between P and the closest point to P on L.
- The distance between a Point P and a Polygon G is defined as follows: if P is inside G and ZeroDistanceInsidePolygon is true - it is zero, otherwise - it is the distance between P and the closest point to P on G's perimeter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>733</Key>
    <Value>
      <English>Zero Distance Inside Polygon</English>
    </Value>
  </Entry>
  <Entry>
    <Key>734</Key>
    <Value>
      <English>Objects Sorted by Area Visibility</English>
    </Value>
  </Entry>
  <Entry>
    <Key>735</Key>
    <Value>
      <English>Returns the objects of the specified PointObjectCollection (assumed to contain only TOT_PointObjects), sorted by their visibility to the specified ObservedArea - from highest to lowest.
See ObjectsFilteredByAreaVisibility Atomic Function for a definition of area visibility.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>736</Key>
    <Value>
      <English>Ground Elevation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>737</Key>
    <Value>
      <English>Returns the ground elevation (in meters) at the specified Point.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>738</Key>
    <Value>
      <English>Lowest Point on Polyline</English>
    </Value>
  </Entry>
  <Entry>
    <Key>739</Key>
    <Value>
      <English>Returns the point Pi on the specified Polyline for which GroundElevation(Pi) is lowest (see GroundElevation Atomic Function).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>740</Key>
    <Value>
      <English>Find  Route to Polyline</English>
    </Value>
  </Entry>
  <Entry>
    <Key>741</Key>
    <Value>
      <English>Returns an optimal route on dry land, from an origin point (From parameter) to a destination Polyline (To parameter), subject to tactical criteria.
If a passable route to the specified destination cannot be found under the specified constraints - the result depends on the specified ReturnBestEffort parameter: when 'true' - a route leading to the closest reachable point is returned, otherwise - a Null Polyline is returned.
</English>
    </Value>
  </Entry>
  <Entry>
    <Key>742</Key>
    <Value>
      <English>From</English>
    </Value>
  </Entry>
  <Entry>
    <Key>743</Key>
    <Value>
      <English>Movement start point (origin).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>744</Key>
    <Value>
      <English>To</English>
    </Value>
  </Entry>
  <Entry>
    <Key>745</Key>
    <Value>
      <English>Any point on this Polyline is a valid destination point.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>746</Key>
    <Value>
      <English>The area inside which the route is searched for. Must contain both From and To locations.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>747</Key>
    <Value>
      <English>Passability Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>748</Key>
    <Value>
      <English>The passability of the moving unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>749</Key>
    <Value>
      <English>BUA Crossing Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>750</Key>
    <Value>
      <English>Preference for passing through Built-up Area.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>751</Key>
    <Value>
      <English>Roads Usage Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>752</Key>
    <Value>
      <English>Preference for using roads as part of the route.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>753</Key>
    <Value>
      <English>Enemy Avoidance Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>754</Key>
    <Value>
      <English>Preference for avoiding exposure to enemy along the route.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>755</Key>
    <Value>
      <English>Enemy to Avoid</English>
    </Value>
  </Entry>
  <Entry>
    <Key>756</Key>
    <Value>
      <English>A collection of enemy Simple Unis that should preferably be avoided.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>757</Key>
    <Value>
      <English>Exclusion Zone</English>
    </Value>
  </Entry>
  <Entry>
    <Key>758</Key>
    <Value>
      <English>The returned route must not pass through this area.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>759</Key>
    <Value>
      <English>Return Best Effort</English>
    </Value>
  </Entry>
  <Entry>
    <Key>760</Key>
    <Value>
      <English>If true - when the specified destination cannot be reached, a route leading to the closest reachable point is returned (otherwise a NullPolyline is returned).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>761</Key>
    <Value>
      <English>First Impassable Section Start</English>
    </Value>
  </Entry>
  <Entry>
    <Key>762</Key>
    <Value>
      <English>Returns the start point of the first section along the specified Route that is not passable for movement by a unit of the specified Passability.
If the entire Route is passable - a Null Point is returned.
A section of a route is considered not passable if it crosses an obstacle or soil type that is defined as movement-blocking for the specified Passability, or if it slopes (to the front, rear or either side) to a degree that exceeds the maximum passable slope degree attributed to the specified Passability.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>763</Key>
    <Value>
      <English>Last Impassable Section Start</English>
    </Value>
  </Entry>
  <Entry>
    <Key>764</Key>
    <Value>
      <English>Returns the start point of the last section along the specified Route that is not passable for movement by a unit of the specified Passability.
If the entire Route is passable - a Null Point is returned.
A section of a route is considered not passable if it crosses an obstacle or soil type that is defined as movement-blocking for the specified Passability, or if it slopes (to the front, rear or either side) to a degree that exceeds the maximum passable slope degree attributed to the specified Passability.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>765</Key>
    <Value>
      <English>First Passable Section Start</English>
    </Value>
  </Entry>
  <Entry>
    <Key>766</Key>
    <Value>
      <English>Returns the start point of the first section along the specified Route that is passable for movement by a unit of the specified Passability.
If the entire Route is not passable - a Null Point is returned.
A section of a route is considered not passable if it crosses an obstacle or soil type that is defined as movement-blocking for the specified Passability, or if it slopes (to the front, rear or either side) to a degree that exceeds the maximum passable slope degree attributed to the specified Passability.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>767</Key>
    <Value>
      <English>Improved Route</English>
    </Value>
  </Entry>
  <Entry>
    <Key>768</Key>
    <Value>
      <English>Returns an improved route that is based on the specified Route, with impassable sections replaced with bypass sections - wherever found. Impassable sections that cannot be bypassed remain as they are. The returned route is therefore not guaranteed to be passable.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>769</Key>
    <Value>
      <English>The route to be improved (by adding bypasses).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>770</Key>
    <Value>
      <English>The area inside which bypasses are searched for. Must contain the specified Route.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>771</Key>
    <Value>
      <English>Find Route on Roads</English>
    </Value>
  </Entry>
  <Entry>
    <Key>772</Key>
    <Value>
      <English>Returns an optimal (shortest) route on the roads network, that leads from an origin point (From parameter) to a destination point (To parameter). The search is limited to the specified SearchArea. Both From and To points must reside on a road segment and be located inside the specified SearchArea (otherwise an Exception is thrown).
If a route cannot be found - the result depends on the specified ReturnBestEffort parameter: when 'true' - a route leading to the closest reachable point on the roads network is returned, otherwise - a Null Polyline is returned.
</English>
    </Value>
  </Entry>
  <Entry>
    <Key>773</Key>
    <Value>
      <English>Movement start point (origin). Must reside on a road segment.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>774</Key>
    <Value>
      <English>Movement end point (destination). Must reside on a road segment.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>775</Key>
    <Value>
      <English>Find Underground Route</English>
    </Value>
  </Entry>
  <Entry>
    <Key>776</Key>
    <Value>
      <English>Returns the shortest contiguous underground route that leads from an underground origin point (From parameter) to a point that is close as possible to the specified destination (To parameter). The returned underground route is limited to a subset of the underground network (hereinafter "Effective Network") that contains only TOT_TunnelSection and TOT_UndergroundBunker terrain objects that reside (either fully or partially) within the specified SearchArea and may be used by Simple Units of the specified AlianceColor and RequiredAccomodation.

Depending on the specified ToForcedOverground parameter, To location is considered to be either underground or underground: when 'false' - To location is considered underground if it is located on the "Effective Network" and overground otherwise, when 'true' - To is considered to be overground.
If To is considered to be underground - the returned route ends at the specified To location. If To is considered to be overground - the returned route ends at the underground opening that is closest to it. If an underground route that satisfies these constraints cannot be found - a Null Polyline is returned.

Note: the specified SearchArea must contain both From location and To location and the specified From location must be located underground, i.e. located on the "Effective Network". If any of these constraints is violated - an Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>777</Key>
    <Value>
      <English>The underground origin.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>778</Key>
    <Value>
      <English>The destination.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>779</Key>
    <Value>
      <English>To Forced Overground</English>
    </Value>
  </Entry>
  <Entry>
    <Key>780</Key>
    <Value>
      <English>If true - To is considered to be overground, if false - To is considered underground if located on the "Effective Network" and overground otherwise.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>781</Key>
    <Value>
      <English>The area in which the route is searched for. Must contain both From and To locations.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>782</Key>
    <Value>
      <English>Find Accessible Underground Route</English>
    </Value>
  </Entry>
  <Entry>
    <Key>783</Key>
    <Value>
      <English>Returns an underground route that leads from an underground opening (hereinafter EntryPoint) to a point that is close as possible to the specified destination (To parameter). The EntryPoint is located inside the specified EntrySearchArea and is accessible from the specified [above ground] origin point (From parameter) to a Simple Unit of the specified PassabilityType.
The returned underground route is limited to a subset of the underground network (hereinafter "Effective Network") that contains only TOT_TunnelSection and TOT_UndergroundBunker terrain objects that reside (either fully or partially) within the specifeid SearchArea and may be used by Simple Units of the specified AlianceColor and RequiredAccomodation.

Depending on the specified ToForcedOverground parameter, To location is considered to be either underground or underground: when 'false' - To location is considered underground if it is located on the "Effective Network" and overground otherwise, when 'true' - To is considered to be overground.
If To is considered to be underground - the returned route ends at the specified To location. If To is considered to be overground - the returned route ends at the underground opening that is closest to it. If an underground route that satisfies these constraints cannot be found - a Null Polyline is returned.

If several alternative underground routes are found, the route with the lowest "Overall Cost" is returned. Overall Cost is given by Ls + Lu/F + Le where:
- Ls is the distance between From location and the route start point.
- Lu is the length of the route.
- F is the specified UndergroundPreferenceFactor.
- Le is the distance between the route end point and To location.

Note: the specified SearchArea must contain From location,To location and EntrySearchArea. If any of these constraints is violated - an Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>784</Key>
    <Value>
      <English>Movement end point (destination).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>785</Key>
    <Value>
      <English>The search is limited to underground objects whose Underground Accomodation is not lower than the specified Value.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>786</Key>
    <Value>
      <English>Entry Search Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>787</Key>
    <Value>
      <English>The returned route must start in an underground opening that is located inside this area.
This area must contain the specified From location and be fully contained inside the specified SearchArea.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>788</Key>
    <Value>
      <English>The returned route start point (E) must be accessible for a Simple Unit of the specified Passability, i.e. a route [above ground] must exist from the specified From location to E that is passable to a Simple Unit of that passability.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>789</Key>
    <Value>
      <English>Underground Preference Factor</English>
    </Value>
  </Entry>
  <Entry>
    <Key>790</Key>
    <Value>
      <English>The maximal number of meters that are worthwhile to move underground, in order to avoid overground movement of one meter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>791</Key>
    <Value>
      <English>Find  Position</English>
    </Value>
  </Entry>
  <Entry>
    <Key>792</Key>
    <Value>
      <English>Finds an optimal position according to the specified tactical criteria (parameters) and returns the Arrival Route to the found position (the position itself is the last point of the Arrival Route). If a position and/or a route leading to it cannot be found - Null Polyline is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>793</Key>
    <Value>
      <English>The area in which the position is searched for.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>794</Key>
    <Value>
      <English>Potential positions that are within this area are excluded from the search.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>795</Key>
    <Value>
      <English>Objective</English>
    </Value>
  </Entry>
  <Entry>
    <Key>796</Key>
    <Value>
      <English>The position is selected relative to the Objective.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>797</Key>
    <Value>
      <English>Minimal Range</English>
    </Value>
  </Entry>
  <Entry>
    <Key>798</Key>
    <Value>
      <English>The minimum allowed range (in meters) of the position from the center of the Objective parameter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>799</Key>
    <Value>
      <English>Maximal Range</English>
    </Value>
  </Entry>
  <Entry>
    <Key>800</Key>
    <Value>
      <English>The maximum allowed range (in meters) of the position from the center of the Objective parameter.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>801</Key>
    <Value>
      <English>Dominate</English>
    </Value>
  </Entry>
  <Entry>
    <Key>802</Key>
    <Value>
      <English>If true - the function attempts to find a dominating position, i.e. a position that has superior height and line-of-sight towards the specified Objective. If false - the function attempts to find a hidden position, i.e. a position which is not exposed to the Objective.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>803</Key>
    <Value>
      <English>The location from which the Arrival Route to the found position begins.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>804</Key>
    <Value>
      <English>Route Search Area</English>
    </Value>
  </Entry>
  <Entry>
    <Key>805</Key>
    <Value>
      <English>The area in which the Arrival Route to the found position is searched for.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>806</Key>
    <Value>
      <English>The passability of the unit that is to occupy the position. Considered for finding an Arrival Route to the selected position.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>807</Key>
    <Value>
      <English>Preference for passing through Built-up Area in the Arrival Route.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>808</Key>
    <Value>
      <English>Preference for using roads as part of the Arrival Route.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>809</Key>
    <Value>
      <English>Preference for avoiding exposure to enemy along the Arrival Route.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>810</Key>
    <Value>
      <English>Route Exclusion Zone</English>
    </Value>
  </Entry>
  <Entry>
    <Key>811</Key>
    <Value>
      <English>The returned Arrival Route must not pass through this area.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>812</Key>
    <Value>
      <English>Find Storage Sites</English>
    </Value>
  </Entry>
  <Entry>
    <Key>813</Key>
    <Value>
      <English>Returns a collection of Point Terrain Objects found in a specified SsearchArea, that are optimally selected for storing corresponding Simple Units of the specified SimpleUnitColection.

The order of the Objects in the returned collection corresponds to the order of the Units in the specified SimpleUnitCollection, i.e. each Object is selected to store a corresponding (same index) Simple Unit from SimpleUnitColection. If no suitable Object is found for storing a Simple Unit - a NullObject is returned for it in the result.
For example: for a SimpleUnitCollection containing units A,B,C,D the returned value [Object11, NullObject, Object42, Object11] indicates that Object11 was selected for storing units A and D, Object42 was selected for storing unit C and no Object was selected for storing unit B.

Definitions:
- The PotenialStorageSites is a collection containing all Objects O that satisfy the following conditions:
   + O is a Cultural Point Terrain Object (TASHTIT_POINT).
   + O is located inside the specified SearchArea.
   + O is not destroyed, i.e its current Damage Level is lower than "destroyed_damage_level" external parameter value.
- Tu is the Native Unit Type of Unit U (see UnitNativeType Function for details).
- The typical StorableUnitTypes of each Object O of the PotenialStorageSites is a list of Native Unit Types specified by the typical STORABLE_UNIT_TYPES external property of O.
- The SuitableStorageSites for Unit U is a collection containing all Objects O of the PotenialStorageSites collection that satisfy the following condition:
   + Tu belongs to a Native Unit Type (NUT) that appears in the typical StorableUnitTypes of O.
      The index of NUT in the StorableUnitTypes list of O is considered to be O's Priority for storing U. The lower that index is - the higher the Priority.
- The MostSuitableStorageSites for Unit U is a collection containing those SuitableStorageSites whose Priority for storing U is the highest.
- The PreferredStorageSite for Unit U is the Object closest to U from the MostSuitableStorageSites for U.

Process Logic:
- Set ResultCollection to an empty Object Collection.
- Find the PotentialStorageSites.
- Do for each Unit Ui of the specified SimpleUnitCollection
   + If the SuitableStorageSites collection for Ui is not empty then
          - Append the PreferredStorageSite for Ui to the ResultString.
      else 
          - Append a Null Object to ResultContainers collection.
- Return ResultContainers collection.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>814</Key>
    <Value>
      <English>Find Container Objects</English>
    </Value>
  </Entry>
  <Entry>
    <Key>815</Key>
    <Value>
      <English>Returns a collection of Point Terrain Objects found in a specified SearchArea, that are optimally selected for containing corresponding Simple Units of the specified SimpleUnitColection. 

The order of Objects in the returned collection corresponds to the order of Units in the specified SimpleUnitCollection, i.e. each Object is selected to contain a corresponding (same index) Simple Unit from SimpleUnitColection. If no suitable Object is found for containing a Simple Unit - a NullObject is returned for it in the result.
For example: for a SimpleUnitCollection containing units A,B,C,D the returned value [Object11, NullObject, Object42, Object11] indicates that Object11 was selected for containing units A and D, Object42 was selected for containing unit C and no Object was selected for containing unit B.

Definitions:
- The PotentialContainers is a collection containing all Objects O that satisfy the following conditions:
   + O is a Cultural Point Terrain Object (TASHTIT_POINT).
   + O is located inside the specified SearchArea.
   + O is not destroyed, i.e its current Damage Level is lower than "destroyed_damage_level" external parameter value.
- The following attributes apply to each Unit U of the specified SimpleUnitColection:
   + Tu is the Native Unit Type of Unit U (see UnitNativeType Function for details).
   + Vu is the current number of serviceable vehicles in U (vehicles whose serviceability belongs to VS_Serviceable).
- The following attributes apply to each Object O of the PotentialContainers collection:
   + Oocc is the current occupancy of O, i.e. the overall number of serviceable vehicles in all Simple Units currently deployed inside O.
   + Ocap is the typical capacity of O, as specified by the typical VEHICLES_CAPACITY external property of O.
   + Ovac is the current vacancy in O that equals Ocap minus Oocc minus Vu of every Unit U for which O was already selected as a container.
      Note that Ovac dynamically changes during the selection process.
   + The typical ContainableUnitTypes of O is a list of Native Unit Types specified by the typical CONTAINABLE_UNIT_TYPES external property of O.
- The SuitableContainers for Unit U is a collection containing all Objects O of the PotentialContainers collection that satisfy the following conditions:
   + Tu belongs to a Native Unit Type (NUT) that appears in the typical ContainableUnitTypes of O.
      The index of NUT in the ContainableUnitTypes list of O is considered to be O's Priority for containing U. The lower that index is - the higher the Priority.
   + Vu is not higher than Ovac.
- The MostSuitableContainers for Unit U is a collection containing those SuitableContainers whose Priority for containing U is the highest.
- The PreferredContainer for Unit U is the Object closest to U from the MostSuitableContainers for U.

Process Logic:
- Set ResultContainers to an empty Object Collection.
- Find the PotentialContainers.
- Set the initial Ovac value for each Object O in the PotentialContainers collection to its Ocap minus Oocc (using a Map/Dictionary for maintaining Ovac values is recomended).
- Do for each Unit Ui of the specified SimpleUnitCollection
   + If the SuitableContainers collection for Ui is not empty then
         - Set Oi to the PreferredContainer for Ui.
         - Update Ovac of Oi - subtracting Vu from it.
         - Append Oi to ResultContainers collection.
   + else
         - Append a Null Object to ResultContainers collection.
- Return ResultContainers collection.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>816</Key>
    <Value>
      <English>Current Time</English>
    </Value>
  </Entry>
  <Entry>
    <Key>817</Key>
    <Value>
      <English>Returns the current time in the simulation.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>818</Key>
    <Value>
      <English>Unit Simulation Cycle Length</English>
    </Value>
  </Entry>
  <Entry>
    <Key>819</Key>
    <Value>
      <English>Returns the length of the current/last simulation cycle (tick) executed by the specified Unit.
Note: if activated before execution of the Unit's first simulation cycle - zero is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>820</Key>
    <Value>
      <English>Sunrise</English>
    </Value>
  </Entry>
  <Entry>
    <Key>821</Key>
    <Value>
      <English>Returns the time at which the sun rises (i.e. daytime starts and night time ends) on the specified Date.
Note that only the DD MM YYYY portion of the specified Date is considered (hh:mm:ss portion is ignored).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>822</Key>
    <Value>
      <English>Date</English>
    </Value>
  </Entry>
  <Entry>
    <Key>823</Key>
    <Value>
      <English>Sunset</English>
    </Value>
  </Entry>
  <Entry>
    <Key>824</Key>
    <Value>
      <English>Returns the time at which the sun sets (i.e. daytime ends and night time starts) on the specified Date.
Note that only the DD MM YYYY portion of the specified Date is considered (hh:mm:ss portion is ignored).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>825</Key>
    <Value>
      <English>Downcast to Direction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>826</Key>
    <Value>
      <English>Converts the Direction parameter that is received as a non-specific (Root) Enumeration, to a DR_Direction (leaf) value.
If the received parameter is not a DR_Direction leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>827</Key>
    <Value>
      <English>Direction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>828</Key>
    <Value>
      <English>Downcast to MovementFormation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>829</Key>
    <Value>
      <English>Converts the MovementFormation parameter that is received as a non-specific (Root) Enumeration, to a MF_MovementFormation (leaf) value.
If the received parameter is not a MF_MovementFormation leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>830</Key>
    <Value>
      <English>Movement Formation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>831</Key>
    <Value>
      <English>Downcast to Encounter Reaction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>832</Key>
    <Value>
      <English>Converts the EncounterReaction parameter that is received as a non-specific (Root) Enumeration, to an ER_EncounterReaction (leaf) value.
If the received parameter is not an ER_EncounterReaction leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>833</Key>
    <Value>
      <English>Encounter Reaction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>834</Key>
    <Value>
      <English>Downcast to Roads Usage Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>835</Key>
    <Value>
      <English>Converts the RoadsUsagePolicy parameter that is received as a non-specific (Root) Enumeration, to a ROADS_UsagePolicy (leaf) value.
If the received parameter is not a ROADS_UsagePolicy leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>836</Key>
    <Value>
      <English>Downcast to BUA Crossing Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>837</Key>
    <Value>
      <English>Converts the BUACrossingPolicy parameter that is received as a non-specific (Root) Enumeration, to a BUA_CrossingPolicy (leaf) value.
If the received parameter is not a BUA_CrossingPolicy leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>838</Key>
    <Value>
      <English>Downcast to Enemy Avoidance Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>839</Key>
    <Value>
      <English>Converts the EnemyAvoidancePolicy parameter that is received as a non-specific (Root) Enumeration, to a EAP_EnemyAvoidancePolicy (leaf) value.
If the received parameter is not a EAP_EnemyAvoidancePolicy leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>840</Key>
    <Value>
      <English>Downcast to Alliance Color</English>
    </Value>
  </Entry>
  <Entry>
    <Key>841</Key>
    <Value>
      <English>Converts the AllianceColor parameter that is received as a non-specific (Root) Enumeration, to an AC_AllianceColor (leaf) value.
If the received parameter is not an AC_AllianceColor leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>842</Key>
    <Value>
      <English>Downcast to Position in Formation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>843</Key>
    <Value>
      <English>Converts the PositionInFormation parameter that is received as a non-specific (Root) Enumeration, to a PIF_PositionInFormation (leaf) value.
If the received parameter is not a PIF_PositionInFormation leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>844</Key>
    <Value>
      <English>Position in Formation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>845</Key>
    <Value>
      <English>Downcast to EchelonLevel</English>
    </Value>
  </Entry>
  <Entry>
    <Key>846</Key>
    <Value>
      <English>Converts the EchelonLevel parameter that is received as a non-specific (Root) Enumeration, to an EL_EchelonLevel (leaf) value.
If the received parameter is not an EL_EchelonLevel leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>847</Key>
    <Value>
      <English>Downcast to Indirect Fire Target Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>848</Key>
    <Value>
      <English>Converts the IndirectFireTargetType parameter that is received as a non-specific (Root) Enumeration, to a IFTT_IndirectFireTargetType (leaf) value.
If the received parameter is not a IFTT_IndirectFireTargetType leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>849</Key>
    <Value>
      <English>IndirectFireTargetType</English>
    </Value>
  </Entry>
  <Entry>
    <Key>850</Key>
    <Value>
      <English>Downcast to Land Passability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>851</Key>
    <Value>
      <English>Converts the LandPassability parameter that is received as a non-specific (Root) Enumeration, to a PT_LandPassability (leaf) value.
If the received parameter is not a PT_LandPassability leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>852</Key>
    <Value>
      <English>Land Passability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>853</Key>
    <Value>
      <English>Downcast to Indirect Ammunition Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>854</Key>
    <Value>
      <English>Converts the IndirectAmmunitionType parameter that is received as a non-specific (Root) Enumeration, to an AT_Indirect value.
If the received parameter is not a AT_Indirect value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>855</Key>
    <Value>
      <English>Indirect Ammunition Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>856</Key>
    <Value>
      <English>Downcast to Movement Mode</English>
    </Value>
  </Entry>
  <Entry>
    <Key>857</Key>
    <Value>
      <English>Converts the MovementMode parameter that is received as a non-specific (Root) Enumeration, to a MM_MovementMode (leaf) value.
If the received parameter is not a MM_MovementMode leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>858</Key>
    <Value>
      <English>Movement Mode</English>
    </Value>
  </Entry>
  <Entry>
    <Key>859</Key>
    <Value>
      <English>Downcast to Mounted Vehicles Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>860</Key>
    <Value>
      <English>Converts the MountedVehiclesType parameter that is received as a non-specific (Root) Enumeration, to a MVT_MountedVehiclesType (leaf) value.
If the received parameter is not a MVT_MountedVehiclesType leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>861</Key>
    <Value>
      <English>Mounted Vehicles Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>862</Key>
    <Value>
      <English>Downcast to Route Relation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>863</Key>
    <Value>
      <English>Converts the RouteRelation parameter that is received as a non-specific (Root) Enumeration, to a RR_RouteRelation (leaf) value.
If the received parameter is not a RR_RouteRelation leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>864</Key>
    <Value>
      <English>Route Relation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>865</Key>
    <Value>
      <English>Downcast to Main Activity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>866</Key>
    <Value>
      <English>Converts the MainActivity parameter that is received as a non-specific (Root) Enumeration, to a MA_MainActivity value.
If the received parameter is not a MA_MainActivity value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>867</Key>
    <Value>
      <English>Main Activity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>868</Key>
    <Value>
      <English>Downcast to Assume Position Mode</English>
    </Value>
  </Entry>
  <Entry>
    <Key>869</Key>
    <Value>
      <English>Converts the AssumePositionMode parameter that is received as a non-specific (Root) Enumeration, to a APM_AssumePositionMode (leaf) value.
If the received parameter is not a APM_AssumePositionMode leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>870</Key>
    <Value>
      <English>Downcast to On Arrival</English>
    </Value>
  </Entry>
  <Entry>
    <Key>871</Key>
    <Value>
      <English>Converts the OnArrival parameter that is received as a non-specific (Root) Enumeration, to a OA_OnArrival (leaf) value.
If the received parameter is not a OA_OnArrival leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>872</Key>
    <Value>
      <English>Downcast to Land Unit Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>873</Key>
    <Value>
      <English>Converts the LandUnitType parameter that is received as a non-specific (Root) Enumeration, to a UT_Land value.
If the received parameter is not a UT_Land value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>874</Key>
    <Value>
      <English>Land Unit Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>875</Key>
    <Value>
      <English>Downcast to Fire Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>876</Key>
    <Value>
      <English>Converts the FirePolicy parameter that is received as a non-specific (Root) Enumeration, to a FP_FirePolicy value.
If the received parameter is not a FP_FirePolicy value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>877</Key>
    <Value>
      <English>Fire Policy</English>
    </Value>
  </Entry>
  <Entry>
    <Key>878</Key>
    <Value>
      <English>Downcast to Unit Serviceability</English>
    </Value>
  </Entry>
  <Entry>
    <Key>879</Key>
    <Value>
      <English>Converts the UnitServiceability parameter that is received as a non-specific (Root) Enumeration, to a US_UnitServiceability value.
If the received parameter is not a US_UnitServiceability value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>880</Key>
    <Value>
      <English>Downcast to Detection State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>881</Key>
    <Value>
      <English>Converts the DetectionState parameter that is received as a non-specific (Root) Enumeration, to a DS_DetectionState value.
If the received parameter is not a DS_DetectionState leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>882</Key>
    <Value>
      <English>Detection State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>883</Key>
    <Value>
      <English>Downcast to Underground Accomodation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>884</Key>
    <Value>
      <English>Converts the UndergroundAccomodation parameter that is received as a non-specific (Root) Enumeration, to a UGA_UndergroundAccomodation value.
If the received parameter is not a UGA_UndergroundAccomodation leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>885</Key>
    <Value>
      <English>Underground Accomodation</English>
    </Value>
  </Entry>
  <Entry>
    <Key>886</Key>
    <Value>
      <English>Downcast to Movement Corridor Width</English>
    </Value>
  </Entry>
  <Entry>
    <Key>887</Key>
    <Value>
      <English>Converts the MovementCorridorWidth parameter that is received as a non-specific (Root) Enumeration, to a MCW_MovementCorridorWidth value.
If the received parameter is not a MCW_MovementCorridorWidth leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>888</Key>
    <Value>
      <English>Movement Corridor Width</English>
    </Value>
  </Entry>
  <Entry>
    <Key>889</Key>
    <Value>
      <English>Downcast to Point Cultural Object</English>
    </Value>
  </Entry>
  <Entry>
    <Key>890</Key>
    <Value>
      <English>Converts the PointCulturalObject parameter that is received as a non-specific (Root) Enumeration, to a TOT_PointCulturalObject value.
If the received parameter is not a TOT_PointCulturalObject value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>891</Key>
    <Value>
      <English>Point Cultural Object</English>
    </Value>
  </Entry>
  <Entry>
    <Key>892</Key>
    <Value>
      <English>Downcast to Area of Responsibility</English>
    </Value>
  </Entry>
  <Entry>
    <Key>893</Key>
    <Value>
      <English>Converts the AreaOfResponsibility parameter that is received as a non-specific (Root) Enumeration, to a TOT_AreaOfResponsibility value.
If the received parameter is not a TOT_AreaOfResponsibility value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>894</Key>
    <Value>
      <English>Area of Responsibility</English>
    </Value>
  </Entry>
  <Entry>
    <Key>895</Key>
    <Value>
      <English>Downcast to Unit Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>896</Key>
    <Value>
      <English>Converts the UnitType parameter that is received as a non-specific (Root) Enumeration, to a UT_Land value.
If the received parameter is not a UT_Land value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>897</Key>
    <Value>
      <English>Downcast to HQ</English>
    </Value>
  </Entry>
  <Entry>
    <Key>898</Key>
    <Value>
      <English>Converts the HQ parameter that is received as a non-specific (Root) Enumeration, to a TOT_HQ value.
If the received parameter is not a TOT_HQ value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>899</Key>
    <Value>
      <English>HQ</English>
    </Value>
  </Entry>
  <Entry>
    <Key>900</Key>
    <Value>
      <English>Downcast to State of Readiness</English>
    </Value>
  </Entry>
  <Entry>
    <Key>901</Key>
    <Value>
      <English>Converts the StateOfReadiness parameter that is received as a non-specific (Root) Enumeration, to a SOR_StateOfReadiness value.
If the received parameter is not a SOR_StateOfReadiness value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>902</Key>
    <Value>
      <English>State of Readiness</English>
    </Value>
  </Entry>
  <Entry>
    <Key>903</Key>
    <Value>
      <English>Downcast to Obstacle Reaction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>904</Key>
    <Value>
      <English>Converts the ObstacleReaction parameter that is received as a non-specific (Root) Enumeration, to an OR_ObstacleReaction (leaf) value.
If the received parameter is not an OR_ObstacleReaction leaf value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>905</Key>
    <Value>
      <English>Obstacle Reaction</English>
    </Value>
  </Entry>
  <Entry>
    <Key>906</Key>
    <Value>
      <English>Downcast to Fire Support Mission</English>
    </Value>
  </Entry>
  <Entry>
    <Key>907</Key>
    <Value>
      <English>Converts the FireSupportMission parameter that is received as a non-specific (Root) Enumeration, to a FSM_FireSupportMission value.
If the received parameter is not a FSM_FireSupportMission value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>908</Key>
    <Value>
      <English>Fire Support Mission</English>
    </Value>
  </Entry>
  <Entry>
    <Key>909</Key>
    <Value>
      <English>Downcast to Ammunition Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>910</Key>
    <Value>
      <English>Converts the AmmunitionType parameter that is received as a non-specific (Root) Enumeration, to a AT_AmmunitionType value.
If the received parameter is not a AT_AmmunitionType value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>911</Key>
    <Value>
      <English>Ammunition Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>912</Key>
    <Value>
      <English>Downcast to Waiting Place</English>
    </Value>
  </Entry>
  <Entry>
    <Key>913</Key>
    <Value>
      <English>Converts the WaitingPlace parameter that is received as a non-specific (Root) Enumeration, to a TOT_WaitingPlace value.
If the received parameter is not a TOT_WaitingPlace value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>914</Key>
    <Value>
      <English>Waiting Place</English>
    </Value>
  </Entry>
  <Entry>
    <Key>915</Key>
    <Value>
      <English>Downcast to Launcher State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>916</Key>
    <Value>
      <English>Converts the LauncherState parameter that is received as a non-specific (Root) Enumeration, to a LS_LauncherState value.
If the received parameter is not a LS_LauncherState value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>917</Key>
    <Value>
      <English>Launcher State</English>
    </Value>
  </Entry>
  <Entry>
    <Key>918</Key>
    <Value>
      <English>Downcast to Vehicle Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>919</Key>
    <Value>
      <English>Converts the VehicleType parameter that is received as a non-specific (Root) Enumeration, to a VT_VehicleType value.
If the received parameter is not a VT_VehicleType value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>920</Key>
    <Value>
      <English>Downcast to Rule For</English>
    </Value>
  </Entry>
  <Entry>
    <Key>921</Key>
    <Value>
      <English>Converts the RuleFor parameter that is received as a non-specific (Root) Enumeration, to an EP_RuleFor value.
If the received parameter is not an EP_RuleFor value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>922</Key>
    <Value>
      <English>Rule For</English>
    </Value>
  </Entry>
  <Entry>
    <Key>923</Key>
    <Value>
      <English>Downcast to Native Type Property</English>
    </Value>
  </Entry>
  <Entry>
    <Key>924</Key>
    <Value>
      <English>Converts the NativeTypeProperty parameter that is received as a non-specific (Root) Enumeration, to a EP_NativeTypeProperty value.
If the received parameter is not a EP_NativeTypeProperty value - an InvalidDowncast Exception is thrown.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>925</Key>
    <Value>
      <English>Native Type Property</English>
    </Value>
  </Entry>
  <Entry>
    <Key>926</Key>
    <Value>
      <English>Native Type Display Name</English>
    </Value>
  </Entry>
  <Entry>
    <Key>927</Key>
    <Value>
      <English>Returns the display name of the specified NativeType.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>928</Key>
    <Value>
      <English>Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>929</Key>
    <Value>
      <English>Native Type is Kind of</English>
    </Value>
  </Entry>
  <Entry>
    <Key>930</Key>
    <Value>
      <English>Returns "true" if NativeType1 (parameter) is a sub-type of (i.e. belongs to the hierachy of NativeTypes defined by) NativeType2 (parameter).
Note that IsKindOf(N,N) is "true" for any NativeType N by definition.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>931</Key>
    <Value>
      <English>NativeType1</English>
    </Value>
  </Entry>
  <Entry>
    <Key>932</Key>
    <Value>
      <English>NativeType2</English>
    </Value>
  </Entry>
  <Entry>
    <Key>933</Key>
    <Value>
      <English>Native Type is Leaf</English>
    </Value>
  </Entry>
  <Entry>
    <Key>934</Key>
    <Value>
      <English>Returns "true" if NativeType is a leaf (has no sub-types).</English>
    </Value>
  </Entry>
  <Entry>
    <Key>935</Key>
    <Value>
      <English>NativeType</English>
    </Value>
  </Entry>
  <Entry>
    <Key>936</Key>
    <Value>
      <English>Allocation Collection Filtered by Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>937</Key>
    <Value>
      <English>Returns a collection containing all Allocations of the specified AllocationCollection whose NativeType (see AllocationNativeType Atomic function) is a sub-type of the specified NativeType (see NativeTypeIsKindOf Atomic Function).
Note: the order of the Allocations in the specified AllocationCollection is maintained in the result.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>938</Key>
    <Value>
      <English>Allocation Collection</English>
    </Value>
  </Entry>
  <Entry>
    <Key>939</Key>
    <Value>
      <English>Integer External Property Value Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>940</Key>
    <Value>
      <English>Returns the value of the specified ExternalProperty of the specified Structure (a collection of Properties that are grouped together), for the specified NativeType - as defined in the External Properties Database (AKA Static Database). EPS_NoStructure Structure value indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullInteger is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>941</Key>
    <Value>
      <English>Boolean External Property Value Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>942</Key>
    <Value>
      <English>Returns YN_Yes or YN_No, according to the value of the specified [Boolean] ExternalProperty of the specified Structure (a collection of Properties that are grouped together), for the specified NativeType - as defined in the External Properties Database (AKA Static Database). EPS_NoStructure Structure value indicates a property that doesn't belong to a Structure.
If no such property value is defined - a Null Enumeration is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>943</Key>
    <Value>
      <English>Real External Property Value Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>944</Key>
    <Value>
      <English>Returns the value of the specified ExternalProperty of the specified Structure (a collection of Properties that are grouped together), for the specified Type - as defined in the External Properties Database (AKA Static Database). EPS_NoStructure Structure value indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullReal is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>945</Key>
    <Value>
      <English>Enumeration External Property Value Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>946</Key>
    <Value>
      <English>Returns the value of the specified ExternalProperty for the specified NativeType - as defined in the External Properties Database (AKA Static Database).
The specified ExternalProperty may belong to a Structure (a collection of Properties that are grouped together) - if specified. An EPS_NoStructure indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullEnumeration is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>947</Key>
    <Value>
      <English>String External Property Value Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>948</Key>
    <Value>
      <English>Returns the value of the specified ExternalProperty for the specified NativeType - as defined in the External Properties Database (AKA Static Database).
The specified ExternalProperty may belong to a Structure (a collection of Properties that are grouped together) - if specified. An EPS_NoStructure indicates a property that doesn't belong to a Structure.
If no such property value is defined - a Null (empty) String is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>949</Key>
    <Value>
      <English>Native Type External Property Value Native</English>
    </Value>
  </Entry>
  <Entry>
    <Key>950</Key>
    <Value>
      <English>Returns the value of the specified ExternalProperty for the specified NativeType - as defined in the External Properties Database (AKA Static Database).
The specified ExternalProperty may belong to a Structure (a collection of Properties that are grouped together) - if specified. An EPS_NoStructure indicates a property that doesn't belong to a Structure.
If no such property value is defined - a NullNativeType is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>951</Key>
    <Value>
      <English>Unit Type by Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>952</Key>
    <Value>
      <English>Returns the Unit Type the specified SimpleUnitNativeType is associated with.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>953</Key>
    <Value>
      <English>Simple Unit Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>954</Key>
    <Value>
      <English>Indirect Fire Cocktail Composition</English>
    </Value>
  </Entry>
  <Entry>
    <Key>955</Key>
    <Value>
      <English>Returns the composition (COMPOSITION property) of the specified CocktailNativeType (sub-type of INDIRECT_FIRE_COCKTAIL) - as defined in the External Properties Database (AKA Static Database).
If the specified CocktailNativeType doesn't exist or has no composition defined for it - a Null AllocationCollection is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>956</Key>
    <Value>
      <English>Cocktail Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>957</Key>
    <Value>
      <English>Most Attainable Cocktail Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>958</Key>
    <Value>
      <English>Returns the Native Type of the most attainable (under the specified AmmoConstraint - see details below) IndirectFireCocktail (sub-type of INDIRECT_FIRE_COCKTAIL) out of all IndirectFireCocktails that are applicable to the specified IndirectFireSystem and can achieve the specified RequiredEffect on the specified TargetType.
If no such IndirectFireCocktail is defined - a Null Native Type is returned.

The returned value is determined based on the External Properties Database (AKA Static Database) as follows:
- An Indirect Fire Cocktail C is applicable to an IndirectFireSystem S (sub-type of INDIR_FIRE_SYS) if S belongs to the type defined by the APPLICABILITY Property of C.
- An Indirect Fire Cocktail C can achieve an Indirect Fire Effect E (sub-type of INDIRECT_FIRE_EFFECT) on a TargetType T (sub-type of  INDIRECT_FIRE_TARGET_TYPE) if its EFFECTS_ON_TARGETS Property (collection) contains an element EOTi that satisfies the following conditions:
   + T belongs to the TARGET_TYPE defined by EOTi.
   + E is the EFFECT defined by EOTi.
- The ApplicableCocktails is a collection of all IndirectFireCocktails that are both applicable to the specified IndirectFireSystem and can achieve the specified RequiredEffect on the specified TargetType.
- If ApplicableCocktails is empty - a Null Native Type is returned, otherwise the returned value is the IndirectFireCocktail Ci of the ApplicableCocktails for which the following value (between 0.0 and 1.0) is maximal:
      AllocationCollectionQuantity(AllocationCollectionIntersection(COMPi, AmmoConstraints)) / AllocationCollectionQuantity(COMPi)
where:
   + COMPi is the composition of Ci as given by IndirectFireCocktailComposition(Ci).
   + IndirectFireCocktailComposition, AllocationCollectionQuantity and AllocationCollectionIntersection are all Atomic Functions.

Rationale: out of all ApplicableCocktails, Ci is the IndirectFireCocktail for which the quantity of shells that can be fired (under the specified AmmoConstraints) relative to the quantity of shells that need to be fired (as defined by the composition of Ci) is maximal, hence - the most attainable.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>959</Key>
    <Value>
      <English>Indirect Fire System Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>960</Key>
    <Value>
      <English>Required Effect</English>
    </Value>
  </Entry>
  <Entry>
    <Key>961</Key>
    <Value>
      <English>Target Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>962</Key>
    <Value>
      <English>Ammo Constraints</English>
    </Value>
  </Entry>
  <Entry>
    <Key>963</Key>
    <Value>
      <English>Returns the Detection Signature NativeType (sub-type of DETECTION_SIGNATURE) of the specified SimpleUnitNativeType (sub-type of UN_SIMPLE), when detected by a Detection System of the specified DetectionSystemNativeType (sub-type of DETECTION_SYSTEMS).
Detection Signatures are used to decide whether a Simple Unit of NativeType X would appear to be identical to (would have the same Detection Signature as) an expected Simple Unit NativeType Y, when both are detected by a certain type of Detection System.

The returned value is determined based on the External Properties Database (AKA Static Database) as follows:
- The DETECTION_SIGNATURES Property of DETECTION_SYSTEMS is a collection of pairs (Structures) of Properties:
   + SIMPLE_UNIT - a SimpleUnit NativeType, hereinafter U.
   + SIGNATURE - a Detection Signature NativeType, hereinafter S.
- A pair {U,S} means that S is the Detection Signature of U, when detected by the characterized type of Detection System.
- A pair {U,S} is considered Relevant if the specified SimpleUnitNativeType belongs to U.
- A Relevant Pair {U1,S1} is considered More Specific than a Relevant Pair {U2,S2} if U1 belongs to U2.
- The returned value is the Detection Signature (S) of the Most Specific Relevant Pair that characterizes the specified DetectionSystemNativeType. If no Relevant Pair is defined - a NullNativeType is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>964</Key>
    <Value>
      <English>Mounted Vehicles Capacity</English>
    </Value>
  </Entry>
  <Entry>
    <Key>965</Key>
    <Value>
      <English>Returns the number of vehicles of the specified MountedVehicleNativeType that may be mounted/loaded on a single vehicle of type CarrierVehicleNativeType, as defined in the External Properties Database (AKA Static Database) by the VEHICLE_LOADING_CAPACITY typical property of Vehicle Native Types (VEHICLE sub-types).
If a vehicle of type CarrierVehicleNativeType is incapable of carrying vehicles of type MountedVehicleNativeType - zero is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>966</Key>
    <Value>
      <English>Carrier Vehicle Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>967</Key>
    <Value>
      <English>Applicable Periodic Stay Native Type</English>
    </Value>
  </Entry>
  <Entry>
    <Key>968</Key>
    <Value>
      <English>The WHEREABOUTS property of a ROLE defines a collection of Periodic Stay (PERIODIC_STAY) structures, describing the whereabouts of that role holder in different states of readiness at different times throughout a typical day (24 hours). The function returns the native type of the Periodic Stay structure that is applicable to the specified RoleNativeType, in the specified StateOfReadiness, at the specified MinuteOfDay - as defined in the External Properties Database (AKA Static Database).
If several applicable Periodic Stay structures are found - the most specific (see below) of them is returned. If no applicable Periodic Stay structure is found - a Null Native Type is returned.
If the specified RoleNativeType does not exist - an Exception is thrown.

The PERIOD (TypeRef) attribute of a Periodic Stay structure associates it with a particular PERIOD. A PERIOD has the following attributes:
- READINESS (TypeRef) - the STATE_OF_READINESS to which the PERIOD applies. It may be abstract or concrete.
- FROM_MINUTE, TO_MINUTE (decimal hhmm) - the time of day to which this PERIOD applies, for example: the values FROM_MINUTE = 2230, TO_MINUTE = 629 define a period of 8 hours that starts at 22:30 and ends at 6:29 (inclusive) on the following day.

The STAY_IN_OBJECT attribute of a Periodic Stay defines where (variant of of a Cultural Point Terrain Object - TASHTIT_POINT) the Role holder resides at the corresponding PERIOD. Note that STAY_IN_OBJECT attribute is irrelevant for this purpose and is merely described here for general orientation.

Definitions:
- A PERIOD P "contains" the specified MinuteOfDay if either one of the following conditions is met:
   + P.TO_MINUTE &gt;= P.FROM_MINUTE AND (MinuteOfDay &gt;= P.FROM_MINUTE  AND P.TO_MINUTE &gt;= MinuteOfDay)
   + P.FROM_MINUTE &gt; P.TO_MINUTE   AND (MinuteOfDay &gt;= P.FROM_MINUTE OR    P.TO_MINUTE &gt;= MinuteOfDay)
- A PERIOD P is considered "applicable" if the following conditions are both met:
   + The specified StateOfReadiness belongs to P.READINESS
   + P "contains" the specified MinuteOfDay.
- The NumberOfMinutes in a decimal hhmm value D (such as FROM_MINUTE,TO_MINUTE of PERIOD) is given by Floor(D/100)*60 + Modulo(D,100). Examples:
   + NumberOfMinutes(645) = 405
   + NumberOfMinutes(1107) = 667.
- The "duration" in minutes of a PERIOD P is computed as follows:
   If P.TO_MINUTE &gt;= P.FROM_MINUTE
         "duration" equals NumberOfMinutes(P.TO_MINUTE) - NumberOfMinutes(P.FROM_MINUTE) + 1,
   else (P.FROM_MINUTE &gt; P.TO_MINUTE)
        "duration" equals 24*60 - NumberOfMinutes(P.FROM_MINUTE) + NumberOfMinutes(P.TO_MINUTE) + 1.
- A PERIOD A is considered "more specific" than PERIOD B if if either one of the following conditions is met:
   + A.READINESS != B.READINESS AND A.READINESS belongs to B.READINESS.
   + A.READINESS = B.READINESS AND the "duration" of A is shorter than the "duaration" of B.

Process Logic:
- Initialize ApplicablePeriodicStay (return value) to a Null Native Type.
- If the specified RoleNativeType does not exist - terminate with an Exception, quoting the offending RoleNativeType.
- Do for each Periodic Stay PSi of the specified RoleNativeType's WHEREABOUTS collection:
   + If PSi.PERIOD is "applicable" AND (ApplicablePeriodicStay equals Null Native Type OR PSi.PERIOD is "more specific" than ApplicablePeriodicStay.PERIOD)
         ApplicablePeriodicStay = PSi.
- Return ApplicablePeriodicStay.

Example:
Given the following values in External Properties Database:
- ROLE_CIVILIAN having the following WHEREABOUTS collection defined for it, containing the following Periodic Stay structures:
    PERIOD =&gt; {STATE_OF_READINESS,   800 - 1659}, STAY_IN_OBJECT =&gt; TASH_PLANT
    PERIOD =&gt; {STATE_OF_READINESS, 1700 -   759}, STAY_IN_OBJECT =&gt; TASH_BUILDING
    PERIOD =&gt; {STATE_OF_READINESS, 1800 - 1929}, STAY_IN_OBJECT =&gt; TASH_MOSQUE
- ROLE_RESERVIST inheriting ROLE_CIVILIAN and extending its WHEREABOUTS collection with an additional Periodic Stay structure:
    PERIOD =&gt; {SOR_WAR, 0 - 2359}, STAY_IN_OBJECT =&gt; TASH_BUNKER

For input {ROLE_RESERVIST, SOR_Normal,1007}, expected return value is ROLE_CIVILIAN_WHEREABOUTS_1.
For input {ROLE_RESERVIST, SOR_Normal, 1732}, expected return value is ROLE_CIVILIAN_WHEREABOUTS_2.
For input {ROLE_RESERVIST, SOR_Normal, 1840}, expected return value is ROLE_CIVILIAN_WHEREABOUTS_3.
For input {ROLE_RESERVIST, SOR_War, 1840}, expected return value is ROLE_RESERVIST_WHEREABOUTS_1.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>969</Key>
    <Value>
      <English>MinuteOfDay</English>
    </Value>
  </Entry>
  <Entry>
    <Key>970</Key>
    <Value>
      <English>An Integer in the range 0 - 2359 that represents a minute in a 24 hour day. It equals 100*HH+MM, where HH is the hour (0-23) and MM is the minute within that hour. Examples:
- 1947 represents 19:47
- 17 represents 00:17
- 506 represents 5:06</English>
    </Value>
  </Entry>
  <Entry>
    <Key>971</Key>
    <Value>
      <English>Boolean External Parameter Value</English>
    </Value>
  </Entry>
  <Entry>
    <Key>972</Key>
    <Value>
      <English>Returns the value of the specified ExternalParameter - as defined in the External Parameters File (AKA mkrc file).
If no such external parameter is defined - false is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>973</Key>
    <Value>
      <English>ExternalParameter</English>
    </Value>
  </Entry>
  <Entry>
    <Key>974</Key>
    <Value>
      <English>Integer External Parameter Value</English>
    </Value>
  </Entry>
  <Entry>
    <Key>975</Key>
    <Value>
      <English>Returns the value of the specified ExternalParameter - as defined in the External Parameters File (AKA mkrc file).
If no such external parameter is defined - a NullInteger is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>976</Key>
    <Value>
      <English>Real External Parameter Value</English>
    </Value>
  </Entry>
  <Entry>
    <Key>977</Key>
    <Value>
      <English>Returns the value of the specified ExternalParameter - as defined in the External Parameters File (AKA mkrc file).
If no such external parameter is defined - a NullReal is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>978</Key>
    <Value>
      <English>Enumeration External Parameter Value</English>
    </Value>
  </Entry>
  <Entry>
    <Key>979</Key>
    <Value>
      <English>Returns the value of the specified ExternalParameter - as defined in the External Parameters File (AKA mkrc file).
If no such external parameter is defined - a NullEnumeration is returned.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>980</Key>
    <Value>
      <English>Point to String Adaptive</English>
    </Value>
  </Entry>
  <Entry>
    <Key>981</Key>
    <Value>
      <English>Returns the String representation of the specified Point, suitable for display in a user interface that supports multiple coordinate systems (UTM, GEO etc.), with the ability to dynamically change the coordinate system in use.
The returned string may be used to display the specified Point value in the currently selected coordinate system.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>982</Key>
    <Value>
      <English>Direct Fire Salvo Received</English>
    </Value>
  </Entry>
  <Entry>
    <Key>983</Key>
    <Value>
      <English>This Event is sent to a Simple Unit that was targeted (not necessarily hit or damaged) by a direct fire salvo.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>984</Key>
    <Value>
      <English>Shooter</English>
    </Value>
  </Entry>
  <Entry>
    <Key>985</Key>
    <Value>
      <English>The shooting Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>986</Key>
    <Value>
      <English>Damaged Vehicles</English>
    </Value>
  </Entry>
  <Entry>
    <Key>987</Key>
    <Value>
      <English>The number of vehicles in the Target that were damaged by this salvo.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>988</Key>
    <Value>
      <English>Damaged Soldiers</English>
    </Value>
  </Entry>
  <Entry>
    <Key>989</Key>
    <Value>
      <English>The number of soldiers in the Target that were damaged by this salvo.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>990</Key>
    <Value>
      <English>Artillery Salvo Detonated</English>
    </Value>
  </Entry>
  <Entry>
    <Key>991</Key>
    <Value>
      <English>This Event is sent whenever a salvo of Artillery shells detonates, to all Simple Units located within 300m from the Mean Point of Impact.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>992</Key>
    <Value>
      <English>Mean Point of Impact</English>
    </Value>
  </Entry>
  <Entry>
    <Key>993</Key>
    <Value>
      <English>The type of ammunition detonated.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>994</Key>
    <Value>
      <English>Damage Sustained</English>
    </Value>
  </Entry>
  <Entry>
    <Key>995</Key>
    <Value>
      <English>This Event is sent to a Simple Unit that has sustained actual damage (i.e. at least one damaged soldier or vehicle) from whatever reason/cause: direct fire, artillery fire, air to surface munition, land mines, vehicle technical failure, directorate initiated attrition etc.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>996</Key>
    <Value>
      <English>Cause</English>
    </Value>
  </Entry>
  <Entry>
    <Key>997</Key>
    <Value>
      <English>The reason of damage (VULNER_REASON sub-type)</English>
    </Value>
  </Entry>
  <Entry>
    <Key>998</Key>
    <Value>
      <English>The number of vehicles that were damaged.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>999</Key>
    <Value>
      <English>DamagedSoldiers</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1000</Key>
    <Value>
      <English>The number of soldiers that were damaged.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1001</Key>
    <Value>
      <English>Enemy Detections Improved</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1002</Key>
    <Value>
      <English>This Event is sent to a Simple Unit whenever its Detection List is refreshed and at least one enemy detection in it is improved.
A detection is considered to be improved if it is new or if its Detection Level is better than its previous value.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1003</Key>
    <Value>
      <English>Enemy Detections Revised</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1004</Key>
    <Value>
      <English>This Event is sent to a Simple Unit whenever its Detection List is revised and found to contain at least one enemy detection.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1005</Key>
    <Value>
      <English>Obstacle Encountered on Route</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1006</Key>
    <Value>
      <English>This Event is sent to a moving Simple Unit (i.e while executing AtomicMoveAlongRoute/AtomicMoveAndFire) whenever it encounters a linear obstacle object (TOT_LinearObstacle) that crosses the remaining portion of its movement route and the obstacle type is considered movement blocking for the Simple Unit type. For example: for a Tank Simple Unit, an Anti-Tank Ditch is considered movement blocking but a Barbed Wire Fence is not.
If obstacle detection is enabled - the Event is sent as soon as the obstacle blocking the route is detected, otherwise the Event is sent only when the obstacle is actually reached.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1007</Key>
    <Value>
      <English>Obstacle</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1008</Key>
    <Value>
      <English>Simulation Cycle Started</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1009</Key>
    <Value>
      <English>This Event is sent to a Unit whenever calculation of a new simulation cycle (sub-step) is about to be started for it, in order to trigger Reaction Rules implementing ongoing monitoring/decision making logic.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1010</Key>
    <Value>
      <English>Time Step Finished</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1011</Key>
    <Value>
      <English>This Event is sent to a Unit whenever calculation of an entire simulation time step (including "after step" cycle) is finished for it, in order to trigger Reaction Rules implementing ongoing monitoring/decision making logic.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1012</Key>
    <Value>
      <English>Current Time Reset</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1013</Key>
    <Value>
      <English>This Event is sent to a Simple Unit whenever current simulation time is arbitrarily set to a new value. At the time the Event is sent, CurrentTime Atomic Function already returns the new value.
For the avoidance of doubt: the Event is not sent when current simulation time is changed due to normal time progression.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1014</Key>
    <Value>
      <English>Previous Current Time</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1015</Key>
    <Value>
      <English>The previous CurrentTime value, as it was prior to its resetting.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1016</Key>
    <Value>
      <English>New Unit Created</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1017</Key>
    <Value>
      <English>This Event is sent to a unit (hereinafter the Receiver) that was involved in the creation of a new unit, to notify it of the new unit that was created (the NewUnit parameter).
- When the new unit is created by either SplitSimpleUnit, CreateNewSimpleUnit, CreateNewAggregateUnit or CreateNewSubordinateUnit Command - the Receiver is the unit that executed the Command.
- When a MountVehicles Command is being executed, up to two different Events may be sent:
   + If the Simple Unit executing the MountVehicles Command (the passenger) is split - an Event is sent to it,
      with NewUnit parameter specifying the newly created passenger Simple Unit.
   + If the carrier Simple Unit is split - an Event is sent to it,
      with NewUnit parameter specifying the newly created carrier Simple Unit.</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1018</Key>
    <Value>
      <English>New Unit</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1019</Key>
    <Value>
      <English>No Primary Command</English>
    </Value>
  </Entry>
  <Entry>
    <Key>1020</Key>
    <Value>
      <English>This Event is sent to a Simple Unit that has no primary Command to execute.</English>
    </Value>
  </Entry>
</Entries>
